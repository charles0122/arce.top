"use strict";(self.webpackChunkarce_top=self.webpackChunkarce_top||[]).push([[9519],{43407:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"unity-editor-auto-load-entry-scene","metadata":{"permalink":"/arcetop/blog/unity-editor-auto-load-entry-scene","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2024-04-20-unity-editor-auto-load-entry-scene.md","source":"@site/blog/2024-04-20-unity-editor-auto-load-entry-scene.md","title":"Unity\u7f16\u8f91\u6a21\u5f0f\u81ea\u542f\u52a8\u6e38\u620f\u5165\u53e3\u573a\u666f","description":"","date":"2024-04-20T00:00:00.000Z","tags":[{"label":"Editor","permalink":"/arcetop/blog/tags/editor"},{"label":"Unity","permalink":"/arcetop/blog/tags/unity"},{"label":"SceneManagement","permalink":"/arcetop/blog/tags/scene-management"}],"readingTime":3.455,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"Unity Developer (Weak Version)","url":"https://github.com/charles0122","image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","email":"zainai311@qq.com","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"unity-editor-auto-load-entry-scene","title":"Unity\u7f16\u8f91\u6a21\u5f0f\u81ea\u542f\u52a8\u6e38\u620f\u5165\u53e3\u573a\u666f","authors":[{"name":"Arce","title":"Unity Developer (Weak Version)","url":"https://github.com/charles0122","image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","email":"zainai311@qq.com","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"description":"","tags":["Editor","Unity","SceneManagement"]},"unlisted":false,"nextItem":{"title":"Unity ECS Samples - HelloCube","permalink":"/arcetop/blog/Unity-ECS-Samples-HelloCube"}},"content":"![unity open-project1\u573a\u666f\u7ba1\u7406](img/2024-04-20-Unity\u7f16\u8f91\u6a21\u5f0f\u81ea\u542f\u52a8\u6e38\u620f\u5165\u53e3\u573a\u666f/image-20240421001329682.png)\\n\\n:::note \u7b14\u8bb0\\n\\n\u9002\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u573a\u666f\u8f83\u591a\uff0c\u542f\u52a8\u8f83\u590d\u6742\u7684\u9879\u76ee\\n\\n\u6700\u4f73\u5b9e\u8df5\uff1a\u6709\u4e00\u4e2a\u6e38\u620f\u5165\u53e3\u573a\u666f\u505a\u521d\u59cb\u5316\\n\\n:::\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u573a\u666f\u542f\u52a8\u5668\\n\\n![\u7f16\u8f91\u5668\u6548\u679c](img/2024-04-20-Unity\u7f16\u8f91\u6a21\u5f0f\u81ea\u542f\u52a8\u6e38\u620f\u5165\u53e3\u573a\u666f/image-20240421001542178.png)\\n\\n\u6b64\u7c7b\u5728\u7f16\u8f91\u5668\u4e2d\u5de5\u4f5c\u65f6\u81ea\u52a8\u52a0\u8f7d\u5f15\u5bfc\u7a0b\u5e8f\u5c4f\u5e55\uff08\u6784\u5efa\u8bbe\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u573a\u666f\uff09\u3002\u5b83\u8fd8\u6dfb\u52a0\u4e86\u7528\u4e8e\u5207\u6362\u884c\u4e3a\u7684\u83dc\u5355\u9879\u3002\\n\\n```csharp\\n\\n[InitializeOnLoad]\\npublic class SceneBootstrapper\\n{\\n    // \u5c06\u8fd9\u4e9b\u952e\u7528\u4e8e\u201c\u7f16\u8f91\u5668\u201d\u9996\u9009\u9879\\n    private const string k_PreviousScene = \\"PreviousScene\\";\\n    private const string k_ShouldLoadBootstrap = \\"GameEntry\\";\\n\\n    // \u663e\u793a\u4e3a\u83dc\u5355\u540d\u79f0\\n    private const string k_LoadBootstrapMenu = \\"Tools/Auto Load GameEntry Scene With Play/On\\";\\n    private const string k_DontLoadBootstrapMenu = \\"Tools/Auto Load GameEntry Scene With Play/Off\\";\\n\\n    // \u8fd9\u5c06\u83b7\u53d6\u5f15\u5bfc\u573a\u666f\uff0c\u8be5\u573a\u666f\u5fc5\u987b\u662f\u6784\u5efa\u8bbe\u7f6e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u573a\u666f\\n    private static string BootstrapScene => EditorBuildSettings.scenes[0].path;\\n\\n    // \u6b64\u5b57\u7b26\u4e32\u662f\u6211\u4eec\u8fdb\u5165\u64ad\u653e\u6a21\u5f0f\u7684\u573a\u666f\u540d\u79f0\\n    private static string PreviousScene\\n    {\\n        get => EditorPrefs.GetString(k_PreviousScene);\\n        set => EditorPrefs.SetString(k_PreviousScene, value);\\n    }\\n\\n    // \u662f\u5426\u542f\u7528\u4e86\u573a\u666f\u81ea\u542f\u52a8\uff1f\\n    private static bool ShouldLoadBootstrapScene\\n    {\\n        get => EditorPrefs.GetBool(k_ShouldLoadBootstrap, true);\\n        set => EditorPrefs.SetBool(k_ShouldLoadBootstrap, value);\\n    }\\n\\n    // \u9759\u6001\u6784\u9020\u51fd\u6570\u4f7f\u7528 InitializeOnLoad \u5c5e\u6027\u8fd0\u884c\\n    static SceneBootstrapper()\\n    {\\n        // \u4fa6\u542c\u7f16\u8f91\u5668\u66f4\u6539\u64ad\u653e\u72b6\u6001\\n        EditorApplication.playModeStateChanged += OnPlayModeStateChanged;\\n    }\\n\\n    // \u5f53\u7f16\u8f91\u5668\u66f4\u6539\u64ad\u653e\u72b6\u6001\uff08\u4f8b\u5982\u8fdb\u5165\u64ad\u653e\u6a21\u5f0f\uff0c\u9000\u51fa\u64ad\u653e\u6a21\u5f0f\uff09\u65f6\uff0c\u8fd9\u5c06\u8fd0\u884c\\n    private static void OnPlayModeStateChanged(PlayModeStateChange playModeStateChange)\\n    {\\n        // \u5982\u679c\u4ece\u83dc\u5355\u4e2d\u7981\u7528\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\\n        if (!ShouldLoadBootstrapScene)\\n        {\\n            return;\\n        }\\n\\n        switch (playModeStateChange)\\n        {\\n            // \u8fd9\u5c06\u5728\u8fdb\u5165\u64ad\u653e\u6a21\u5f0f\u65f6\u52a0\u8f7d\u5f15\u5bfc\u573a\u666f\\n            case PlayModeStateChange.ExitingEditMode:\\n\\n                PreviousScene = EditorSceneManager.GetActiveScene().path;\\n\\n                if (EditorSceneManager.SaveCurrentModifiedScenesIfUserWantsTo() && IsSceneInBuildSettings(BootstrapScene))\\n                {\\n                    EditorSceneManager.OpenScene(BootstrapScene);\\n                }\\n                break;\\n\\n            // This restores the PreviousScene when exiting Play mode\\n            case PlayModeStateChange.EnteredEditMode:\\n\\n                if (!string.IsNullOrEmpty(PreviousScene))\\n                {\\n                    EditorSceneManager.OpenScene(PreviousScene);\\n                }\\n                break;\\n        }\\n    }\\n\\n    // \u8fd9\u4e9b\u83dc\u5355\u9879\u5207\u6362\u884c\u4e3a\u3002\\n\\n    // \u8fd9\u4f1a\u5c06\u4e00\u4e2a\u540d\u4e3a\u201cTools/Auto Load GameEntry Scene With Play/On\u201d\u7684\u83dc\u5355\u9879\u6dfb\u52a0\u5230 GameSystems \u83dc\u5355\u4e2d\uff0c\u5e76\\n    // \u5982\u679c\u9009\u4e2d\uff0c\u5219\u542f\u7528\u8be5\u884c\u4e3a\u3002\\n    [MenuItem(k_LoadBootstrapMenu)]\\n    private static void EnableBootstrapper()\\n    {\\n        ShouldLoadBootstrapScene = true;\\n    }\\n\\n    // \u9a8c\u8bc1\u4e0a\u8ff0\u51fd\u6570\u548c\u83dc\u5355\u9879\uff0c\u5982\u679c ShouldLoadBootstrapScene \u4e3a true\uff0c\u5219\u8be5\u51fd\u6570\u548c\u83dc\u5355\u9879\u663e\u793a\u4e3a\u7070\u8272\u3002\\n    [MenuItem(k_LoadBootstrapMenu, true)]\\n    private static bool ValidateEnableBootstrapper()\\n    {\\n        return !ShouldLoadBootstrapScene;\\n    }\\n\\n    // \u5c06\u540d\u4e3a\u201cTools/Auto Load GameEntry Scene With Play/Off\u201d\u7684\u83dc\u5355\u9879\u6dfb\u52a0\u5230 GameSystems \u83dc\u5355\u4e2d\uff0c\u5e76\\n    // \u5982\u679c\u9009\u4e2d\uff0c\u5219\u7981\u7528\u8be5\u884c\u4e3a\u3002\\n    [MenuItem(k_DontLoadBootstrapMenu)]\\n    private static void DisableBootstrapper()\\n    {\\n        ShouldLoadBootstrapScene = false;\\n    }\\n\\n    //\u9a8c\u8bc1\u4e0a\u8ff0\u51fd\u6570\u548c\u83dc\u5355\u9879\uff0c\u5982\u679c ShouldLoadBootstrapScene \u4e3a false\uff0c\u5219\u8be5\u51fd\u6570\u548c\u83dc\u5355\u9879\u5c06\u53d8\u7070\u3002\\n    [MenuItem(k_DontLoadBootstrapMenu, true)]\\n    private static bool ValidateDisableBootstrapper()\\n    {\\n        return ShouldLoadBootstrapScene;\\n    }\\n\\n    // scenePath \u662f BuildSettings \u4e2d\u7684\u6709\u6548\u573a\u666f\u5417\uff1f\\n    private static bool IsSceneInBuildSettings(string scenePath)\\n    {\\n        if (string.IsNullOrEmpty(scenePath))\\n            return false;\\n\\n        foreach (var scene in EditorBuildSettings.scenes)\\n        {\\n            if (scene.path == scenePath)\\n            {\\n                return true;\\n            }\\n        }\\n\\n        return false;\\n    }\\n}\\n\\n```\\n\\n## \u573a\u666f\u5feb\u901f\u9009\u62e9\u5668\\n\\n\u7f16\u8f91\u5668\u811a\u672c\u6765\u6e90 [unity\u5f00\u653e\u9879\u76eeChopChop](https://github.com/UnityTechnologies/open-project-1)\\n\\n![unity\u5f00\u653e\u9879\u76ee\u573a\u666f\u5feb\u901f\u9009\u62e9\u5668](img/2024-04-20-Unity\u7f16\u8f91\u6a21\u5f0f\u81ea\u542f\u52a8\u6e38\u620f\u5165\u53e3\u573a\u666f/image-20240421001654924.png)"},{"id":"Unity-ECS-Samples-HelloCube","metadata":{"permalink":"/arcetop/blog/Unity-ECS-Samples-HelloCube","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2024-04-15-Unity-ECS-Samples-HelloCube copy.md","source":"@site/blog/2024-04-15-Unity-ECS-Samples-HelloCube copy.md","title":"Unity ECS Samples - HelloCube","description":"\u6d4b\u8bd5","date":"2024-04-15T00:00:00.000Z","tags":[{"label":"ECS","permalink":"/arcetop/blog/tags/ecs"},{"label":"Unity","permalink":"/arcetop/blog/tags/unity"}],"readingTime":8.41,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"Unity-ECS-Samples-HelloCube","title":"Unity ECS Samples - HelloCube","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["ECS","Unity"],"oid":"oid"},"unlisted":false,"prevItem":{"title":"Unity\u7f16\u8f91\u6a21\u5f0f\u81ea\u542f\u52a8\u6e38\u620f\u5165\u53e3\u573a\u666f","permalink":"/arcetop/blog/unity-editor-auto-load-entry-scene"},"nextItem":{"title":"Voxel House\uff08\u4f53\u7d20\u5c4b\uff09","permalink":"/arcetop/blog/voxelhouse-by-oskar"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\n\\n\u5b98\u65b9\u9879\u76ee\u5730\u5740\uff1a**[Unity-Technologies/EntityComponentSystemSamples (github.com)](https://github.com/Unity-Technologies/EntityComponentSystemSamples)**\\n\\n\x3c!-- truncate --\x3e\\n\\n## Main Thread Sample\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![MainThreadeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/MainThreadeffect.gif)\\n\\n</div>\\n\\n## IJobEntity Samples\\n<div style={{textAlign: \'center\'}}>\\n\\n![MainThreadeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/MainThreadeffect.gif)\\n</div>\\n\\n## Aspects sample\\n<div style={{textAlign: \'center\'}}>\\n\\n![MainThreadeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/Aspectseffect.gif)\\n</div>\\n\\n## Prefabs sample\\n<div style={{textAlign: \'center\'}}>\\n\\n![Prefabseffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/Prefabseffect.gif)\\n\\n</div>\\n\\n\u521b\u5efa\u5927\u91cfcube prefab\u5728\u968f\u673a\u4f4d\u7f6e\uff0c\u5e76\u8ba9\u5b83\u4eec\u9010\u6e10\u4e0b\u843d\uff0c\u5f53\u4f4d\u7f6ey\u5c0f\u4e8e0\u65f6\u9500\u6bc1\uff0c\u5f53\u6240\u6709\u7684cube\u90fd\u88ab\u9500\u6bc1\u90a3\u4e48\u518d\u91cd\u65b0\u521b\u5efa\u5b83\u4eec\\n\\n<Tabs>\\n  <TabItem value=\\"SpawnerAuthoring\\" label=\\"SpawnerAuthoring\\" default>\\n\\n\u5728Spawner \u4e0b\u6302\u8f7d\u811a\u672c SpawnerAuthoring \u521b\u5efaspawner\u7684entity\\n\\n```csharp\\n// An authoring component is just a normal MonoBehavior that has a Baker<T> class.\\n// authoring \u7ec4\u4ef6\u53ea\u662f\u5177\u6709 Baker \u7c7b\u7684\u666e\u901a MonoBehavior<T>\u3002\\npublic class SpawnerAuthoring : MonoBehaviour\\n{\\n    public GameObject Prefab;\\n\\n    // In baking, this Baker will run once for every SpawnerAuthoring instance in a subscene.\\n    // \u5728\u70d8\u7119\u4e2d\uff0c\u6b64 Baker \u5c06\u4e3a\u5b50\u573a\u666f\u4e2d\u7684\u6bcf\u4e2a SpawnerAuthoring \u5b9e\u4f8b\u8fd0\u884c\u4e00\u6b21\u3002\\n    // (Note that nesting an authoring component\'s Baker class inside the authoring MonoBehaviour class\\n    // is simply an optional matter of style.)\\n    // \uff08\u8bf7\u6ce8\u610f\uff0c\u5c06\u521b\u4f5c\u7ec4\u4ef6\u7684 Baker \u7c7b\u5d4c\u5957\u5728\u521b\u4f5c MonoBehaviour \u7c7b\u4e2d\u53ea\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6837\u5f0f\u95ee\u9898\u3002\\n    // Baker<T> \u5c06 T Mono class bake \u6210 entity\\n    class Baker : Baker<SpawnerAuthoring>\\n    {\\n        public override void Bake(SpawnerAuthoring authoring)\\n        {\\n            var entity = GetEntity(TransformUsageFlags.None);\\n            AddComponent(entity, new Spawner\\n                         {\\n                             Prefab = GetEntity(authoring.Prefab, TransformUsageFlags.Dynamic)\\n                         });\\n        }\\n\\n    }\\n}\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"SpawnSystem\\" label=\\"SpawnSystem\\">\\n    SpawnSystem \u7528\u6765\u751f\u6210\u6240\u6709\u7684cube\\n\\n```csharp\\npublic partial struct SpawnSystem : ISystem\\n{\\n    uint updateCounter;\\n\\n    [BurstCompile]\\n    public void OnCreate(ref SystemState state)\\n    {\\n        // This call makes the system not update unless at least one entity in the world exists that has the Spawner component.\\n        state.RequireForUpdate<Spawner>();\\n        state.RequireForUpdate<ExecutePrefabs>();\\n    }\\n\\n    [BurstCompile]\\n    public void OnUpdate(ref SystemState state)\\n    {\\n        // Create a query that matches all entities having a RotationSpeed component.\\n        // \u521b\u5efa\u4e00\u4e2aquery\u6765\u67e5\u627e\u6240\u6709 Entities \u5305\u542b RotationSpeed component \u4e5f\u5c31\u662f cubes\\n        // (The query is cached in source generation, so this does not incur a cost of recreating it every update.)\\n        // query \u4f1a\u88ab\u7f13\u51b2\u5230source generation\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6bcf\u6b21update\u90fd\u91cd\u65b0\u521b\u5efa\\n        var spinningCubesQuery = SystemAPI.QueryBuilder().WithAll<RotationSpeed>().Build();\\n\\n        // Only spawn cubes when no cubes currently exist.\\n        // \u53ea\u5728\u6240\u6709\u7684cube\u90fd\u88ab\u9500\u6bc1\u624d\u521b\u5efa\\n        if (spinningCubesQuery.IsEmpty)\\n        {\\n            // GetSingleton<T>()\u5c06\u83b7\u5f97instance\u7684\u5355\u4f8b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2aspawner\u5728\u573a\u666f\u4e2d\\n            // \u8fd9\u4e2a\u51fd\u6570\u5728\u573a\u666f\u4e2d\u4e0d\u5b58\u5728\u6216\u8005\u5b58\u5728\u4e00\u4e2a\u4ee5\u4e0a\u7684\u5305\u542bSpawner component\u7684entity\u65f6\u5c31\u4f1a\u62a5\u9519\\n            // \u56e0\u6b64\u9700\u8981\u5728OnCreate\u4e0a\u52a0\u4e0a\u5bf9Spawner\u7684\u4f9d\u8d56\uff0c\u786e\u4fdd\u81f3\u5c11\u6709\u4e00\u4e2aSpawner\u65f6\u624dupdate\\n            var prefab = SystemAPI.GetSingleton<Spawner>().Prefab;\\n\\n            // Instantiating an entity creates copy entities with the same component types and values.  // \u521b\u5efa entities -> cube 500\u4e2a\\n            var instances = state.EntityManager.Instantiate(prefab, 500, Allocator.Temp);\\n\\n            // Unlike new Random(), CreateFromIndex() hashes the random seed\\n            // so that similar seeds don\'t produce similar results.\\n            var random = Random.CreateFromIndex(updateCounter++);\\n\\n            // Update the entity\'s LocalTransform component with the new position.\\n            // \u5bf9 component \u7684\u4e71\u5e8f\u67e5\u8be2\u662f\u975e\u5e38\u6d88\u8017\u6027\u80fd\u7684\uff0c\u4e00\u822c\u5c3d\u91cfquery component\u5f97\u5230entity\uff0c\u7136\u540e\u8fed\u4ee3\u8bbf\u95eecomponent\\n            // \u6700\u63a8\u8350\u7684\u505a\u6cd5\u8fd8\u662f\u5148query\u518d\u8bbf\u95ee\u6bcf\u4e2atransform ???\\n            // TODO: SystemAPI.GetComponentRW \u53ef\u4ee5\u6307\u5b9a\u4ece\u5b9e\u4f53\u4e2d\u83b7\u53d6\u7ec4\u4ef6    SystemAPI.Query \u597d\u50cf\u4e0d\u884c\\n            foreach (var (trans,speed) in SystemAPI.Query<RefRW<LocalTransform>,RefRO<RotationSpeed>>()) {\\n                trans.ValueRW.Position = (random.NextFloat3() - new float3(0.5f, 0, 0.5f)) * 20;\\n            }\\n\\n            foreach (var entity in instances)\\n            {\\n                var transform = SystemAPI.GetComponentRW<LocalTransform>(entity);\\n                transform.ValueRW.Position = (random.NextFloat3() - new float3(0.5f, 0, 0.5f)) * 20;\\n            }\\n        }\\n    }\\n}\\n\\n```\\n\\n</TabItem>\\n\\n<TabItem value=\\"FallAndDestroySystem\\" label=\\"FallAndDestroySystem\\">\\n    FallAndDestroySystem cube\u7684\u4e0b\u843d\u548c\u9500\u6bc1\\n\\n```csharp\\npublic partial struct FallAndDestroySystem : ISystem\\n{\\n    [BurstCompile]\\n    public void OnCreate(ref SystemState state) {\\n\\n        state.RequireForUpdate<ExecutePrefabs>();\\n    }\\n\\n    [BurstCompile]\\n    public void OnUpdate(ref SystemState state)\\n    {\\n        // rotation\\n        float deltaTime = SystemAPI.Time.DeltaTime;\\n        foreach (var (transform, speed) in\\n                 SystemAPI.Query<RefRW<LocalTransform>, RefRO<RotationSpeed>>())\\n        {\\n            // ValueRW and ValueRO both return a ref to the actual component value.\\n            // The difference is that ValueRW does a safety check for read-write access while\\n            // ValueRO does a safety check for read-only access.\\n            // ValueRW \u548c ValueRO \u90fd\u8fd4\u56de\u5bf9\u5b9e\u9645\u7ec4\u4ef6\u503c\u7684\u5f15\u7528\u3002\u533a\u522b\u5728\u4e8e\uff0cValueRW \u5bf9\u8bfb\u5199\u8bbf\u95ee\u8fdb\u884c\u5b89\u5168\u68c0\u67e5\uff0c\u800c ValueRO \u5bf9\u53ea\u8bfb\u8bbf\u95ee\u8fdb\u884c\u5b89\u5168\u68c0\u67e5\u3002\\n            transform.ValueRW = transform.ValueRO.RotateY(\\n                speed.ValueRO.RadiansPerSecond * deltaTime);\\n        }\\n\\n        // An EntityCommandBuffer created from EntityCommandBufferSystem.Singleton will be\\n        // played back and disposed by the EntityCommandBufferSystem when it next updates.\\n        // \u4ece EntityCommandBufferSystem.Singleton \u521b\u5efa\u7684 EntityCommandBuffer \u5c06\u5728 EntityCommandBufferSystem \u4e0b\u6b21\u66f4\u65b0\u65f6\u8fd0\u884c\u5e76\u91ca\u653e\u3002\\n        var ecbSingleton = SystemAPI.GetSingleton<BeginSimulationEntityCommandBufferSystem.Singleton>();\\n        var ecb = ecbSingleton.CreateCommandBuffer(state.WorldUnmanaged);\\n\\n        // Downward vector\\n        var movement = new float3(0, -SystemAPI.Time.DeltaTime * 5f, 0);\\n\\n        // WithAll() includes RotationSpeed in the query, but\\n        // the RotationSpeed component values will not be accessed.\\n        // WithEntityAccess() includes the Entity ID as the last element of the tuple.\\n        // WithAll\uff08\uff09 \u5728\u67e5\u8be2\u4e2d\u5305\u542b RotationSpeed\uff0c\u4f46\u4e0d\u4f1a\u8bbf\u95ee RotationSpeed \u7ec4\u4ef6\u503c\u3002WithEntityAccess\uff08\uff09 \u5c06\u5b9e\u4f53 ID \u4f5c\u4e3a\u5143\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5305\u542b\u5728\u5185\u3002\\n        foreach (var (transform, entity) in\\n                 SystemAPI.Query<RefRW<LocalTransform>>()\\n                 .WithAll<RotationSpeed>()\\n                 .WithEntityAccess())\\n        {\\n            transform.ValueRW.Position += movement;\\n            if (transform.ValueRO.Position.y < 0)\\n            {\\n                // Making a structural change would invalidate the query we are iterating through,\\n                // so instead we record a command to destroy the entity later.\\n                // \u8fdb\u884c\u7ed3\u6784\u66f4\u6539\u4f1a\u4f7f\u6211\u4eec\u6b63\u5728\u8fed\u4ee3\u7684\u67e5\u8be2\u5931\u6548\uff0c\u56e0\u6b64\u6211\u4eec\u7a0d\u540e\u4f1a\u8bb0\u5f55\u4e00\u4e2a\u547d\u4ee4\u4ee5\u9500\u6bc1\u5b9e\u4f53\u3002\\n                ecb.DestroyEntity(entity);\\n            }\\n        }\\n    }\\n}\\n```\\n\\n</TabItem>\\n</Tabs>\\n\\n## IJobChunk\\n<div style={{textAlign: \'center\'}}>\\n\\n![MainThreadeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/MainThreadeffect.gif)\\n</div>\\nIJobChunk\u4ee3\u66ffIJobEntity\u6765\u5904\u7406 cube \u7684\u65cb\u8f6c\\n\\n:::info IJobEntity \u548c IJobChunk \u7684\u533a\u522b:\\n\\nIJobEntity \u4e3a\u4e0e\u67e5\u8be2\u5339\u914d\u7684\u6bcf\u4e2a`\u5b9e\u4f53`\u8c03\u7528\u4e00\u6b21\\n\\nIJobChunk \u4e3a\u4e0e\u67e5\u8be2\u5339\u914d\u7684\u6bcf\u4e2a`\u533a\u5757`\u8c03\u7528\u4e00\u6b21\\n:::\\n\\n<Tabs>\\n\\n<TabItem value=\\"RotationJob\\" label=\\"RotationJob\\">\\n\\n\\n```csharp\\n[BurstCompile]\\nstruct RotationJob : IJobChunk\\n{\\n    // \u6bd4\u8f83 IJobEntity, \u8fd9\u91cc\u7684\u53d8\u91cf\u662fComponentTypeHandle<T> ; \u800cIJobEntity\u53ef\u4ee5\u5728Execute\u4f7f\u7528ref T\\n    public ComponentTypeHandle<LocalTransform> TransformTypeHandle;\\n    [ReadOnly] public ComponentTypeHandle<RotationSpeed> RotationSpeedTypeHandle;\\n    public float DeltaTime;\\n\\n    // v128 \u8868\u793a 128 \u4f4d SIMD \u503c\\n    public void Execute(in ArchetypeChunk chunk, int unfilteredChunkIndex, bool useEnabledMask,\\n                        in v128 chunkEnabledMask)\\n    {\\n        // The useEnableMask parameter is true when one or more entities in\\n        // the chunk have components of the query that are disabled.\\n        // If none of the query component types implement IEnableableComponent,\\n        // we can assume that useEnabledMask will always be false.\\n        // However, it\'s good practice to add this guard check just in case\\n        // someone later changes the query or component types.\\n        // \u5f53\u533a\u5757\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5b9e\u4f53\u5177\u6709 disable \u7684\u67e5\u8be2\u7ec4\u4ef6\u65f6\uff0cuseEnableMask \u53c2\u6570\u4e3a true\u3002\u5982\u679c\u67e5\u8be2\u7ec4\u4ef6\u7c7b\u578b\u5747\u672a\u5b9e\u73b0 IEnableComponent\uff0c\\n        // \u5219\u53ef\u4ee5\u5047\u5b9a useEnabledMask \u5c06\u59cb\u7ec8\u4e3a false\u3002\u4f46\u662f\uff0c\u6700\u597d\u6dfb\u52a0\u6b64\u4fdd\u62a4\u68c0\u67e5\uff0c\u4ee5\u9632\u4ee5\u540e\u6709\u4eba\u66f4\u6539\u67e5\u8be2\u6216\u7ec4\u4ef6\u7c7b\u578b\u3002\\n        Assert.IsFalse(useEnabledMask);\\n\\n        var transforms = chunk.GetNativeArray(ref TransformTypeHandle);\\n        var rotationSpeeds = chunk.GetNativeArray(ref RotationSpeedTypeHandle);\\n        for (int i = 0, chunkEntityCount = chunk.Count; i < chunkEntityCount; i++)\\n        {\\n            transforms[i] = transforms[i].RotateY(rotationSpeeds[i].RadiansPerSecond * DeltaTime);\\n        }\\n    }\\n}\\n```\\n\\n</TabItem>\\n\\n<TabItem value=\\"RotationSystem\\" label=\\"RotationSystem\\">\\n\\n```csharp\\npublic partial struct RotationSystem : ISystem\\n{\\n    [BurstCompile]\\n    public void OnCreate(ref SystemState state)\\n    {\\n        state.RequireForUpdate<ExecuteIJobChunk>();\\n    }\\n\\n    [BurstCompile]\\n    public void OnUpdate(ref SystemState state)\\n    {\\n        var spinningCubesQuery = SystemAPI.QueryBuilder().WithAll<RotationSpeed, LocalTransform>().Build();\\n\\n        var job = new RotationJob\\n        {\\n            TransformTypeHandle = SystemAPI.GetComponentTypeHandle<LocalTransform>(),\\n            RotationSpeedTypeHandle = SystemAPI.GetComponentTypeHandle<RotationSpeed>(true),\\n            DeltaTime = SystemAPI.Time.DeltaTime\\n        };\\n\\n        // Unlike an IJobEntity, an IJobChunk must be manually passed a query.\\n        // Furthermore, IJobChunk does not pass and assign the state.Dependency JobHandle implicitly.\\n        // (This pattern of passing and assigning state.Dependency ensures that the entity jobs scheduled\\n        // in different systems will depend upon each other as needed.)\\n        //\u4e0e IJobEntity \u4e0d\u540c\uff0c\u5fc5\u987b\u624b\u52a8\u5411 IJobChunk \u4f20\u9012\u67e5\u8be2\u3002\u6b64\u5916\uff0cIJobChunk \u4e0d\u4f1a\u4f20\u9012\u548c\u5206\u914d\u72b6\u6001\u3002\\n        //\u9690\u5f0f\u4f9d\u8d56\u9879 JobHandle\u3002\uff08\u8fd9\u79cd\u4f20\u9012\u548c\u5206\u914d\u72b6\u6001\u7684\u6a21\u5f0f\u3002\u4f9d\u8d56\u5173\u7cfb\u53ef\u786e\u4fdd\u5728\u4e0d\u540c\u7cfb\u7edf\u4e2d\u8c03\u5ea6\u7684\u5b9e\u4f53\u4f5c\u4e1a\u5c06\u6839\u636e\u9700\u8981\u76f8\u4e92\u4f9d\u8d56\u3002\\n        state.Dependency = job.Schedule(spinningCubesQuery, state.Dependency);\\n    }\\n}\\n```\\n\\n</TabItem>\\n\\n</Tabs>\\n\\n## Reparenting sample\\n<div style={{textAlign: \'center\'}}>\\n\\n![Reparentingeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/Reparentingeffect.gif)\\n</div>\\n\u8ba9\u5b50Cube\u5468\u671f\u6027\u7684\u6302\u8f7d\u548c\u5378\u8f7d\u5728\u7236Cube\u4e0a\uff0c\u6302\u8f7d\u65f6\u8ddf\u968f\u65cb\u8f6c\\n\\n## EnableableComponents Sample\\n<div style={{textAlign: \'center\'}}>\\n\\n![Enableableeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/Enableableeffect.gif)\\n</div>\\n\\n## GameObjectSync\\n<div style={{textAlign: \'center\'}}>\\n\\n![MainThreadeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/MainThreadeffect.gif)\\n</div>\\n\\n## CrossQuery\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![CrossQueryeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/CrossQueryeffect.gif)\\n</div>\\n\\n## RandomSpawn\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![RandomSpawneffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/RandomSpawneffect.gif)\\n</div>\\n\\n## FirstPersonController\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![FirstPersonControllereffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/FirstPersonControllereffect.gif)\\n</div>\\n\\n## FixedTimestep\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![FixedTimestepeffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/FixedTimestepeffect.gif)\\n\\n</div>\\n\\n\u5b9e\u4f8b\u5316\u6bcf\u4e2a\u7cfb\u7edf\u66f4\u65b0\u7684\u4e00\u4e2a\u5b9e\u4f53\u3002\u6bcf\u4e2a\u663e\u793a\u7684\u5e27\u66f4\u65b0\u4e00\u6b21\u3002\uff08\u53d6\u51b3\u4e8e\u5e27\u901f\u7387\uff09\\n\\n\u5b9e\u4f8b\u5316\u6bcf\u4e2a\u7cfb\u7edf\u66f4\u65b0\u7684\u4e00\u4e2a\u5b9e\u4f53\u3002\u66f4\u65b0\u901f\u7387\u7531\u4e0b\u9762\u7684\u6ed1\u5757\u63a7\u5236\u3002\uff08\u4e0e\u5e27\u901f\u7387\u65e0\u5173\uff09\\n\\n## CustomTransforms\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![CustomTransformseffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/CustomTransformseffect.gif)\\n</div>\\n\\n## StateChange\\n\\n## ClosestTarget\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![ClosestTargetseffect](img/2024-04-15-Unity-ECS-Samples-HelloCube/ClosestTargetseffect.gif)\\n\\n</div>"},{"id":"voxelhouse-by-oskar","metadata":{"permalink":"/arcetop/blog/voxelhouse-by-oskar","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2024-01-19-voxelhouse-by-oskar.md","source":"@site/blog/2024-01-19-voxelhouse-by-oskar.md","title":"Voxel House\uff08\u4f53\u7d20\u5c4b\uff09","description":"","date":"2024-01-19T00:00:00.000Z","tags":[{"label":"PCG","permalink":"/arcetop/blog/tags/pcg"},{"label":"Wave Function Collapse","permalink":"/arcetop/blog/tags/wave-function-collapse"},{"label":"Unity","permalink":"/arcetop/blog/tags/unity"},{"label":"Marching Cubes","permalink":"/arcetop/blog/tags/marching-cubes"}],"readingTime":11.6,"hasTruncateMarker":true,"authors":[{"name":"OskarSt\xe5lberg","title":"TA","url":"https://oskarstalberg.tumblr.com/","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"voxelhouse-by-oskar","title":"Voxel House\uff08\u4f53\u7d20\u5c4b\uff09","author":"OskarSt\xe5lberg","author_title":"TA","author_url":"https://oskarstalberg.tumblr.com/","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"","tags":["PCG","Wave Function Collapse","Unity","Marching Cubes"],"oid":"oid"},"unlisted":false,"prevItem":{"title":"Unity ECS Samples - HelloCube","permalink":"/arcetop/blog/Unity-ECS-Samples-HelloCube"},"nextItem":{"title":"\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248","permalink":"/arcetop/blog/Configure-the-Docker-Edition-microservice-environment-for-the-local-VM"}},"content":"\u5206\u89e3\u4f53\u7d20\u5c4b\u6f14\u793a \u4f5c\u8005\uff1aOskar St\xe5lberg\\n\\n<div style={{textAlign: \'center\' }}>\\n\\n![image-20240119161203130](img/2024-01-19-voxelhouse-by-oskar/image-20240119161203130.png)\\n\\n</div>\\n\\n**[Voxel House \u8bd5\u73a9\u5730\u5740](https://oskarstalberg.com/game/house/index.html)**\\n\\n## \u4ecb\u7ecd\\n\\n\u6211\u7684\u9879\u76ee\u901a\u5e38\u56f4\u7ed5\u7740\u6211\u60f3\u63a2\u7d22\u7684\u4e00\u4e9b\u4e2d\u5fc3\u601d\u60f3\u5c55\u5f00\u3002\u5728\u8fd9\u91cc\uff0c\u8fd9\u4e2a\u4e2d\u5fc3\u601d\u60f3\u662f\u6a21\u5757\u5316\u56fe\u5757\u96c6\u7684\u4e00\u79cd\u7279\u5b9a\u7684\u5185\u5bb9\u9a71\u52a8\u65b9\u6cd5\uff0c\u6211\u5df2\u7ecf\u60f3\u5230\u4e86\u4e00\u6bb5\u65f6\u95f4\u3002\\n\u6b64\u9879\u76ee\u53ef\u4ee5\u5728 Maya \u4e2d\u521b\u5efa\u4e3a Python \u811a\u672c\uff0c\u4e5f\u53ef\u4ee5\u5728 Houdini \u4e2d\u521b\u5efa\u4e3a\u8282\u70b9\u56fe\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6211\u4e0d\u5e0c\u671b\u6211\u7684\u6700\u7ec8\u6f14\u793a\u6750\u6599\u662f\u4ee5\u7070\u76d2 Maya \u573a\u666f\u4e3a\u80cc\u666f\u7684\u6c89\u95f7\u53d9\u8ff0\u7684 youtube \u526a\u8f91\uff0c\u56e0\u6b64\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u4ea4\u4e92\u5f0f Web \u6f14\u793a\u3002\\n\u4f5c\u4e3a\u4e00\u540d\u6280\u672f\u827a\u672f\u5bb6\uff0c\u6211\u7684\u6280\u80fd\u8303\u56f4\u81f3\u5173\u91cd\u8981;\u6211\u4e0d\u662f\u4e00\u4e2a\u5927\u5e08\u7ea7\u7684\u827a\u672f\u5bb6\uff0c\u4e5f\u4e0d\u662f\u4e00\u4e2a\u5408\u683c\u7684\u7a0b\u5e8f\u5458\uff0c\u4f46\u6211\u4e24\u8005\u90fd\u6709\u4e00\u90e8\u5206\u3002\u6211\u6700\u64c5\u957f\u827a\u672f\u4e0e\u79d1\u6280\u7684\u4ea4\u6c47\u5904;\u7a0b\u5e8f\u548c\u5de5\u827a\u3002\\n\u7f51\u7edc\u6f14\u793a\u662f\u5c55\u793a\u8fd9\u4e9b\u6280\u80fd\u7684\u5b8c\u7f8e\u5a92\u4ecb\u3002\\n\\n## \u5f04\u6e05\u695a\u74f7\u7816\\n\\n**\u6838\u5fc3\u6982\u5ff5\u662f\u8fd9\u6837\u7684\uff1a\u74f7\u7816\u662f\u653e\u7f6e\u5728\u65b9\u5757\u4e4b\u95f4\u7684\u89d2\u843d\uff0c\u800c\u4e0d\u662f\u65b9\u5757\u7684\u4e2d\u5fc3\u3002**\\n\u56fe\u5757\u7531\u5b83\u4eec\u5468\u56f4\u7684\u65b9\u5757\u5b9a\u4e49\uff1a\u4e0e\u89d2\u843d\u4e2d\u4e00\u4e2a\u65b9\u5757\u76f8\u90bb\u7684\u65b9\u5757\u7684\u65b9\u5757\u5c06\u662f 1,0,0,0,0,0,0;\u8868\u793a\u76f4\u5899\u7684\u74f7\u7816\u5c06\u662f 1,1,1,1,0,0,0,0\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119161321028](img/2024-01-19-voxelhouse-by-oskar/image-20240119161321028.png)\\n\\n</div>\\n\\n\x3c!-- truncate --\x3e\\n\\n\u7531\u4e8e\u6bcf\u4e2a\u89d2\u88ab 8 \u4e2a\u53ef\u80fd\u7684\u65b9\u5757\u5305\u56f4\uff0c\u6bcf\u4e2a\u65b9\u5757\u53ef\u4ee5\u662f\u5b58\u5728\u6216\u4e0d\u5b58\u5728\u7684 2 \u79cd\u53ef\u80fd\u72b6\u6001\uff0c\u56e0\u6b64\u53ef\u80fd\u7684\u65b9\u5757\u6570\u91cf\u4e3a 2^8= 256\u3002\u8fd9\u6bd4\u6211\u60f3\u8981\u5efa\u6a21\u7684\u5757\u8981\u591a\u5f97\u591a\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u4e2a\u811a\u672c\u6765\u5f04\u6e05\u695a\u8fd9\u4e9b\u56fe\u5757\u4e2d\u54ea\u4e9b\u662f\u771f\u6b63\u72ec\u7279\u7684\uff0c\u54ea\u4e9b\u56fe\u5757\u53ea\u662f\u5176\u4ed6\u56fe\u5757\u7684\u65cb\u8f6c\u3002\\n\u811a\u672c\u544a\u8bc9\u6211\uff0c\u6211\u5fc5\u987b\u5bf9 67 \u4e2a\u72ec\u7279\u7684\u56fe\u5757\u8fdb\u884c\u5efa\u6a21 - \u8fd9\u4e2a\u6570\u5b57\u8981\u5bb9\u6613\u5f97\u591a\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119161432128](img/2024-01-19-voxelhouse-by-oskar/image-20240119161432128.png)\\n\\n</div>\\n\\n\u6211\u4e5f\u53ef\u4ee5\u6392\u9664\u5176\u4ed6\u74f7\u7816\u7684\u7ffb\u8f6c\u7248\u672c\uff0c\u8fd9\u5c06\u4f7f\u6570\u5b57\u8fdb\u4e00\u6b65\u4e0b\u964d\u3002\u4f46\u662f\uff0c\u6211\u51b3\u5b9a\u4fdd\u7559\u8fd9\u4e9b\uff0c\u4ee5\u4fbf\u6211\u53ef\u4ee5\u5236\u4f5c\u4e00\u4e9b\u4e0d\u5bf9\u79f0\u7684\u5e73\u94fa\u529f\u80fd\u3002\\n\u60a8\u5728\u5efa\u7b51\u7269\u51f9\u89d2\u5904\u770b\u5230\u7684\u6392\u6c34\u7ba1\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\\n\\n## Maya \u4e2d\u7684\u5e03\u5c14\u8bbe\u7f6e\\n\\n\u4f5c\u4e3a\u6280\u672f\u827a\u672f\u5bb6\uff0c\u6211\u7ecf\u5e38\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u5728\u5de5\u4f5c\u6d41\u7a0b\u4e0a\uff0c\u800c\u4e0d\u662f\u82b1\u5728\u5b9e\u9645\u5de5\u4f5c\u4e0a\u3002\u5373\u4f7f\u8003\u8651\u5230\u65cb\u8f6c\u6392\u5217\uff0c\u8fd9\u4e2a\u9879\u76ee\u4ecd\u7136\u6d89\u53ca\u5927\u91cf\u7684 3D \u7f51\u683c\u9700\u8981\u624b\u52a8\u521b\u5efa\u548c\u8ddf\u8e2a\u3002\\n\u8be5\u9879\u76ee\u7684\u6a21\u5757\u5316\u7279\u6027\u4e5f\u4f7f\u5f97\u5728 Maya \u4e4b\u5916\u7684\u9002\u5f53\u4e0a\u4e0b\u6587\u4e2d\u6301\u7eed\u67e5\u770b\u548c\u8bc4\u4f30\u6a21\u578b\u975e\u5e38\u91cd\u8981\u3002\u5bfc\u51fa\u8fc7\u7a0b\u5fc5\u987b\u5feb\u901f\u7b80\u4fbf\uff0c\u6211\u51b3\u5b9a\u7f16\u5199\u4e00\u4e2a\u5c0f\u7684 python \u811a\u672c\u6765\u5e2e\u52a9\u6211\u3002\\n\u9996\u5148\uff0c\u811a\u672c\u5c06\u6211\u6240\u6709\u7684\u7f51\u683c\u5408\u5e76\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u5176\u6b21\uff0c\u6bcf\u4e2a\u56fe\u5757\u7684\u8fb9\u754c\u6846\u7ee7\u7eed\u4f7f\u7528 Maya \u7684\u5e03\u5c14\u8fd0\u7b97\u526a\u5207\u51fa\u6b64\u5408\u5e76\u7f51\u683c\u7684\u7279\u5b9a\u5207\u7247\u3002\\n\u6240\u6709\u5207\u53e3\u5757\u90fd\u7ee7\u627f\u5176\u8fb9\u754c\u6846\u4e2d\u7684\u540d\u79f0\u548c\u53d8\u6362\uff0c\u5e76\u4e00\u8d77\u5bfc\u51fa\u4e3a fbx\u3002\\n\\n\u8fd9\u4e0d\u4ec5\u4f7f\u5bfc\u51fa\u8fc7\u7a0b\u6210\u4e3a\u4e00\u952e\u5f0f\u89e3\u51b3\u65b9\u6848\uff0c\u8fd8\u610f\u5473\u7740\u6211\u4e0d\u5fc5\u4fdd\u6301 Maya \u573a\u666f\u7684\u6574\u6d01\u3002\u7f51\u683c\u7684\u540d\u79f0\u3001\u5b83\u4eec\u7684\u7236\u7ea7\u6216\u5b83\u4eec\u662f\u5426\u6b63\u786e\u5408\u5e76\u5e76\u4e0d\u91cd\u8981\u3002\\n\u6211\u8c03\u6574\u4e86\u6211\u7684 Maya \u811a\u672c\uff0c\u4ee5\u5141\u8bb8\u76f8\u540c\u56fe\u5757\u7c7b\u578b\u7684\u591a\u4e2a\u53d8\u4f53\u3002\u7136\u540e\uff0c\u6211\u7684 Unity \u811a\u672c\u4ece\u8be5\u53d8\u4f53\u6c60\u4e2d\u968f\u673a\u9009\u62e9\u5b83\u5b58\u5728\u7684\u5730\u65b9\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u67d0\u4e9b\u8fb9\u754c\u6846\u6bd4\u5176\u4ed6\u8fb9\u754c\u6846\u5927\u3002\\n\u8fd9\u4e9b\u9002\u7528\u4e8e\u9876\u70b9\u8d85\u51fa\u5176\u5206\u914d\u4f53\u79ef\u7684\u56fe\u5757\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119161615206](img/2024-01-19-voxelhouse-by-oskar/image-20240119161615206.png)\\n</div>\\n\\n## \u73af\u5883\u906e\u853d\\n\\n\u7167\u660e\u5bf9\u4e8e\u4f20\u8fbe 3D \u5f62\u72b6\u548c\u826f\u597d\u7684\u7a7a\u95f4\u611f\u81f3\u5173\u91cd\u8981\u3002\u7531\u4e8e\u514d\u8d39\u7248Unity\u7684\u6280\u672f\u9650\u5236\uff0c\u6211\u65e0\u6cd5\u8bbf\u95ee\u5b9e\u65f6\u9634\u5f71\u6216ssao\uff0c\u4e5f\u65e0\u6cd5\u7f16\u5199\u81ea\u5df1\u7684\u9634\u5f71\uff0c\u56e0\u4e3a\u514d\u8d39\u7684Unity\u4e0d\u5141\u8bb8\u6e32\u67d3\u76ee\u6807\u3002\\n\u89e3\u51b3\u65b9\u6848\u662f\u5728\u8be5\u9879\u76ee\u7684\u5757\u72b6\u6027\u8d28\u4e2d\u627e\u5230\u7684\u3002\u6bcf\u4e2a\u5757\u90fd\u8868\u793a 3D \u7eb9\u7406\u4e2d\u7684\u4f53\u7d20\u3002\u867d\u7136 Unity \u4e0d\u5141\u8bb8\u6211\u5728 GPU \u4e0a\u7ed8\u5236\u6e32\u67d3\u76ee\u6807\uff0c\u4f46\u5b83\u786e\u5b9e\u5141\u8bb8\u6211\u5728 CPU \u4e0a\u4ece\u811a\u672c\u64cd\u4f5c\u7eb9\u7406\u3002\\n\uff08\u5f53\u7136\uff0c\u6bcf\u4e2a\u50cf\u7d20\u7684\u901f\u5ea6\u8981\u6162\u5f97\u591a\uff0c\u4f46\u5bf9\u4e8e\u6211\u7684\u76ee\u7684\u6765\u8bf4\u5df2\u7ecf\u8db3\u591f\u5feb\u4e86\u3002\u53ea\u9700\u5728\u6cd5\u7ebf\u7684\u5927\u65b9\u5411\u4e0a\u5bf9\u8be5\u50cf\u7d20\u8fdb\u884c\u91c7\u6837\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e0d\u9519\u7684\u73af\u5883\u5149\u906e\u853d\u8fd1\u4f3c\u503c\u3002\\n\\n\u6211\u8bd5\u56fe\u5728\u672a\u70b9\u4eae\u7684\u989c\u8272\u7eb9\u7406\u4e0a\u4e58\u4ee5\u8fd9\u4e2aAO\uff0c\u4f46\u7ed3\u679c\u592a\u6697\u592a\u65e0\u804a\u4e86\u3002\\n\u6211\u51b3\u5b9a\u91c7\u7528\u4e00\u79cd\u65b9\u6cd5\uff0c\u5229\u7528\u6211\u65b0\u83b7\u5f97\u7684 3D \u7eb9\u7406\u7ecf\u9a8c\uff1aAO \u4e0d\u4ec5\u4f7f\u50cf\u7d20\u53d8\u6697\uff0c\u8fd8\u4f7f\u50cf\u7d20\u671d\u5411 3D LUT\uff0c\u4f7f\u5176\u66f4\u84dd\u3001\u9971\u548c\u5ea6\u66f4\u4f4e\u3002\\n\u7ed3\u679c\u7ed9\u4e86\u6211\u5f88\u5927\u7684\u8272\u8c03\u53d8\u5316\uff0c\u800c\u6ca1\u6709\u592a\u82db\u523b\u7684\u503c\u53d8\u5316\u3002\u8fd9\u4e2a\u7167\u660e\u6a21\u578b\u7ed9\u4e86\u6211\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u6240\u8ffd\u6c42\u7684\u67d4\u548c\u548c\u5b81\u9759\u7684\u611f\u89c9\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119161653210](img/2024-01-19-voxelhouse-by-oskar/image-20240119161653210.png)\\n\\n</div>\\n\\n## \u7279\u6b8a\u4ef6\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119161716120](img/2024-01-19-voxelhouse-by-oskar/image-20240119161716120.png)\\n</div>\\n\\n\\n\u5f53\u60a8\u542f\u52a8\u6f14\u793a\u65f6\uff0c\u5b83\u5c06\u81ea\u52a8\u4e3a\u60a8\u751f\u6210\u4e00\u4e2a\u968f\u673a\u7ed3\u6784\u3002\u6839\u636e\u8bbe\u8ba1\uff0c\u8be5\u7ed3\u6784\u4e0d\u5305\u542b\u4efb\u4f55\u677e\u6563\u6216\u60ac\u6302\u7684\u5757\u3002\\n\\n\u6211\u77e5\u9053\uff0c\u4e00\u4e2a\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5de5\u5177\u4f7f\u7528\u8005\u4f1a\u8bd5\u56fe\u901a\u8fc7\u89c2\u5bdf\u5b83\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u7c7b\u578b\u7684\u5f02\u5e38\u7ed3\u6784\u6765\u7acb\u5373\u7834\u574f\u5de5\u5177\u3002\u6211\u51b3\u5b9a\u901a\u8fc7\u8ba9\u8fd9\u4e9b\u74f7\u7816\u66f4\u52a0\u7279\u522b\uff0c\u5c55\u793a\u5f27\u7ebf\u3001\u901a\u9053\u548c\u67f1\u5b50\u7b49\u7279\u5f81\u6765\u70ab\u8000\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119161742967](img/2024-01-19-voxelhouse-by-oskar/image-20240119161742967.png)\\n\\n![image-20240119161807425](img/2024-01-19-voxelhouse-by-oskar/image-20240119161807425.png)\\n\\n</div>\\n\\n## \u6f02\u6d6e\u4ef6\\n\\n\u5728\u6211\u7684\u9879\u76ee\u4e2d\uff0c\u6ca1\u6709\u4efb\u4f55\u5185\u5bb9\u53ef\u4ee5\u963b\u6b62\u7528\u6237\u521b\u5efa\u81ea\u7531\u6d6e\u52a8\u7684\u5757\uff0c\u8fd9\u5c31\u662f\u6211\u60f3\u8981\u4fdd\u7559\u5b83\u7684\u65b9\u5f0f\u3002\u4f46\u6211\u4e5f\u60f3\u5411\u7528\u6237\u5c55\u793a\uff0c\u6211\u786e\u5b9e\u8003\u8651\u8fc7\u8fd9\u79cd\u53ef\u80fd\u6027\u3002\\n\u6211\u7684\u89e3\u51b3\u65b9\u6848\u662f\u8ba9\u81ea\u7531\u6d6e\u52a8\u7684\u5757\u6162\u6162\u5730\u4e0a\u4e0b\u6446\u52a8\u3002\u8fd9\u9700\u8981\u6211\u521b\u5efa\u4e00\u4e2a\u6709\u8da3\u7684\u5c0f\u7b97\u6cd5\u6765\u5b9e\u65f6\u786e\u5b9a\u54ea\u4e9b\u5757\u8fde\u63a5\u5230\u5e95\u5ea7\uff0c\u54ea\u4e9b\u6ca1\u6709\uff1a\\n\\n\u6bcf\u4e2a\u57fa\u672c\u5757\u7684\u903b\u8f91\u8ddd\u79bb\u5747\u4e3a 0\u3002\u53e6\u4e00\u4e2a\u5757\u68c0\u67e5\u5b83\u4eec\u7684\u4efb\u4f55\u90bb\u5c45\u7684\u903b\u8f91\u8ddd\u79bb\u662f\u5426\u6bd4\u5b83\u4eec\u81ea\u5df1\u77ed;\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\uff0c\u4ed6\u4eec\u4f1a\u91c7\u7528\u8be5\u503c\u5e76\u4e3a\u5176\u6dfb\u52a0 1\u3002\\n\u56e0\u6b64\uff0c\u5982\u679c\u65ad\u5f00\u4e00\u4e2a\u5757\u7684\u8fde\u63a5\uff0c\u5219\u4e0d\u4f1a\u6709\u4efb\u4f55\u5185\u5bb9\u5c06\u8fd9\u4e9b\u5757\u63a5\u5730\u5230\u57fa\u672c\u5757\u7684 0\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u903b\u8f91\u8ddd\u79bb\u5c06\u5f88\u5feb\u7a7f\u8fc7\u5c4b\u9876\u3002\u90a3\u662f\u4ed6\u4eec\u5f00\u59cb\u6447\u6643\u7684\u65f6\u5019\u3002\\n\\n\u6d6e\u52a8\u5757\u7684\u7f13\u6162\u6446\u52a8\u4e3a\u573a\u666f\u589e\u6dfb\u4e86\u4e00\u4e9b\u6f02\u4eae\u7684\u73af\u5883\u52a8\u753b\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119162010112](img/2024-01-19-voxelhouse-by-oskar/image-20240119162010112.png)\\n\\n</div>\\n\\n## \u827a\u672f\u9009\u62e9\\n\\n\u9009\u62e9\u4e00\u79cd\u98ce\u683c\u662f\u4efb\u4f55\u9879\u76ee\u4e2d\u6709\u8da3\u4e14\u91cd\u8981\u7684\u4e00\u90e8\u5206\u3002\u6837\u5f0f\u5e94\u7a81\u51fa\u663e\u793a\u4e0e\u7279\u5b9a\u9879\u76ee\u76f8\u5173\u7684\u529f\u80fd\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\uff0c\u6211\u60f3\u8981\u4e00\u79cd\u5f3a\u8c03\u5757\u72b6\u548c\u6a21\u5757\u5316\u7684\u98ce\u683c\uff0c\u800c\u4e0d\u662f\u9690\u85cf\u5b83\u3002\\n\\n\u6e05\u6670\u7684\u7eff\u8272\u7ebf\u6761\u52fe\u52d2\u51fa\u68af\u7530\u7684\u8f6e\u5ed3\uff0c\u5899\u58c1\u662f\u7d20\u8272\u7684\uff0c\u6bcf\u5c42\u697c\u90fd\u6709\u6df1\u8272\u7816\u5757\u6807\u8bb0\uff0c\u7a97\u6237\u5747\u5300\u5206\u5e03\uff0c\u5e95\u90e8\u7684\u6c61\u57a2\u5149\u6ed1\u5e76\u5448\u76f4\u7ebf\u6c89\u79ef\u3002\\n\u62d0\u89d2\u91c7\u7528\u5927\u91cf\u659c\u9762\u8bbe\u8ba1\uff0c\u4ee5\u5f3a\u8c03\u74f7\u7816\u65e0\u7f1d\u8854\u63a5\u3002\u9732\u53f0\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u8212\u9002\u7684\u79d8\u5bc6\u7a7a\u95f4\uff0c\u60a8\u53ef\u4ee5\u5728\u5b89\u9759\u7684\u5468\u65e5\u65e9\u6668\u4eab\u7528\u6162\u901f\u65e9\u5348\u9910\u3002\\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4ef6\u4f5c\u54c1\u662f\u548c\u5e73\u800c\u53cb\u597d\u7684\u2014\u2014\u5982\u679c\u4f60\u613f\u610f\u7684\u8bdd\uff0c\u8fd9\u662f\u5bf9\u8d44\u4ea7\u9636\u7ea7\u751f\u6d3b\u7684\u5b81\u9759\u7684\u81f4\u656c\u3002\\n\\n## \u52a8\u753b\\n\\n\u4e0e\u4f5c\u54c1\u4e92\u52a8\u5e94\u8be5\u662f\u6709\u8da3\u4e14\u53cd\u5e94\u7075\u654f\u7684\u3002\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u6dfb\u52a0\u548c\u5220\u9664\u5757\u7684\u52a8\u753b\u6548\u679c\u3002\u8be5\u6548\u679c\u662f\u9876\u70b9\u7740\u8272\u5668\u7684\u7b80\u5355\u7ec4\u5408\uff0c\u524d\u8005\u6cbf\u9876\u70b9\u7684\u6cd5\u7ebf\u5c06\u9876\u70b9\u63a8\u51fa\uff0c\u540e\u8005\u968f\u65f6\u95f4\u63a8\u79fb\u5206\u89e3\u8868\u9762\u3002\\n\u4e00\u4e2a\u5f88\u597d\u7684\u8f6c\u6298\u70b9\u662f\uff0c\u6211\u80fd\u591f\u4f7f\u7528\u4e3a AO \u521b\u5efa\u7684 3D \u7eb9\u7406\u6765\u9650\u5236\u6cbf\u6548\u679c\u8fb9\u7f18\u7684\u9876\u70b9 - \u8fd9\u5c31\u662f\u5728\u56fe\u7247\u4e2d\u770b\u5230\u7684\u4e2d\u95f4\u51f8\u8d77\u7684\u539f\u56e0\u3002\\n\\n<div style={{textAlign: \'center\'}}>\\n\\n![image-20240119162024709](img/2024-01-19-voxelhouse-by-oskar/image-20240119162024709.png)\\n\\n![image-20240119162038136](img/2024-01-19-voxelhouse-by-oskar/image-20240119162038136.png)\\n\\n</div>\\n\\n## \u7ed3\u8bba\\n\\n\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u50cf\u4e00\u4e2a\u5de5\u5177\uff0c\u4f46\u4e0d\u662f\u3002\u8fd9\u662f\u4e00\u4ef6\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684\u4ea4\u4e92\u5f0f\u827a\u672f\u4f5c\u54c1\u3002\u53ef\u4ee5\u8bc4\u4f30\u5b83\u7684\u6280\u672f\u65b9\u9762\uff0c\u5b83\u4f5c\u4e3a\u5173\u5361\u7f16\u8f91\u5668\u5de5\u5177\u7684\u6f5c\u529b\uff0c\u5b83\u7684\u7740\u8272\u5668\u5de5\u4f5c\uff0c\u5b83\u7684\u6267\u884c\u548c\u5b8c\u6210\uff0c\u6216\u8005\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6709\u8da3\u7684\u73a9\u6cd5\u3002\\n\u6211\u5e0c\u671b\u5b83\u80fd\u5438\u5f15\u5f00\u53d1\u4eba\u5458\u548c\u5916\u884c\u3002\\n\\n\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u50cf\u8fd9\u6837\u7684\u7f51\u7edc\u6f14\u793a\u53ea\u662f\u4e00\u79cd\u6076\u4f5c\u5267\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8bf1\u9a97\u4eba\u4eec\u770b\u4f60\u7684\u827a\u672f\u4f5c\u54c1\u7684\u65f6\u95f4\u6bd4\u4ed6\u4eec\u672c\u6765\u8981\u957f\u3002\\n\\n## \u5173\u4e8e\u4f5c\u8005\\n\\n\u6211\u662f\u5965\u65af\u5361\xb7\u65af\u5854\u5c14\u4f2f\u683c\u3002\u6211\u5728\u745e\u5178\u4e4c\u666e\u8428\u62c9\u7684\u5927\u5b66\u57ce\u957f\u5927\u3002\u6211\u6709\u4e24\u4e2a\u5144\u5f1f\u3002\u6211\u4eec\u4e09\u4e2a\u4eba\u90fd\u70ed\u7231\u6570\u5b66\u3001\u79d1\u5b66\u548c\u89e3\u51b3\u95ee\u9898\u3002\\n\u7136\u800c\uff0c\u6211\u786e\u5b9e\u5728\u7ed8\u753b\u65b9\u9762\u51fb\u8d25\u4e86\u4ed6\u4eec\uff0c\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\uff0c\u4ece\u5f88\u5c0f\u7684\u65f6\u5019\u8d77\uff0c\u6211\u5c31\u5f88\u660e\u663e\uff0c\u6211\u5fc5\u987b\u505a\u4e00\u4e9b\u4e0e\u6b64\u76f8\u5173\u7684\u4e8b\u60c5\u3002\u4e2d\u5b66\u6bd5\u4e1a\u540e\uff0c\u6211\u5728 The Game Assembly \u5ea6\u8fc7\u4e86\u4e24\u5e74\u538b\u529b\u5f88\u5927\u4f46\u53c8\u5bcc\u6709\u6210\u6548\u7684\u65f6\u5149\uff0c\u5b66\u4e60\u4e86\u6e38\u620f\u7f8e\u672f\u7684\u6240\u6709\u57fa\u7840\u77e5\u8bc6\u3002\\nUbisoft Massive \u628a\u6211\u5f53\u6210\u6280\u672f\u7f8e\u672f\u5e08\uff0c\u4ece\u90a3\u4ee5\u540e\u6211\u5c31\u4e00\u76f4\u5728\u90a3\u91cc\u3002\u6211\u559c\u6b22\u521b\u9020\u7f8e\u89c2\u3001\u4e92\u52a8\u548c\u54cd\u5e94\u8fc5\u901f\u7684\u4e1c\u897f\u3002\u6211\u91cd\u89c6\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848\u3002\\n\u5728\u79d1\u6280\u548c\u827a\u672f\u7684\u4ea4\u6c47\u70b9\u4e0a\uff0c\u6211\u662f\u6700\u8212\u670d\u7684\uff0c\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u65b0\u7684\u4ea4\u6c47\u70b9\u3002\\n\\n\u4f5c\u8005\u4e2a\u4eba\u9875\uff1awww.oskarstalberg.com\\n\\n\u6587\u7ae0\u6765\u6e90\uff1a [VERTEX3 (gumroad.com)](https://ryanhawkins.gumroad.com/l/Nivt) \uff08170-176\uff09"},{"id":"Configure-the-Docker-Edition-microservice-environment-for-the-local-VM","metadata":{"permalink":"/arcetop/blog/Configure-the-Docker-Edition-microservice-environment-for-the-local-VM","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-04-17-Configure-the-Docker-Edition-microservice-environment-for-the-local-VM.md","source":"@site/blog/2023-04-17-Configure-the-Docker-Edition-microservice-environment-for-the-local-VM.md","title":"\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248","description":"\u6d4b\u8bd5","date":"2023-04-17T00:00:00.000Z","tags":[{"label":"Docker","permalink":"/arcetop/blog/tags/docker"},{"label":"docker-compose","permalink":"/arcetop/blog/tags/docker-compose"},{"label":"linux","permalink":"/arcetop/blog/tags/linux"},{"label":"centos","permalink":"/arcetop/blog/tags/centos"},{"label":"nacos","permalink":"/arcetop/blog/tags/nacos"},{"label":"gogs","permalink":"/arcetop/blog/tags/gogs"},{"label":"mysql","permalink":"/arcetop/blog/tags/mysql"},{"label":"redis","permalink":"/arcetop/blog/tags/redis"},{"label":"elasticsearch","permalink":"/arcetop/blog/tags/elasticsearch"},{"label":"rabbitMQ","permalink":"/arcetop/blog/tags/rabbit-mq"}],"readingTime":6.19,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"Configure-the-Docker-Edition-microservice-environment-for-the-local-VM","title":"\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["Docker","docker-compose","linux","centos","nacos","gogs","mysql","redis","elasticsearch","rabbitMQ"]},"unlisted":false,"prevItem":{"title":"Voxel House\uff08\u4f53\u7d20\u5c4b\uff09","permalink":"/arcetop/blog/voxelhouse-by-oskar"},"nextItem":{"title":"shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236","permalink":"/arcetop/blog/shardingsphere-replication-of-database-and-table-shards"}},"content":"## \u5b89\u88c5docker compose\\n\\n```shell\\ncurl -SL https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\\n```\\n\\n\u56e0\u4e3a\u662f\u5728\u672c\u5730\u7684\u865a\u62df\u673a \u53ef\u4ee5\u653e\u5fc3\u76f4\u63a5\u5173\u95ed\u9632\u706b\u5899\\n\\n```shell\\n# \u505c\u6b62\u9632\u706b\u5899\u670d\u52a1\\nsystemctl stop firewalld.service\\n# \u7981\u7528\u9632\u706b\u5899\u670d\u52a1\\nsystemctl disable firewalld.service\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u5b89\u88c5 gogs\\n\\nmysql-gogs \u8fd9\u91cc\u5355\u72ec\u4f7f\u7528\u4e00\u4e2amysql\u670d\u52a1\u7ed9gogs \u4e3a\u4e86\u9694\u79bb\u73af\u5883\\n\\ndocker-compose.yml\\n\\n```yaml\\nversion: \\"3\\"\\nservices:\\n  gogs:\\n    restart: always # \u81ea\u52a8\u91cd\u542f\\n    image: gogs/gogs\\n    container_name: gogs\\n    ports:\\n      - \\"10022:22\\" # ssh \u7aef\u53e3\\n      - \\"10880:3000\\" # Web \u8bbf\u95ee\u7aef\u53e3\\n    volumes:\\n      - ./gogs-data:/data # \u6570\u636e\u5b58\u50a8\\n    depends_on:\\n      - mysql-gogs\\n  mysql-gogs:\\n    restart: always\\n    image: mysql:latest\\n    container_name: mysql-gogs\\n    environment:\\n      MYSQL_ROOT_PASSWORD: 123456\\n      MYSQL_USER: gogs # gogs \u8bbf\u95ee\u6570\u636e\u5e93\u7528\u7684\u8d26\u53f7\\n      MYSQL_PASSWORD: gogs123456\\n    ports:\\n      - \\"10006:3306\\"\\n    volumes:\\n      - ./conf/my.cnf:/etc/mysql/my.cnf\\n      - ./mysql-data:/var/lib/mysql\\n      - ./mysql-log:/var/log/mysql\\n      - ./mysql-files:/var/lib/mysql-files\\n      - ./etc/localtime:/etc/localtime:ro\\n    # \u4e00\u822c\u4f1a\u5bf9 MySQL \u8fdb\u884c\u914d\u7f6e\uff0c\u6240\u4ee5\u4e0a\u9762\u91c7\u7528\u4e86 cnf \u6587\u4ef6\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u53ea\u662f\u4fee\u6539\u5b57\u7b26\u96c6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 command \u7684\u5f62\u5f0f\uff0c\u5982\u4e0b\u9762\u6240\u793a\\n    # command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\\n```\\n\\nmy.conf  \u653e\u5728docker-compose.yml\u540c\u7ea7\u7684conf\u76ee\u5f55\u4e0b\\n\\n```shell\\n[client]\\ndefault-character-set=utf8mb4\\n\\n[mysql]\\ndefault-character-set=utf8mb4\\n\\n[mysqld]\\ncharacter-set-server=utf8mb4\\ncollation-server=utf8mb4_unicode_ci\\n```\\n\\n![image-20230417215102164](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417215102164.png)\\n\\n\u8fd0\u884c docker-compose up -d\\n\\n## \u5b89\u88c5nacos\\n\\n```yaml\\nversion: \\"3\\"\\nservices:\\n  nacos:\\n    image: nacos/nacos-server:v2.1.0\\n    container_name: nacos\\n    environment:\\n      # \u652f\u6301\u4e3b\u673a\u540d\u53ef\u4ee5\u4f7f\u7528hostname,\u5426\u5219\u4f7f\u7528ip\uff0c\u9ed8\u8ba4ip\\n      - PREFER_HOST_MODE=ip\\n      # \u5355\u673a\u6a21\u5f0f\\n      - MODE=standalone\\n      # \u6570\u636e\u6e90\u5e73\u53f0 \u652f\u6301mysql\u6216\u4e0d\u4fdd\u5b58empty\\n      - SPRING_DATASOURCE_PLATFORM=mysql\\n      # mysql\u914d\u7f6e\uff0c!!!attention\u5fc5\u987b\u662fmysql\u6240\u5728\u4e3b\u673aIP\\n      - MYSQL_SERVICE_HOST=192.168.87.132\\n      - MYSQL_SERVICE_PORT=10006\\n      - MYSQL_SERVICE_USER=root\\n      - MYSQL_SERVICE_PASSWORD=123456\\n      - MYSQL_SERVICE_DB_NAME=nacos\\n    volumes:\\n      - ./logs:/home/nacos/logs\\n      - ./conf:/home/nacos/conf\\n    ports:\\n      - 8848:8848\\n    restart: always\\n\\n```\\n\\n\u8fd0\u884c docker-compose up -d\\n\\n![image-20230417215143668](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417215143668.png)\\n\\n## \u5b89\u88c5rabbitMQ\\n\\n```yaml\\nversion: \'3\'\\nservices:\\n  rabbitmq:\\n    image: rabbitmq:3.8.3-management\\n    container_name: rabbitmq\\n    restart: always\\n    hostname: rabbitmq_host\\n    ports:\\n      - 15672:15672   # web UI \u7ba1\u7406\u63a5\u53e3\\n      - 5672:5672 # \u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u8fde\u63a5\u4f7f\u7528\u7684\u63a5\u53e3\\n    volumes:\\n      - ./log:/var/log/rabbitmq #\u6302\u8f7d RabbitMQ\u65e5\u5fd7\\n      - ./data:/var/lib/rabbitmq #\u6302\u8f7d RabbitMQ\u6570\u636e\\n    environment:\\n      - RABBITMQ_DEFAULT_USER=root\\n      - RABBITMQ_DEFAULT_PASS=123456\\n\\n```\\n\\n\u8fd0\u884c docker-compose up -d\\n\\n![image-20230417215249731](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417215249731.png)\\n\\n## \u5b89\u88c5redis\\n\\n```yaml\\nversion: \'3\'\\nservices:\\n  redis:\\n    image: redis:6.2.6-alpine # \u6307\u5b9a\u670d\u52a1\u955c\u50cf\uff0c\u6700\u597d\u662f\u4e0e\u4e4b\u524d\u4e0b\u8f7d\u7684redis\u914d\u7f6e\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\\n    container_name: my_redis # \u5bb9\u5668\u540d\u79f0\\n    restart: on-failure # \u91cd\u542f\u65b9\u5f0f\\n    environment:\\n      - TZ=Asia/Shanghai # \u8bbe\u7f6e\u65f6\u533a\\n    volumes: # \u914d\u7f6e\u6570\u636e\u5377\\n      - ./data:/data\\n      - ./conf/redis.conf:/etc/redis/redis.conf\\n    ports: # \u6620\u5c04\u7aef\u53e3\\n      - \\"6379:6379\\"\\n    sysctls: # \u8bbe\u7f6e\u5bb9\u5668\u4e2d\u7684\u5185\u6838\u53c2\u6570\\n      - net.core.somaxconn=1024\\n   #  - vm.overcommit_memory=1\\n    command: /bin/sh -c \\"echo \'vm.overcommit_memory = 1\' >> /etc/sysctl.conf\\n            && redis-server /etc/redis/redis.conf --appendonly yes\\" # \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u5e76\u5f00\u542f\u6301\u4e45\u5316\\n    privileged: true # \u4f7f\u7528\u8be5\u53c2\u6570\uff0ccontainer\u5185\u7684root\u62e5\u6709\u771f\u6b63\u7684root\u6743\u9650\u3002\u5426\u5219\uff0ccontainer\u5185\u7684root\u53ea\u662f\u5916\u90e8\u7684\u4e00\u4e2a\u666e\u901a\u7528\u6237\u6743\u9650\\n```\\n\\n```shell\\n### \u6307\u5b9aredis\u7ed1\u5b9a\u7684\u4e3b\u673a\u5730\u5740\uff0c\u6ce8\u91ca\u6389\u8fd9\u90e8\u5206\uff0c\u4f7fredis\u53ef\u4ee5\u5916\u90e8\u8bbf\u95ee\\n    # bind 127.0.0.1 -::1\\n### \u6307\u5b9a\u8bbf\u95eeredis\u670d\u52a1\u7aef\u7684\u7aef\u53e3\\n    port 6379\\n### \u6307\u5b9a\u5ba2\u6237\u7aef\u8fde\u63a5redis\u670d\u52a1\u5668\u65f6\uff0c\u5f53\u95f2\u7f6e\u7684\u65f6\u95f4\u4e3a\u591a\u5c11\uff08\u5982300\uff09\u79d2\u65f6\u5173\u95ed\u8fde\u63a5\uff080\u8868\u793a\u7981\u7528\uff09\\n    timeout 0\\n### \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRedis\u4e0d\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u8fd0\u884c\u3002\u5982\u679c\u9700\u8981\uff0c\u8bf7\u4f7f\u7528\u201cyes\u201d\\n    daemonize no\\n### \u7ed9redis\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4e0d\u9700\u8981\u5bc6\u7801\u7684\u8bdd\u5219\u6ce8\u91ca\\n    # requirepass foobared\\n### \u5f00\u542fredis\u6301\u4e45\u5316\uff0c\u9ed8\u8ba4\u4e3ano\\n    appendonly yes\\n### \u9632\u6b62\u51fa\u73b0\u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u7684\u9519\u8bef \u9ed8\u8ba4\u662f300\\n    tcp-keepalive 300\\n### \u6307\u5b9aredis\u6570\u636e\u5e93\u7684\u65e5\u5fd7\u7ea7\u522b\uff0c\u5e38\u7528\u7684\u65e5\u5fd7\u7ea7\u522b\u6709debug\u3001verbose\u3001notice\u3001warning\uff0c\u4e0d\u8fdb\u884c\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u7684\u662fnotice\\n    loglevel debug\\n### \u6307\u5b9aredis\u6570\u636e\u5e93\u591a\u957f\u65f6\u95f4\u5185\uff08s\uff09\u6709\u591a\u5c11\u6b21\uff08c\uff09\u66f4\u65b0\u64cd\u4f5c\u65f6\u5c31\u628a\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u540c\u6b65\u5230\u672c\u5730\u5e93\uff0c\u6bd4\u5982\uff1asave 600 2\uff0c\u6307\u7684\u662f10\u5206\u949f\u5185\u67092\u6b21\u66f4\u65b0\u64cd\u4f5c\uff0c\u5c31\u540c\u6b65\u5230\u672c\u5730\u5e93\\n    save 600 2\\n### \u6307\u5b9aredis\u7684\u6700\u5927\u5185\u5b58\u3002\u7531\u4e8eRedis \u5728\u542f\u52a8\u65f6\u4f1a\u628a\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5f53\u6570\u636e\u8fbe\u5230\u6700\u5927\u5185\u5b58\u65f6\uff0credis\u4f1a\u81ea\u52a8\u628a\u5df2\u7ecf\u5230\u671f\u548c\u5373\u5c06\u5230\u671f\u7684key\u503c\u3002\u6240\u4ee5\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u8c03\u6574\u81ea\u5df1\u7684\u6240\u9700\u7684\u6700\u5927\u5185\u5b58\\n    maxmemory 500mb\\n### \u8bbe\u7f6e\u4e86maxmemory\u7684\u9009\u9879\uff0credis\u5185\u5b58\u4f7f\u7528\u8fbe\u5230\u4e0a\u9650\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eLRU\u7b97\u6cd5\u6765\u5220\u9664\u90e8\u5206key\uff0c\u91ca\u653e\u7a7a\u95f4\u3002\u9ed8\u8ba4\u662f\u6309\u7167\u8fc7\u671f\u65f6\u95f4\u7684,\u5982\u679cset\u65f6\u5019\u6ca1\u6709\u52a0\u4e0a\u8fc7\u671f\u65f6\u95f4\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u5199\u6ee1maxmemory\\n    maxmemory-policy volatile-lru\\n### \u8bbe\u7f6e\u5916\u90e8\u7f51\u7edc\u8fde\u63a5redis\u670d\u52a1\uff0c\u5f00\u542f\u9700\u914d\u7f6ebind ip\u6216\u8005\u8bbe\u7f6e\u8bbf\u95ee\u5bc6\u7801\uff0c\u5173\u95ed\u6b64\u65f6\u5916\u90e8\u7f51\u7edc\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\\n    # protected-mode yes\\n```\\n\\n![image-20230417215752263](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417215752263.png)\\n\\n## \u5b89\u88c5es\\n\\n\u521b\u5efa\u76ee\u5f55 plugins data  plugins kibana config\\n\\nchmod 777 ./data\\n\\nplugins \u653e\u5165ik\u5206\u8bcd\u5668zip\u5305\\n\\nconfig/elasticsearch.yml\\n\\n```yaml\\nnetwork.host: 0.0.0.0\\n```\\n\\nkibana/kibana.yml\\n\\n```yam\\nelasticsearch.hosts: http://elasticsearch:9200\\nserver.host: \\"0.0.0.0\\"\\nserver.name: kibana\\nxpack.monitoring.ui.container.elasticsearch.enabled: true\\ni18n.locale: zh-CN\\n```\\n\\ndocker-compose.yml\\n\\n```yaml\\nversion: \'3.2\'\\nservices:\\n  elasticsearch:\\n    image: elasticsearch:7.17.1\\n    ports:\\n      - \\"9200:9200\\"\\n      - \\"9300:9300\\"\\n    container_name: \\"elasticsearch\\"\\n    environment:\\n      - discovery.type=single-node\\n      - ES_JAVA_OPTS=\\"-Xms2G -Xmx4G\\"\\n    volumes:\\n      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml\\n      - ./data:/usr/share/elasticsearch/data\\n      - ./plugins:/usr/share/elasticsearch/plugins\\n  kibana:\\n    image: kibana:7.17.1\\n    ports:\\n      - \\"5601:5601\\"\\n    container_name: \\"kibana\\"\\n    #restart: always\\n    depends_on:\\n      - elasticsearch\\n    volumes:\\n      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml\\n```\\n\\n\u8bbf\u95ee9200\u7aef\u53e3\\n\\n![image-20230417234012937](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417234012937.png)\\n\\n\u8bbf\u95ee5601\u7aef\u53e3\\n\\n![image-20230417234048806](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417234048806.png)\\n\\n\u6d4b\u8bd5\u529f\u80fd\\n\\n![image-20230417234724946](img/2023-04-17-\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248/image-20230417234724946.png)"},{"id":"shardingsphere-replication-of-database-and-table-shards","metadata":{"permalink":"/arcetop/blog/shardingsphere-replication-of-database-and-table-shards","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-04-08-shardingsphere-replication-of-database-and-table-shards.md","source":"@site/blog/2023-04-08-shardingsphere-replication-of-database-and-table-shards.md","title":"shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236","description":"\u6d4b\u8bd5","date":"2023-04-08T00:00:00.000Z","tags":[{"label":"Java","permalink":"/arcetop/blog/tags/java"},{"label":"SpringCloud","permalink":"/arcetop/blog/tags/spring-cloud"},{"label":"ShardingSphere","permalink":"/arcetop/blog/tags/sharding-sphere"}],"readingTime":9,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"shardingsphere-replication-of-database-and-table-shards","title":"shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["Java","SpringCloud","ShardingSphere"]},"unlisted":false,"prevItem":{"title":"\u672c\u5730\u865a\u62df\u673a\u914d\u7f6e\u5fae\u670d\u52a1\u73af\u5883docker\u7248","permalink":"/arcetop/blog/Configure-the-Docker-Edition-microservice-environment-for-the-local-VM"},"nextItem":{"title":"flutter getx \u591a\u8bed\u8a00 \u542b\u8ddf\u968f\u7cfb\u7edf\u4ee5\u53cafallback","permalink":"/arcetop/blog/flutter_getx_i18n_fallback_demo"}},"content":":::caution \u6ce8\u610f\\n \u672c\u6587\u542b\u53cc\u4e3b\u4e92\u4ece\u3001\u53cc\u4e3b\u53cc\u4ece\u65b9\u5f0f \u914d\u7f6e\u9700\u8981\u5c06HOST\u6539\u6210\u4f60\u7684\u4e3b\u673aip POSSWORD \u6539\u6210\u4f60\u7684\u6570\u636e\u5e93\u5bc6\u7801\\n:::\\n\\n# CentOS7\u5b89\u88c5docker\\n\\n\u5b98\u7f51\uff1a[Docker\u5b98\u7f51](http://www.docker.com)\\n\\n\u5b89\u88c5\u624b\u518c\uff1a[docker-ce \u793e\u533a\u7248](https://docs.docker.com/install/linux/docker-ce/centos\uff08CE-\u793e\u533a\u7248\uff09)\\n\\n## 1\u3001\u5b89\u88c5\u9700\u8981\u7684\u8f6f\u4ef6\u5305\\n\\nyy -utils\u63d0\u4f9b\u4e86yy-config-manager\u76f8\u5173\u529f\u80fd\uff0cdevice-mapper-persistent-data\u548clvm2\u662f\u8bbe\u5907\u6620\u5c04\u5668\u9a71\u52a8\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u3002\\n\\n```shell\\nyum install -y yum-utils \\\\\\n               device-mapper-persistent-data \\\\\\n               lvm2\\n```\\n\\n## 2\u3001\u8bbe\u7f6edocker\u4e0b\u8f7d\u955c\u50cf\\n\\n\u63a8\u8350\u963f\u91cc\u4e91\u4e0b\u8f7d\u5730\u5740\\n\\n```shell\\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\\n```\\n\x3c!-- truncate --\x3e\\n## 3\u3001\u66f4\u65b0yum\u8f6f\u4ef6\u5305\u7d22\u5f15\\n\\n\u6211\u4eec\u5728\u66f4\u65b0\u6216\u914d\u7f6eyum\u6e90\u4e4b\u540e\uff0c\u901a\u5e38\u90fd\u4f1a\u4f7f\u7528yum makecache \u751f\u6210\u7f13\u5b58\uff0c\u8fd9\u4e2a\u547d\u4ee4\u662f\u5c06\u8f6f\u4ef6\u5305\u4fe1\u606f\u63d0\u524d\u5728\u672c\u5730\u7f13\u5b58\u4e00\u4efd\uff0c\u7528\u6765\u63d0\u9ad8\u641c\u7d22\u5b89\u88c5\u8f6f\u4ef6\u7684\u901f\u5ea6\\n\\n```shell\\nyum makecache fast\\n```\\n\\n## 4\u3001\u5b89\u88c5docker ce\\n\\n```shell\\nyum install -y docker-ce\\n```\\n\\n## 5\u3001\u542f\u52a8docker\\n\\n```shell\\nsystemctl start docker\\n\\n```\\n\\n## 6\u3001\u7248\u672c\u9a8c\u8bc1\\n\\n```shell\\ndocker version\\n```\\n\\n##  7\u3001\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8\\n\\n```shell\\n#\u67e5\u770b\u670d\u52a1\u662f\u5426\u81ea\u52a8\u542f\u52a8\uff08\u662f\uff1aenabled | \u5426\uff1adisabled\uff09\\nsystemctl list-unit-files|grep docker.service\\n\\n#\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8\uff1a\u5982\u4e0d\u662fenabled\u53ef\u4ee5\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u8bbe\u7f6e\u81ea\u542f\u52a8\\nsystemctl enable docker\\n#\u91cd\u65b0\u52a0\u8f7d\u670d\u52a1\u914d\u7f6e\\nsystemctl daemon-reload\\n\\n#\u5982\u679c\u5e0c\u671b\u4e0d\u8fdb\u884c\u81ea\u542f\u52a8\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u8bbe\u7f6e\\nsystemctl disable docker\\n#\u91cd\u65b0\u52a0\u8f7d\u670d\u52a1\u914d\u7f6e\\nsystemctl daemon-reload\\n```\\n\\n\u5378\u8f7d\\n\\n```shell\\nsystemctl stop docker\\nyum remove -y docker-ce\\nrm -rf /var/lib/docker\\n```\\n\\n\u5f00\u5173\u9632\u706b\u5899\\n\\n```shell\\n##\u5173\u95eddocker\\nsystemctl stop docker\\n##\u5173\u95ed\u9632\u706b\u5899\\nsystemctl stop firewalld\\n##\u542f\u52a8docker\\nsystemctl start docker\\n```\\n\\n## \u4e8c\u4e3b\u4e8c\u4ece\u914d\u7f6e\\n\\n\u4e3b\u670d\u52a1\u5668 arce-mysql-master1 \u7aef\u53e3 3306\\n\\n\u4e3b\u670d\u52a1\u5668 arce-mysql-master2 \u7aef\u53e3 3307\\n\\n\u4ece\u670d\u52a1\u5668 arce-mysql-slave1 \u7aef\u53e3 13306\\n\\n\u4ece\u670d\u52a1\u5668 arce-mysql-slave2 \u7aef\u53e3 13307\\n\\n\u4e24\u4e2a\u4e3b\u670d\u52a1\u5668\u4e92\u4e3a\u4e3b\u4ece\\n\\n\u51c6\u5907\u4e3b\u670d\u52a1\u5668\\n\\n\u521b\u5efa\u672c\u673a\u6302\u8f7d\u76ee\u5f55\\n\\n```shell\\nmkdir -p /usr/local/docker/arce-mysql-master1/data\\nmkdir -p /usr/local/docker/arce-mysql-master1/mysql-files\\nmkdir -p /usr/local/docker/arce-mysql-master1/cnf\\nmkdir -p /usr/local/docker/arce-mysql-master1/log\\n```\\n\\n\u542f\u52a8docker \u5bb9\u5668\\n\\n```shell\\ndocker run  \\\\\\n--restart=always \\\\\\n--name arce-mysql-master1 \\\\\\n-v /usr/local/docker/arce-mysql-master1/cnf:/etc/mysql/conf.d \\\\\\n-v /usr/local/docker/arce-mysql-master1/data:/var/lib/mysql \\\\\\n-v /usr/local/docker/arce-mysql-master1/log:/var/log/mysql \\\\\\n-v /usr/local/docker/arce-mysql-master1/mysql-files:/var/lib/mysql-files \\\\\\n-p 3306:3306 \\\\\\n-e MYSQL_ROOT_PASSWORD=PASSWORD \\\\\\n-d mysql\\n```\\n\\n\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\\n\\n```she\\nvim /usr/local/docker/arce-mysql-master1/cnf/my.cnf\\n```\\n\\n```\\n#Apply this config only on the master.\\n[client]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n[mysql]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n[mysqld]\\n# bind-address = 0.0.0.0\\n# port = 3306\\n\\nmax_connections=10000\\n\\ncharacter-set-server = utf8mb4\\ncollation-server = utf8mb4_unicode_ci\\n\\n# \u8bbe\u7f6e\u65f6\u533a\u548c\u5b57\u7b26\u96c6\\n# default-time-zone=\'+8:00\'\\ncharacter-set-client-handshake=FALSE\\ninit_connect=\'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci\'\\n\\ngtid-mode=ON\\nenforce-gtid-consistency = ON\\n```\\n\\n\u8fdb\u5165\u5bb9\u5668bash\\n\\n```shell\\ndocker exec -it arce-mysql-master1 bash\\n```\\n\\n\u6d4b\u8bd5\u8fdc\u7a0b\u8fde\u63a5\\n\\n\u8fdb\u5165mysql\\n\\n```shell\\nmysql -uroot -pPASSWORD\\n```\\n\\n\u5c06root\u7528\u6237\u4ece\u53ea\u80fdlocalhost\u767b\u5f55\u6539\u4e3a % \u652f\u6301\u8fdc\u7a0b\\n\\n```shell\\nupdate user set host=\'%\' where user=\'root\';\\nFLUSH PRIVILEGES;\\n```\\n\\n\u66f4\u6539\u5bc6\u7801\u63d2\u4ef6\\n\\n```shell\\n##\u5982\u679cplugin \u7684\u52a0\u5bc6\u65b9\u5f0f\u4e3acaching_sha2_password\uff0c\u8868\u793a\u9700\u8981\u66f4\u6539\\n##\u66f4\u6539root\u7528\u6237\u52a0\u5bc6\u65b9\u5f0f\\nALTER USER \'root\'@\'localhost\' IDENTIFIED WITH mysql_native_password by \'PASSWORD\';\\nALTER USER \'root\'@\'%\' IDENTIFIED WITH mysql_native_password BY \'PASSWORD\';\\nFLUSH PRIVILEGES;\\n```\\n\\n\u67e5\u770b\u6743\u9650\u4fe1\u606f\\n\\n```shell\\nuse mysql;\\nselect host, user, authentication_string, plugin from user;\\n```\\n\\n![image-20230408094519538](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408094519538.png)\\n\\n\u51c6\u5907\u4e3b\u670d\u52a1\u56682\\n\\n\u521b\u5efa\u672c\u673a\u6302\u8f7d\u76ee\u5f55\\n\\n```shell\\nmkdir -p /usr/local/docker/arce-mysql-master2/data\\nmkdir -p /usr/local/docker/arce-mysql-master2/mysql-files\\nmkdir -p /usr/local/docker/arce-mysql-master2/cnf\\nmkdir -p /usr/local/docker/arce-mysql-master2/log\\n```\\n\\n\u542f\u52a8docker \u5bb9\u5668\\n\\n```shell\\ndocker run  \\\\\\n--restart=always \\\\\\n--name arce-mysql-master2 \\\\\\n-v /usr/local/docker/arce-mysql-master2/cnf:/etc/mysql/conf.d \\\\\\n-v /usr/local/docker/arce-mysql-master2/data:/var/lib/mysql \\\\\\n-v /usr/local/docker/arce-mysql-master2/log:/var/log/mysql \\\\\\n-v /usr/local/docker/arce-mysql-master2/mysql-files:/var/lib/mysql-files \\\\\\n-p 3307:3306 \\\\\\n-e MYSQL_ROOT_PASSWORD=PASSWORD \\\\\\n-d mysql\\n```\\n\\n\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\\n\\n```shell\\nvim /usr/local/docker/arce-mysql-master2/cnf/my.cnf\\n```\\n\\n```shell\\n#Apply this config only on the master.\\n[client]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n[mysql]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n\\n[mysqld]\\n#skip-grant-tables\\n## \u670d\u52a1\u5668\u552f\u4e00id\uff0c\u9ed8\u8ba4\u503c1\\nserver-id=2000\\n## \u8bbe\u7f6e\u65e5\u5fd7\u683c\u5f0f\uff0c\u9ed8\u8ba4\u503cROW\\nbinlog_format=STATEMENT\\n## \u4e8c\u8fdb\u5236\u65e5\u5fd7\u540d\uff0c\u9ed8\u8ba4binlog\\n## log-bin=binlog\\n## \u8bbe\u7f6e\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u590d\u5236\u5168\u90e8\u6570\u636e\u5e93\\n##binlog-do-db=mytestdb\\n## \u8bbe\u7f6e\u4e0d\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\\n##binlog-ignore-db=mysql\\n##binlog-ignore-db=infomation_schema\\n# bind-address = 0.0.0.0\\n# port = 3306\\n\\nmax_connections=10000\\n\\ncharacter-set-server = utf8mb4\\ncollation-server = utf8mb4_unicode_ci\\n\\n# \u8bbe\u7f6e\u65f6\u533a\u548c\u5b57\u7b26\u96c6\\ndefault-time-zone=\'+8:00\'\\ncharacter-set-client-handshake=FALSE\\ninit_connect=\'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci\'\\n\\ngtid-mode=ON\\nenforce-gtid-consistency = ON\\n```\\n\\n\u8fdb\u5165\u5bb9\u5668bash\\n\\n```shell\\ndocker exec -it arce-mysql-master2 bash\\n```\\n\\n\u8bbe\u7f6e\u53cc\u4e3b\u4e92\u4ece\\n\\n\u4e3b1\\n\\n```shell\\n#Apply this config only on the master.\\n[client]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n[mysql]\\n# bind-address = 0.0.0.0\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n\\n[mysqld]\\n#skip-grant-tables\\n## \u670d\u52a1\u5668\u552f\u4e00id\uff0c\u9ed8\u8ba4\u503c1\\nserver-id=1000\\n## \u8bbe\u7f6e\u65e5\u5fd7\u683c\u5f0f\uff0c\u9ed8\u8ba4\u503cROW\\nbinlog_format=STATEMENT\\n#\u5f00\u542f\u53ca\u8bbe\u7f6e\u4e8c\u8fdb\u5236\u65e5\u5fd7\u6587\u4ef6\u540d\u79f0\\nlog_bin = mysql-bin\\nbinlog_format = MIXED\\nsync_binlog = 1\\n#\u4e8c\u8fdb\u5236\u65e5\u5fd7\u81ea\u52a8\u5220\u9664/\u8fc7\u671f\u7684\u5929\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u8868\u793a\u4e0d\u81ea\u52a8\u5220\u9664\u3002\\nexpire_logs_days =7\\n\\n## \u8bbe\u7f6e\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u590d\u5236\u5168\u90e8\u6570\u636e\u5e93\\n##binlog-do-db=mytestdb\\n# \u4e0d\u9700\u8981\u540c\u6b65\u7684\u6570\u636e\u5e93\\nbinlog-ignore-db = mysql\\nbinlog_ignore_db = information_schema\\nbinlog_ignore_db = performation_schema\\nbinlog_ignore_db = sys\\n\\n\\nmax_connections=10000\\n\\ncharacter-set-server = utf8mb4\\ncollation-server = utf8mb4_unicode_ci\\n\\n# \u8bbe\u7f6e\u65f6\u533a\u548c\u5b57\u7b26\u96c6\\ndefault-time-zone=\'+8:00\'\\ncharacter-set-client-handshake=FALSE\\ninit_connect=\'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci\'\\n\\ngtid-mode=ON\\nenforce-gtid-consistency = ON\\n```\\n\\n\u4e3b2\\n\\n```shell\\n#Apply this config only on the master.\\n[client]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n[mysql]\\nport = 3306\\ndefault-character-set = utf8mb4\\n# bind-address = 0.0.0.0\\n# port = 3306\\n\\n[mysqld]\\n#skip-grant-tables\\n## \u670d\u52a1\u5668\u552f\u4e00id\uff0c\u9ed8\u8ba4\u503c1\\nserver-id=2000\\n## \u8bbe\u7f6e\u65e5\u5fd7\u683c\u5f0f\uff0c\u9ed8\u8ba4\u503cROW\\nbinlog_format=STATEMENT\\n#\u5f00\u542f\u53ca\u8bbe\u7f6e\u4e8c\u8fdb\u5236\u65e5\u5fd7\u6587\u4ef6\u540d\u79f0\\nlog_bin = mysql-bin\\nbinlog_format = MIXED\\nsync_binlog = 1\\n#\u4e8c\u8fdb\u5236\u65e5\u5fd7\u81ea\u52a8\u5220\u9664/\u8fc7\u671f\u7684\u5929\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u8868\u793a\u4e0d\u81ea\u52a8\u5220\u9664\u3002\\nexpire_logs_days =7\\n## \u8bbe\u7f6e\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u590d\u5236\u5168\u90e8\u6570\u636e\u5e93\\n##binlog-do-db=mytestdb\\n## \u8bbe\u7f6e\u4e0d\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\\nbinlog-ignore-db = mysql\\nbinlog_ignore_db = information_schema\\nbinlog_ignore_db = performation_schema\\nbinlog_ignore_db = sys\\n\\n\\nmax_connections=10000\\n\\ncharacter-set-server = utf8mb4\\ncollation-server = utf8mb4_unicode_ci\\n\\n# \u8bbe\u7f6e\u65f6\u533a\u548c\u5b57\u7b26\u96c6\\ndefault-time-zone=\'+8:00\'\\ncharacter-set-client-handshake=FALSE\\ninit_connect=\'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci\'\\n\\ngtid-mode=ON\\nenforce-gtid-consistency = ON\\n```\\n\\n\u91cd\u542f\u4e24\u4e2a\u4e3b\u670d\u52a1\u5668\\n\\n\u8fdb\u884c\u4e3b1 bash\\n\\n```shell\\ndocker exec -it arce-mysql-master1 bash\\nmysql -uroot -p\\n```\\n\\n\u521b\u5efaslave\u7528\u6237\u5e76\u6388\u6743,\u4e24\u4e2amaster\u8282\u70b9\u90fd\u521b\u5efa\\n\\n```shell\\n#\u521b\u5efa\u7528\u6237\\nALTER USER \'root\'@\'localhost\' IDENTIFIED WITH mysql_native_password by \'PASSWORD\';\\nALTER USER \'root\'@\'%\' IDENTIFIED WITH mysql_native_password BY \'PASSWORD\';\\nCREATE USER \'slave\'@\'%\' IDENTIFIED WITH mysql_native_password BY \'PASSWORD\';\\n#\u5206\u914d\u6743\u9650\\nGRANT REPLICATION SLAVE ON *.* TO \'slave\'@\'%\';\\n#\u5237\u65b0\u6743\u9650\\nflush privileges;\\n```\\n\\n\u67e5\u770bmaster\u72b6\u6001\uff1a`SHOW MASTER STATUS`\uff0c\u8bb0\u5f55\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d(mysql-bin.000001)\u548c\u4f4d\u7f6e(821)\\n\\nmaster1\\n\\n![image-20230408110257788](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408110257788.png)\\n\\nmaster2\\n\\n![image-20230408110622010](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408110622010.png)\\n\\n\u8bbe\u7f6e\u8fde\u63a5\\n\\nmaster1\u8fde\u63a5master2\\n\\n```shell\\nCHANGE MASTER TO\\nMASTER_HOST=\'HOST\',\\nMASTER_USER=\'slave\',\\nMASTER_PASSWORD=\'PASSWORD\',\\nMASTER_PORT=3307,\\nMASTER_LOG_FILE=\'mysql-bin.000001\',\\nMASTER_LOG_POS=821;\\n```\\n\\n![image-20230408111131360](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408111131360.png)\\n\\nmaster2\u8fde\u63a5master1\\n\\n```shell\\nCHANGE MASTER TO\\nMASTER_HOST=\'HOST\',\\nMASTER_USER=\'slave\',\\nMASTER_PASSWORD=\'PASSWORD\',\\nMASTER_PORT=3306,\\nMASTER_LOG_FILE=\'mysql-bin.000001\',\\nMASTER_LOG_POS=821;\\n```\\n\\n![image-20230408111116887](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408111116887.png)\\n\\n\u542f\u52a8 slave \u8fdb\u7a0b\\n\\nmaster1\\n\\n![image-20230408111300490](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408111300490.png)\\n\\nmaster2\\n\\n![image-20230408111346417](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408111346417.png)\\n\\n\u4e8c\u4e3b\u4e8c\u4ece\uff0c\u4e00\u4e3b\u4e00\u4e1b\\n\\n\u6ce8\u610f\u9700\u53d6\u6d88\u4e4b\u524d\u7684\u53cc\u4e3b\u4e92\u4ece\\n\\n```shell\\ndocker exec -it arce-mysql-master1 bash\\ndocker exec -it arce-mysql-master2 bash\\nmysql -u root -p\\n```\\n\\n```shell\\nstop slave;\\n```\\n\\nslave1\\n\\n\u521b\u5efa\u672c\u673a\u6302\u8f7d\u76ee\u5f55\\n\\n```shell\\nmkdir -p /usr/local/docker/arce-mysql-slave1/data\\nmkdir -p /usr/local/docker/arce-mysql-slave1/mysql-files\\nmkdir -p /usr/local/docker/arce-mysql-slave1/cnf\\nmkdir -p /usr/local/docker/arce-mysql-slave1/log\\n```\\n\\n\u542f\u52a8docker \u5bb9\u5668\\n\\n```shell\\ndocker run  \\\\\\n--restart=always \\\\\\n--name arce-mysql-slave1 \\\\\\n-v /usr/local/docker/arce-mysql-slave1/cnf:/etc/mysql/conf.d \\\\\\n-v /usr/local/docker/arce-mysql-slave1/data:/var/lib/mysql \\\\\\n-v /usr/local/docker/arce-mysql-slave1/log:/var/log/mysql \\\\\\n-v /usr/local/docker/arce-mysql-slave1/mysql-files:/var/lib/mysql-files \\\\\\n-p 13306:3306 \\\\\\n-e MYSQL_ROOT_PASSWORD=PASSWORD \\\\\\n-d mysql\\n```\\n\\n\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\\n\\n```she\\nvim /usr/local/docker/arce-mysql-slave1/cnf/my.cnf\\n```\\n\\n```\\n#Apply this config only on the master.\\n[client]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n[mysql]\\nport = 3306\\ndefault-character-set = utf8mb4\\n\\n\\n[mysqld]\\n#skip-grant-tables\\n## \u670d\u52a1\u5668\u552f\u4e00id\uff0c\u9ed8\u8ba4\u503c1\\nserver-id=1001\\n## \u8bbe\u7f6e\u65e5\u5fd7\u683c\u5f0f\uff0c\u9ed8\u8ba4\u503cROW\\nbinlog_format=STATEMENT\\n## \u4e8c\u8fdb\u5236\u65e5\u5fd7\u540d\uff0c\u9ed8\u8ba4binlog\\n## log-bin=binlog\\n## \u8bbe\u7f6e\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u590d\u5236\u5168\u90e8\u6570\u636e\u5e93\\n##binlog-do-db=mytestdb\\n## \u8bbe\u7f6e\u4e0d\u9700\u8981\u590d\u5236\u7684\u6570\u636e\u5e93\\n##binlog-ignore-db=mysql\\n##binlog-ignore-db=infomation_schema\\n# bind-address = 0.0.0.0\\n# port = 3306\\n\\nmax_connections=10000\\n\\ncharacter-set-server = utf8mb4\\ncollation-server = utf8mb4_unicode_ci\\n\\n# \u8bbe\u7f6e\u65f6\u533a\u548c\u5b57\u7b26\u96c6\\ndefault-time-zone=\'+8:00\'\\ncharacter-set-client-handshake=FALSE\\ninit_connect=\'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci\'\\n\\ngtid-mode=ON\\nenforce-gtid-consistency = ON\\n```\\n\\n\u8fdb\u5165\u5bb9\u5668bash\\n\\n```shell\\ndocker exec -it arce-mysql-slave1 bash\\n```\\n\\nsalve1 \u8fde\u63a5 master1\\n\\n```shell\\nCHANGE MASTER TO\\nMASTER_HOST=\'HOST\',\\nMASTER_USER=\'slave\',\\nMASTER_PASSWORD=\'PASSWORD\',\\nMASTER_PORT=3306,\\nMASTER_LOG_FILE=\'mysql-bin.000001\',\\nMASTER_LOG_POS=821;\\n```\\n\\n```shell\\n start slave;\\n```\\n\\n```shell\\nshow slave status\\\\G;\\n```\\n\\n![image-20230408220152389](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408220152389.png)\\n\\nslave2 \u91cd\u590dslave1\\n\\n![image-20230408220937264](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408220937264.png)\\n\\n![image-20230408221205061](img/2023-04-08-shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236/image-20230408221205061.png)"},{"id":"flutter_getx_i18n_fallback_demo","metadata":{"permalink":"/arcetop/blog/flutter_getx_i18n_fallback_demo","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-04-02-flutter_getx_i18n_fallback_demo.md","source":"@site/blog/2023-04-02-flutter_getx_i18n_fallback_demo.md","title":"flutter getx \u591a\u8bed\u8a00 \u542b\u8ddf\u968f\u7cfb\u7edf\u4ee5\u53cafallback","description":"flutter getx \u591a\u8bed\u8a00 \u542b\u8ddf\u968f\u7cfb\u7edf\u4ee5\u53cafallback","date":"2023-04-02T00:00:00.000Z","tags":[{"label":"Flutter","permalink":"/arcetop/blog/tags/flutter"},{"label":"Dart","permalink":"/arcetop/blog/tags/dart"},{"label":"I18N","permalink":"/arcetop/blog/tags/i-18-n"},{"label":"Getx","permalink":"/arcetop/blog/tags/getx"}],"readingTime":2.845,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"flutter_getx_i18n_fallback_demo","title":"flutter getx \u591a\u8bed\u8a00 \u542b\u8ddf\u968f\u7cfb\u7edf\u4ee5\u53cafallback","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"flutter getx \u591a\u8bed\u8a00 \u542b\u8ddf\u968f\u7cfb\u7edf\u4ee5\u53cafallback","tags":["Flutter","Dart","I18N","Getx"]},"unlisted":false,"prevItem":{"title":"shardingsphere\u5206\u5e93\u5206\u8868\u4e3b\u4ece\u590d\u5236","permalink":"/arcetop/blog/shardingsphere-replication-of-database-and-table-shards"},"nextItem":{"title":"flutter getx \u591a\u4e3b\u9898 \u5305\u542b\u6df1\u8272\u6a21\u5f0f","permalink":"/arcetop/blog/flutter_getx_theme_demo"}},"content":"<div style={{textAlign: \'center\'}}>\\n\\n![\u52a8\u753b](img/2023-04-02-flutter_getx_i18n_failback_demo/effect.gif)\\n\\n</div>\\n\\n\u601d\u8def\uff1aGetx\u7684updateLocale \u4ee5\u53ca\u672c\u5730\u7f13\u5b58\\n\\n\x3c!-- truncate --\x3e\\n\\nLocale\u652f\u6301\u4ee5\u4e0b\u4e24\u79cd\u6784\u9020\u65b9\u5f0f\\n\\n```dart\\nLocale(languageCode,languageCountryCode)  // eg: Locale(\'en\',\'US\')\\n    Locale.fromSubtags(languageCode:languageCode,scriptCode: languageScriptCode,countryCode: languageCountryCode);   // eg:  Locale.fromSubtags(\'zh\',\'Hans\',\'CN\')  countryCode \u53ef\u7a7a\\n```\\n\\n\\n:::caution \u6ce8\u610f\\n \u6848\u4f8b\u4ee3\u7801\u4e0d\u5b8c\u5168\uff0c\u4f46\u4e0d\u5f71\u54cd\u4f60\u7684\u89c2\u770b\u662f\u5c1d\u8bd5\\n:::\\n\\n## \u539f\u7406\u5206\u6790\\n\\n\u8ddf\u968f\u7cfb\u7edf\u8bed\u8a00 \u7f13\u5b58\u4e2d\u5b58\u4e00\u4e2aflag    \u5728\u591a\u8bed\u8a00\u521d\u59cb\u5316\u7684\u65f6\u5019\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6flag\u503c\\n\\n- if flag = true\\n  - \u4f7f\u7528 Getx \u7684 deviceLocale \u5c5e\u6027\u503c\u83b7\u53d6\u5230\u8bbe\u5907\u7684 Locale\\n- else\\n  - \u83b7\u53d6\u7f13\u5b58\u4e2d\u7684 languageCode , languageScriptCode , languageCountryCode \u5e76\u6784\u9020Locale\\n  - \u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u4eba\u76f4\u63a5\u5b58\u5728\u4e00\u4e2akey\u91cc  \u4f46\u662f\u6211\u6ca1\u529e\u6cd5\u5206\u8fa8 \u6709\u7684\u65f6\u5019\u662f zh_Hans \u7684\u60c5\u51b5 \u6709\u7684\u662f zh_Hans_CN  \u4e5f\u6709 en_Us \u6216\u8005  en\\n\\n\u4f7f\u7528 Getx \u7684 updateLocale(Locale) \u8fdb\u884c\u66f4\u6362\\n\\n## \u6848\u4f8b\u4ee3\u7801\\n\\n\u6838\u5fc3\u4ee3\u7801  TranslationService\\n\\n```dart\\nclass TranslationService extends GetxService{\\n  static TranslationService get to => Get.find();\\n  // \u5f53\u524d\u7cfb\u7edf\u8bed\u8a00\\n  // static Locale? get locale => Get.deviceLocale;\\n  late final locale;\\n  final translations = TranslationLanguages();\\n  // //\u5982\u679c\u627e\u4e0d\u5230\u5bf9\u5e94\u5b57\u5178\uff0c\u9ed8\u8ba4\u503c\\n  static const fallbackLocale = Locale(\'en\', \'US\');\\n\\n  Future<TranslationService> init() async{\\n    locale = TranslationStore.to.initialLocale;\\n    return this;\\n  }\\n  void setLocale(Locale locale)async{\\n    await TranslationStore.to.setLocale(locale);\\n    Get.updateLocale(locale);\\n  }\\n}\\n```\\n\\n\u6838\u5fc3\u4ee3\u7801 TranslationStore \u521d\u59cb\u5316\uff1a\\n\\n```dart\\n@override\\nvoid onInit() {\\n    super.onInit();\\n    // \u662f\u5426\u9009\u62e9\u8ddf\u968f\u7cfb\u7edf\\n    bool followSystem = StorageService.to.getBool(STORAGE_LANGUAGE_FOLLOW_SYSTEM);\\n    // Locale \u53c2\u6570\\n    String languageCode = StorageService.to.getString(STORAGE_LANGUAGE_CODE);\\n    String languageCountryCode = StorageService.to.getString(STORAGE_LANGUAGE_COUNTRY_CODE);\\n    String languageScriptCode = StorageService.to.getString(STORAGE_LANGUAGE_SCRIPT_CODE);\\n    print(\\"\u662f\u5426\u8ddf\u968f\u7cfb\u7edf ${followSystem}\\");\\n    print(\\"Getx\u4e2d\u7684locale: ${Get.locale}    \u624b\u673a\u7cfb\u7edf\u8bed\u8a00 ${Get.deviceLocale}\\");\\n    print(\'\u7f13\u5b58\uff1a ${languageCode} | ${languageCountryCode} | ${languageScriptCode}\');\\n    if(followSystem){\\n        initialLocale = Get.deviceLocale ?? const Locale(\'en_US\');\\n    }else{\\n        if(languageScriptCode == \'\') {\\n            initialLocale = Locale(languageCode,languageCountryCode);\\n        }else if(languageCountryCode==\'\'){\\n            initialLocale = Locale.fromSubtags(languageCode:languageCode,scriptCode: languageScriptCode);\\n        }else {\\n            initialLocale = Locale.fromSubtags(languageCode:languageCode,scriptCode: languageScriptCode,countryCode: languageCountryCode);\\n        }\\n    }\\n    print(\\"\u5f53\u524d\u521d\u59cb\u5316\u8bed\u8a00 ${initialLocale}\\");\\n\\n}\\n```\\n\\n\u9700\u8981\u81ea\u5df1\u5199\u4e00\u4e2a\u591a\u8bed\u8a00\u952e\u503c\u5217\u8868 TranslationLanguages \u7ee7\u627f flutter\u7684 Translations\\n\\n```dart\\nclass TranslationLanguages extends Translations {\\n//  \u5b57\u5178\u5217\u8868\\n  @override\\n  Map<String, Map<String, String>> get keys => {\\n    \'en_US\': en_US,\\n    \'zh_Hans\': zh_Hans,\\n    \'zh_HK\': zh_HK,\\n  };\\n}\\n```\\n\\n\u8bed\u8a00\u6620\u5c04Map\u5bf9\u8c61\u6211\u9009\u62e9\u6839\u636e\u8bed\u8a00\u7684\u4e0d\u540c\u5206\u4e0d\u540c\u6587\u4ef6\\n\\n``` dart\\n// en_US.dart\\nconst Map<String, String> en_US = {\\n  \'title\': \'This is Title!\',\\n  \'login\': \'logged in as @name with email @email\',\\n};\\n```\\n\\nGetMaterialApp\\n\\n```dart\\nGetMaterialApp(\\n    title: \\"Material App\\",\\n    // ... \u5176\u4ed6\u914d\u7f6e\u7701\u7565\\n    locale: TranslationService.to.locale,git\\n    fallbackLocale: TranslationService.fallbackLocale,\\n    translations: TranslationService.to.translations,\\n    // ...\\n);\\n```\\n\\n\u603b\u7ed3\uff1a\u770b\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u5b9e\u73b0\u65b9\u6cd5 \u6bd4\u5982 Provider + \u7f13\u5b58 + i18n\u63d2\u4ef6 \uff0c\u4e5f\u770b\u4e86\u4ee5\u4e0b[\u5b98\u65b9\u6587\u6863](https://flutter.cn/docs/development/accessibility-and-localization/internationalization#setting-up)\u4e2d\u7684 flutter_localizations \u4ee5\u53ca\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\u7684\u591a\u8bed\u8a00  \u51e0\u4e4e\u6ca1\u770b\u89c1\u6709\u505a\u8ddf\u968f\u7cfb\u7edf\u8bed\u8a00\u6765\u5207\u6362\u7684\u65b9\u6848\uff0c\u629b\u7816\u5f15\u7389"},{"id":"flutter_getx_theme_demo","metadata":{"permalink":"/arcetop/blog/flutter_getx_theme_demo","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-04-02-flutter_getx_theme_demo.md","source":"@site/blog/2023-04-02-flutter_getx_theme_demo.md","title":"flutter getx \u591a\u4e3b\u9898 \u5305\u542b\u6df1\u8272\u6a21\u5f0f","description":"flutter getx \u591a\u4e3b\u9898 \u5305\u542b\u6df1\u8272\u6a21\u5f0f","date":"2023-04-02T00:00:00.000Z","tags":[{"label":"Dart","permalink":"/arcetop/blog/tags/dart"},{"label":"Flutter","permalink":"/arcetop/blog/tags/flutter"},{"label":"Getx","permalink":"/arcetop/blog/tags/getx"},{"label":"Theme","permalink":"/arcetop/blog/tags/theme"}],"readingTime":5.16,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"flutter_getx_theme_demo","title":"flutter getx \u591a\u4e3b\u9898 \u5305\u542b\u6df1\u8272\u6a21\u5f0f","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"flutter getx \u591a\u4e3b\u9898 \u5305\u542b\u6df1\u8272\u6a21\u5f0f","tags":["Dart","Flutter","Getx","Theme"]},"unlisted":false,"prevItem":{"title":"flutter getx \u591a\u8bed\u8a00 \u542b\u8ddf\u968f\u7cfb\u7edf\u4ee5\u53cafallback","permalink":"/arcetop/blog/flutter_getx_i18n_fallback_demo"},"nextItem":{"title":"\u4f7f\u7528A\u5361\u5728Linuxx\u865a\u62df\u673a\u73a9StableDiffusion","permalink":"/arcetop/blog/linux-amd-stable-diffusion-novel-ai"}},"content":"<div style={{textAlign: \'center\'}}>\\n\\n![flutter_theme_getx](img/2023-04-02-flutter_getx_theme_demo/flutter_theme_getx.gif#pic_center)\\n\\n</div>\\n\\n\u601d\u8def\uff1a\u4f7f\u7528Getx\u7684 changeThemeMode /  forceAppUpdate  \u548c \u7f13\u5b58\\n\\n\x3c!-- truncate --\x3e\\n\\n:::caution \u6ce8\u610f\\n \u754c\u9762\u4ee3\u7801\u53c2\u8003\u5176\u4ed6\u535a\u5ba2\u548c\u9879\u76ee\\n\\n[Allpass: Allpass\u662f\u4e00\u6b3e\u7b80\u6d01\u7684\u79c1\u5bc6\u4fe1\u606f\u7ba1\u7406\u5de5\u5177\uff0c\u5305\u62ec\u5bc6\u7801\u7ba1\u7406\u4e0e\u5361\u7247\u4fe1\u606f\u7ba1\u7406\uff0c\u652f\u6301\u6307\u7eb9\u89e3\u9501\u8f6f\u4ef6\u3001csv\u5bfc\u5165\u5bfc\u51fa\u3001\u4eceChrome\u4e2d\u5bfc\u5165\u3001\u4ece\u526a\u8d34\u677f\u4e2d\u5bfc\u5165\u3001\u6587\u4ef6\u5939\u4e0e\u6807\u7b7e\u529f\u80fd\u3001\u6536\u85cf\u4e0e\u5907\u6ce8\u529f\u80fd\u3001\u5bc6\u7801\u751f\u6210\u5668\u3001WebDAV\u540c\u6b65\u7b49\u529f\u80fd\uff0c\u91c7\u7528Flutter\u6784\u5efa (gitee.com)](https://gitee.com/sunyongsheng/Allpass?_from=gitee_search)\\n\\n[Flutter\u4e3b\u9898\u9002\u914d\u4e0e\u81ea\u52a8\u5207\u6362\u6697\u8272\u6a21\u5f0f - \u6398\u91d1 (juejin.cn)](https://juejin.cn/post/6861889467188412423)\\n\\n[Flutter \u591a\u8bed\u8a00&\u591a\u4e3b\u9898\u5b9e\u73b0 - \u7b80\u4e66 (jianshu.com)](https://www.jianshu.com/p/5b750b05b441)\\n\\n:::\\n\\n## \u539f\u7406\u5206\u6790\\n\\n\u83b7\u53d6\u7f13\u5b58\u4e2d\u7684 \u4e3b\u9898\u6a21\u5f0fSTORAGE_THEME_MODE  \u4e3b\u9898\u8272 STORAGE_THEME_COLOR \u5728 ThemeStore\u7684\u521d\u59cb\u5316\u8fdb\u884c\u8d4b\u503c \u7136\u540e\u5728 ThemeService \u521d\u59cb\u5316\u7684\u65f6\u5019\u53bb\u8f6c\u5316\u518d\u8d4b\u503c  \u5f53\u7136\u4e5f\u53ef\u4ee5\u51cf\u5c11ThemeService \u5c42\u7684\u64cd\u4f5c \u76f4\u63a5\u4eceThemeStore \u5c42\u8fdb\u884c\\n\\n## \u6848\u4f8b\u4ee3\u7801\\n\\nGetMaterialApp\\n\\n```dart\\nGetMaterialApp(\\n    title: \\"Arce App\\",\\n    // ... \u5176\u5b83\u914d\u7f6e\\n    theme: ThemeService.to.lightTheme,\\n    darkTheme: ThemeService.to.darkTheme,\\n    themeMode: ThemeService.to.themeMode,\\n    // ...\\n);\\n```\\n\\n\u6838\u5fc3\u4ee3\u7801\u6587\u4ef6 ThemeStore\\n\\n```dart\\nclass ThemeStore extends GetxController {\\n  static ThemeStore get to => Get.find();\\n  final _themeMode = ThemeMode.light.obs;\\n  final _primaryColor = PrimaryColor.blue.obs;\\n\\n  @override\\n  void onInit() {\\n    super.onInit();\\n    _themeMode.value = ThemeModes.tryParse(StorageService.to.getString(STORAGE_THEME_MODE)) ?? ThemeMode.light;\\n    _primaryColor.value = PrimaryColors.tryParse(StorageService.to.getString(STORAGE_THEME_COLOR)) ?? PrimaryColor.blue;\\n    print(\\"\u521d\u59cb\u5316\u4e3b\u9898\u548c\u989c\u8272${StorageService.to.getString(STORAGE_THEME_MODE)} , ${StorageService.to.getString(STORAGE_THEME_COLOR)}\\");\\n  }\\n\\n  ThemeMode getThemeMode(){\\n    return _themeMode.value;\\n  }\\n\\n  PrimaryColor getPrimaryColor(){\\n    return _primaryColor.value;\\n  }\\n\\n  // \u83b7\u53d6token\\n  Future<void> setThemeMode(ThemeMode value) async{\\n    await StorageService.to.setString(STORAGE_THEME_MODE,value.name);\\n    print(\\"_themeMode \\"+ value.toString());\\n    _themeMode.value = value;\\n  }\\n\\n\\n  Future<void> setPrimaryColor(PrimaryColor value) async{\\n    await StorageService.to.setString(STORAGE_THEME_COLOR,value.name);\\n\\n    print(\\"_primaryColor \\"+ value.toString());\\n    _primaryColor.value = value;\\n  }\\n}\\n```\\n\\n\u6838\u5fc3\u4ee3\u7801\u6587\u4ef6 ThemeService\\n\\n```dart\\nclass ThemeService extends GetxService {\\n  static ThemeService get to => Get.find();\\n\\n  Future<ThemeService> init() async {\\n    _allTheme = ArceAllTheme();\\n    primaryColor = ThemeStore.to.getPrimaryColor();\\n    lightTheme = _convertTheme(primaryColor, false);\\n    darkTheme = _convertTheme(primaryColor, true);\\n    themeMode = ThemeStore.to.getThemeMode();\\n    return this;\\n  }\\n\\n  late ThemeMode themeMode; // \u6d45\u8272 / \u6df1\u8272 / \u8ddf\u968f\u7cfb\u7edf\\n  late ThemeData lightTheme; // \u6d45\u8272\u6a21\u5f0f\u4e0b\u7684\u4e3b\u9898\\n  late ThemeData darkTheme; // \u6697\u8272\u6a21\u5f0f\u4e0b\u7684\u4e3b\u9898\\n  late ArceAllTheme _allTheme; // \u4e3b\u9898\u6a21\u5f0f\\n  late PrimaryColor primaryColor;\\n\\n  /// \u7279\u6b8a\u7684\u80cc\u666f\u989c\u8272\\n  /// \u5c11\u90e8\u5206\u9875\u9762\u80cc\u666f\u989c\u8272\u4e3a\u6d45\u767d\u8272\\n  late Color specialBackgroundColor;\\n  late Color offstageColor;\\n\\n  Future<void> changeThemeMode(ThemeMode targetMode, Brightness platformBrightness) async {\\n    await ThemeStore.to.setThemeMode(targetMode);\\n    themeMode = targetMode;\\n    setExtraColor(platformBrightness);\\n  }\\n\\n  Future<void> changePrimaryColor(PrimaryColor color, Brightness platformBrightness) async {\\n    primaryColor = color;\\n    await ThemeStore.to.setPrimaryColor(color);\\n    lightTheme = _convertTheme(color, false);\\n    darkTheme = _convertTheme(color, true);\\n    setExtraColor(platformBrightness);\\n  }\\n\\n  ThemeData _convertTheme(PrimaryColor color, bool dark) {\\n    switch (color) {\\n      case PrimaryColor.blue:\\n        return _allTheme.blueTheme(dark);\\n      default:\\n        return _allTheme.blueTheme(dark);\\n    }\\n  }\\n\\n  void setExtraColor(Brightness platformBrightness) {\\n    if (themeMode == ThemeMode.system) {\\n      _setExtraColorAuto(platformBrightness);\\n    } else if (themeMode == ThemeMode.dark) {\\n      _setExtraColorDarkMode();\\n    } else {\\n      _setExtraColorLightMode();\\n    }\\n    // notifyListeners();\\n    // Get.changeTheme( lightTheme);\\n\\n    print(\\"\u4e3b\u9898\u4e3a\u4fee\u6539 \\"+ themeMode.toString());\\n    // (()async{Get.changeThemeMode(themeMode);})();  // \u597d\u50cf\u6709\u5f02\u6b65\u95ee\u9898 \u6570\u636e\u66f4\u65b0\u4e86\uff0c\u4f46\u662fui\u5c42\u672a\u66f4\u65b0\\n    // \u5f3a\u5236build\\n    Get.forceAppUpdate();\\n  }\\n\\n  void _setExtraColorLightMode() {\\n    specialBackgroundColor = Color.fromRGBO(245, 246, 250, 1);\\n    offstageColor = Colors.black87;\\n  }\\n\\n  void _setExtraColorDarkMode() {\\n    specialBackgroundColor = Colors.black;\\n    offstageColor = Colors.grey[600]!;\\n  }\\n\\n  void _setExtraColorAuto(Brightness platformBrightness) {\\n    if (platformBrightness == Brightness.dark) {\\n      _setExtraColorDarkMode();\\n    } else {\\n      _setExtraColorLightMode();\\n    }\\n  }\\n}\\n```\\n\\nArceAllTheme\u6587\u4ef6\u5b58\u653e\u4e2d \u4e3b\u9898\u6570\u636e\\n\\n```dart\\n/// \u4e3b\u9898\\nclass ArceAllTheme {\\n    /// ... \u5176\u4ed6\u4e3b\u9898\\n    /// \u9ed8\u8ba4\u4e3b\u9898\\n ThemeData defaultTheme({required MaterialColor mainColor}) {\\n        return ThemeData(\\n          primaryColor: mainColor,\\n          primarySwatch: mainColor,\\n          floatingActionButtonTheme: const FloatingActionButtonThemeData(\\n            foregroundColor: Colors.white,\\n          ),\\n          appBarTheme: const AppBarTheme(\\n            systemOverlayStyle: SystemUiOverlayStyle.dark,\\n            iconTheme: IconThemeData(color: Colors.black),\\n            elevation: 0,\\n            color: Colors.white,\\n            titleTextStyle: TextStyle(color: Colors.black),\\n          ),\\n          bottomNavigationBarTheme: BottomNavigationBarThemeData(\\n            elevation: 0,\\n            selectedItemColor: mainColor,\\n            backgroundColor: Colors.white,\\n            unselectedItemColor: Colors.grey,\\n          ),\\n          scaffoldBackgroundColor: Colors.white,\\n          buttonTheme: const ButtonThemeData(\\n            shape: RoundedRectangleBorder(\\n              borderRadius: BorderRadius.all(Radius.circular(8.0)),\\n            ),\\n          ),\\n          textButtonTheme: TextButtonThemeData(\\n            style: ButtonStyle(\\n              foregroundColor: MaterialStateProperty.all(Colors.black),\\n              backgroundColor: MaterialStateProperty.all(Colors.transparent),\\n              alignment: Alignment.center,\\n              shape: MaterialStateProperty.all(\\n                const RoundedRectangleBorder(\\n                  borderRadius: BorderRadius.all(Radius.circular(8.0)),\\n                ),\\n              ),\\n            ),\\n          ),\\n          indicatorColor: mainColor,\\n          textSelectionTheme: TextSelectionThemeData(cursorColor: mainColor),\\n          cardTheme: const CardTheme(\\n            color: Colors.white,\\n            shape: RoundedRectangleBorder(\\n              borderRadius: BorderRadius.all(Radius.circular(8.0)),\\n            ),\\n            elevation: 0,\\n            clipBehavior: Clip.antiAlias,\\n          ),\\n          inputDecorationTheme: const InputDecorationTheme(\\n            fillColor: Color.fromRGBO(245, 246, 250, 1),\\n            border: OutlineInputBorder(\\n              borderRadius: BorderRadius.all(Radius.circular(8.0)),\\n              borderSide: BorderSide.none,\\n            ),\\n          ),\\n          dialogTheme: const DialogTheme(\\n            shape: RoundedRectangleBorder(\\n              borderRadius: BorderRadius.all(Radius.circular(8.0)),\\n            ),\\n          ),\\n          bottomSheetTheme: const BottomSheetThemeData(\\n            shape: RoundedRectangleBorder(\\n              borderRadius: BorderRadius.only(\\n                  topLeft: Radius.circular(8.0), topRight: Radius.circular(8.0)),\\n            ),\\n          ),\\n          popupMenuTheme: const PopupMenuThemeData(\\n            shape: RoundedRectangleBorder(\\n              borderRadius: BorderRadius.all(Radius.circular(8.0)),\\n            ),\\n          ),\\n          listTileTheme: const ListTileThemeData(minLeadingWidth: 32),\\n        );\\n      }\\n}\\n```\\n\\n\u4e3b\u9898\u6a21\u5f0f ThemeMode\u76f8\u5173\\n\\n```dart\\nclass ThemeModes {\\n  static ThemeMode? tryParse(String? name) {\\n    if (name == ThemeMode.light.name) {\\n      return ThemeMode.light;\\n    } else if (name == ThemeMode.dark.name) {\\n      return ThemeMode.dark;\\n    } else if (name == ThemeMode.system.name) {\\n      return ThemeMode.system;\\n    }\\n    return null;\\n  }\\n}\\n\\nclass ThemeModeItem {\\n  final ThemeMode mode;\\n  final String desc;\\n\\n  const ThemeModeItem(this.mode, this.desc);\\n}\\n\\nvar themeModes = [\\n  const ThemeModeItem(ThemeMode.system, \\"\u8ddf\u968f\u7cfb\u7edf\\"),\\n  const ThemeModeItem(ThemeMode.light, \\"\u6d45\u8272\\"),\\n  const ThemeModeItem(ThemeMode.dark, \\"\u6df1\u8272\\")\\n];\\n```\\n\\n\u4e3b\u9898\u8272  PrimaryColor \u76f8\u5173\\n\\n```dart\\n\\nenum PrimaryColor { blue, blueGrey }\\n\\nclass PrimaryColors {\\n  static PrimaryColor? tryParse(String? name) {\\n    for (var color in PrimaryColor.values) {\\n      if (color.name == name) {\\n        return color;\\n      }\\n    }\\n    return null;\\n  }\\n}\\n\\nclass PrimaryColorItem {\\n  final PrimaryColor primaryColor;\\n  final String desc;\\n  final Color color;\\n  const PrimaryColorItem(this.primaryColor, this.desc, this.color);\\n}\\n\\nvar primaryColors = [\\n  const PrimaryColorItem(PrimaryColor.blue, \\"\u84dd\u8272\\", Colors.blue),\\n  const PrimaryColorItem(PrimaryColor.blueGrey, \\"\u84dd\u7070\\", Colors.blueGrey),\\n];\\n\\n```\\n\\n\u603b\u7ed3\uff1aGet\u4e2d\u597d\u50cf\u53ea\u6709 changeThemeMode \u7684\u65b9\u6cd5 \u6240\u4ee5\u6709\u4e00\u4e2a\u4e0d\u597d\u7684\u5730\u65b9\u662f\u5207\u6362\u4e3b\u9898\u989c\u8272\u540e\u9700\u8981\u8c03\u7528 Get.forceAppUpdate() \u65b9\u6cd5\u624d\u6709\u6548\u679c\uff0c\u5982\u679c\u4e0d\u5e0c\u671b\u7528\u6237\u9891\u7e41\u7684\u8c03\u7528 forceAppUpdate\u65b9\u6cd5\uff0c\u53ef\u4ee5\u52a0\u4e00\u5c42\u9632\u6296\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u5728setThemeMode\u65b9\u6cd5\u4e2d\u7528changeThemeMode\u65b9\u6cd5 \uff0c\u5728setPrimaryColor\u65b9\u6cd5\u4e2d\u8c03\u7528forceAppUpdate\u65b9\u6cd5"},{"id":"linux-amd-stable-diffusion-novel-ai","metadata":{"permalink":"/arcetop/blog/linux-amd-stable-diffusion-novel-ai","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-19-uses-Linuxx-virtual-machine-play-SD.md","source":"@site/blog/2023-03-19-uses-Linuxx-virtual-machine-play-SD.md","title":"\u4f7f\u7528A\u5361\u5728Linuxx\u865a\u62df\u673a\u73a9StableDiffusion","description":"\u4f7f\u7528A\u5361\u5728Linuxx\u865a\u62df\u673a\u73a9Stable Diffusion AI \u7ed8\u753b","date":"2023-03-19T00:00:00.000Z","tags":[{"label":"AI","permalink":"/arcetop/blog/tags/ai"},{"label":"Stable Diffusion","permalink":"/arcetop/blog/tags/stable-diffusion"},{"label":"AMD","permalink":"/arcetop/blog/tags/amd"},{"label":"Linux","permalink":"/arcetop/blog/tags/linux"}],"readingTime":0.735,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"linux-amd-stable-diffusion-novel-ai","title":"\u4f7f\u7528A\u5361\u5728Linuxx\u865a\u62df\u673a\u73a9StableDiffusion","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u4f7f\u7528A\u5361\u5728Linuxx\u865a\u62df\u673a\u73a9Stable Diffusion AI \u7ed8\u753b","tags":["AI","Stable Diffusion","AMD","Linux"]},"unlisted":false,"prevItem":{"title":"flutter getx \u591a\u4e3b\u9898 \u5305\u542b\u6df1\u8272\u6a21\u5f0f","permalink":"/arcetop/blog/flutter_getx_theme_demo"},"nextItem":{"title":"Config \u914d\u7f6e\u4e2d\u5fc3","permalink":"/arcetop/blog/spring-cloud-config-center"}},"content":"![linux install](img/2023-03-19-A\u5361\u4f7f\u7528Linuxx\u865a\u62df\u673a\u73a9Stable/image-20230319004743806.png)\\n\\n## \u66f4\u65b0 apt\\n\\n```shell\\nsudo apt-get update\\nsudo apt-get upgrade\\nsudo apt-get install wget gnupg2 git\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\n:::caution \u6ce8\u610f \u672c\u6587\u65e0\u6709\u8425\u517b\u7684\u5185\u5bb9\uff0c\u8bf7\u9000\u51fa\uff0c\u62b1\u6b49 :::\\n\\n## \u5b89\u88c5 AMD GPU \u9a71\u52a8\\n\\n```shell\\nsudo usermod -a -G video $LOGNAME\\necho \'ADD_EXTRA_GROUPS=1\' | sudo tee -a /etc/adduser.conf\\necho \'EXTRA_GROUPS=video\' | sudo tee -a /etc/adduser.conf\\necho \'EXTRA_GROUPS=render\' | sudo tee -a /etc/adduser.conf\\nwget https://repo.radeon.com/amdgpu-install/22.20/ubuntu/focal/amdgpu-install_22.20.50200-1_all.deb\\nsudo apt-get install ./amdgpu-install_22.20.50200-1_all.deb\\n```\\n\\n## \u66f4\u6539 AMD Rocm \u6e90\\n\\n```shell\\nsudo amdgpu-install --usecase=hiplibsdk,rocm --no-dkms\\n```\\n\\n```shell\\nsudo usermod -a -G video $LOGNAME\\nsudo usermod -a -G render $LOGNAME\\necho \'export PATH=$PATH:/opt/rocm/bin:/opt/rocm/profiler/bin:/opt/rocm/opencl/bin\' | sudo tee -a /etc/profile.d/rocm.sh\\n```\\n\\n```shell\\nrocm-smi\\nsudo /opt/rocm/bin/rocminfo\\nsudo /opt/rocm/opencl/bin/clinfo\\n```\\n\\n\u6839\u636e\u663e\u793a\u7684\u4fe1\u606f\u5b89\u88c5 (gfx1030)\\n\\n```shell\\nsudo apt-get install miopenkernels-gfx1030-36kdb\\n```"},{"id":"spring-cloud-config-center","metadata":{"permalink":"/arcetop/blog/spring-cloud-config-center","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-config.md","source":"@site/blog/2023-03-12-spring-cloud-config.md","title":"Config \u914d\u7f6e\u4e2d\u5fc3","description":"\u6d4b\u8bd5","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"SpringCloud","permalink":"/arcetop/blog/tags/spring-cloud"},{"label":"Java","permalink":"/arcetop/blog/tags/java"}],"readingTime":2.005,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-config-center","title":"Config \u914d\u7f6e\u4e2d\u5fc3","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["SpringCloud","Java"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"\u4f7f\u7528A\u5361\u5728Linuxx\u865a\u62df\u673a\u73a9StableDiffusion","permalink":"/arcetop/blog/linux-amd-stable-diffusion-novel-ai"},"nextItem":{"title":"Eureka \u6ce8\u518c\u4e2d\u5fc3","permalink":"/arcetop/blog/spring-cloud-eureka"}},"content":"[Config \u914d\u7f6e\u4e2d\u5fc3\u5b98\u65b9\u6587\u6863](https://docs.spring.io/spring-cloud-config/docs/current/reference/html/)\\n\\n### \u90e8\u7f72\u914d\u7f6e\u4e2d\u5fc3\u670d\u52a1\u7aef\\n\\n\u521b\u5efa\u4e00\u4e2aconfig\u5fae\u670d\u52a1\\n\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-config-server</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\n\u6dfb\u52a0\u914d\u7f6e\\n\\n```yaml\\nserver:\\n  port: 8700\\nspring:\\n  application:\\n    name: \\"ConfigServer\\"\\n  cloud:\\n    config:\\n      server:\\n        git:\\n          # \u8fd9\u91cc\u586b\u5199\u7684\u662f\u672c\u5730\u4ed3\u5e93\u5730\u5740\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u76f4\u63a5\u586b\u5199\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 http://git...\\n          uri: file://${user.home}/Desktop/Mi/config-repo\\n          # \u9ed8\u8ba4\u5206\u652f\u8bbe\u5b9a\u4e3a\u4f60\u81ea\u5df1\u672c\u5730\u6216\u662f\u8fdc\u7a0b\u5206\u652f\u7684\u540d\u79f0\\n          default-label: master\\neureka:\\n  client:\\n    service-url:\\n      defaultZone: http://localhost:8801/eureka, http://localhost:8802/eureka\\n```\\n\\n\u7f16\u5199\u542f\u52a8\u7c7b\\n\\n```java\\n@EnableConfigServer\\n@SpringBootApplication\\npublic class ConfigApplication {\\n    public static void main(String[] args) {\\n        SpringApplication.run(ConfigApplication.class,args);\\n    }\\n}\\n\\n```\\n\\n\u5728\u8fdc\u7aef\u6216\u8005\u672c\u5730\u521b\u5efa\u4e00\u4e2agit\u4ed3\u5e93 \u7f16\u5199\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u63d0\u4ea4\\n\u6ce8\u610f\u8fd9\u91cc\u7684\u4ed3\u5e93\u5730\u5740\u8981\u4e0e`spring.cloud.config.server.git.uri`\u4e00\u81f4\\n[\u8bbf\u95ee\u914d\u7f6e\u4e2d\u5fc3master\u5206\u652f\u7684bookservice-dev.yml\u6587\u4ef6](http://localhost:8700/master/bookservice-dev.yml)\\n![image.png](img/2023-03-12-spring-cloud-config/1660729064425-3ec23462-1d7c-4ed7-8f5c-50680b2f7610.png)\\n\\n### \u914d\u7f6e\u5ba2\u6237\u7aef\\n\\n\u6211\u4eec\u5c06\u5fae\u670d\u52a1\u5ba2\u6237\u7aef\u7684\u914d\u7f6e\u6587\u4ef6\u6539\u540d\u4e3a`bootstrap.yml`\u8fd9\u662f\u4e00\u4e2a\u7cfb\u7edf\u7ea7\u522b\u7684\u53c2\u6570\u914d\u7f6e\uff0c\u4f1a\u5728\u5e94\u7528\u7ea7\u522b\u914d\u7f6e`application.yml`\u4e4b\u524d\u52a0\u8f7d\uff0c\u5982\u679c\u4fdd\u7559\u7684\u8bdd\uff0c\u5982\u679c\u51fa\u73b0\u76f8\u540c\u5c5e\u6027\uff0c\u5c06\u4f1a\u8986\u76d6\\n\u5ba2\u6237\u7aef\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-config</artifactId>\\n</dependency>\\n\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-bootstrap</artifactId>\\n</dependency>\\n```\\n\\n\u5ba2\u6237\u7aef\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6`bootstrap.yml`\\n\\n```yaml\\nspring:\\n  cloud:\\n    config:\\n      # \u540d\u79f0\uff0c\u5176\u5b9e\u5c31\u662f\u6587\u4ef6\u540d\u79f0\\n      name: \\"bookservice\\"\\n      # \u914d\u7f6e\u670d\u52a1\u5668\u7684\u5730\u5740\\n      uri: http://localhost:8700\\n      # \u73af\u5883\\n      profile: dev\\n      # \u5206\u652f\\n      label: master\\n```\\n\\n\u4fdd\u7559\u7684`application.xml`\u8fd9\u4e2a\u6587\u4ef6\u6ca1\u6709\u914d\u7f6e\u6570\u636e\u6e90\\n\\n```yaml\\nserver:\\n  port: 8081\\nspring:\\n  application:\\n    name: \\"BookService\\"\\neureka:\\n  client:\\n    # \u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u9700\u8981\u6307\u5411Eureka\u670d\u52a1\u7aef\u5730\u5740\uff0c\u8fd9\u6837\u624d\u80fd\u8fdb\u884c\u6ce8\u518c \u9ed8\u8ba4\u7aef\u53e38761\\n    service-url:\\n      defaultZone: http://localhost:8801/eureka, http://localhost:8802/eureka\\n```\\n\\n\u542f\u52a8\u5fae\u670d\u52a1\u5ba2\u6237\u7aef\\n![image.png](img/2023-03-12-spring-cloud-config/1660730235957-546d0e34-f2ea-4910-b1b1-669eeb22a60a.png)"},{"id":"spring-cloud-eureka","metadata":{"permalink":"/arcetop/blog/spring-cloud-eureka","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-eureka.md","source":"@site/blog/2023-03-12-spring-cloud-eureka.md","title":"Eureka \u6ce8\u518c\u4e2d\u5fc3","description":"\u6ce8\u518c\u4e2d\u5fc3","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"SpringCloud","permalink":"/arcetop/blog/tags/spring-cloud"},{"label":"Java","permalink":"/arcetop/blog/tags/java"}],"readingTime":2.93,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-eureka","title":"Eureka \u6ce8\u518c\u4e2d\u5fc3","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6ce8\u518c\u4e2d\u5fc3","tags":["SpringCloud","Java"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"Config \u914d\u7f6e\u4e2d\u5fc3","permalink":"/arcetop/blog/spring-cloud-config-center"},"nextItem":{"title":"Feign \u8fdc\u7a0b\u8c03\u7528","permalink":"/arcetop/blog/spring-cloud-feign"}},"content":"[Eureka\u548cZooKeeper\u7684\u533a\u522b](https://blog.csdn.net/java_xth/article/details/82621776)\\nEureka\u80fd\u591f\u81ea\u52a8\u6ce8\u518c\u5e76\u53d1\u73b0\u5fae\u670d\u52a1\uff0c\u7136\u540e\u5bf9\u670d\u52a1\u7684\u72b6\u6001\u3001\u4fe1\u606f\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406,\u4fdd\u8bc1AP\\n> \u5728\u5206\u5e03\u5f0f\u9886\u57df\u6709\u4e00\u4e2a\u5f88\u8457\u540d\u7684CAP\u5b9a\u7406\uff1aC\uff1a\u6570\u636e\u4e00\u81f4\u6027\u3002A\uff1a\u670d\u52a1\u53ef\u7528\u6027\u3002P\uff1a\u5206\u533a\u5bb9\u9519\u6027\uff08\u670d\u52a1\u5bf9\u7f51\u7edc\u5206\u533a\u6545\u969c\u7684\u5bb9\u9519\u6027\uff09\u3002\\n\\n\u5728\u7236\u5de5\u7a0bpom\u4e2d\\n\\n```xml\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-dependencies</artifactId>\\n  <version>2021.0.3</version>\\n  <type>pom</type>\\n  <scope>import</scope>\\n</dependency>\\n```\\n\x3c!-- truncate --\x3e\\n\\n\u63a5\u7740\u6211\u4eec\u4e3a\u65b0\u521b\u5efa\u7684\u9879\u76ee(eureka-server)\u6dfb\u52a0\u4f9d\u8d56\uff1a\\n\\n```xml\\n<dependencies>\\n    <dependency>\\n        <groupId>org.springframework.cloud</groupId>\\n        <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\\n    </dependency>\\n</dependencies>\\n```\\n\\neureka-server \u914d\u7f6e\\n\\n```yaml\\nserver:\\n  port: 8888\\neureka:\\n  # \u5f00\u542f\u4e4b\u524d\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u5ba2\u6237\u7aef\u8bbe\u7f6e\uff08\u867d\u7136\u662f\u670d\u52a1\u7aef\\n  client:\\n    # \u7531\u4e8e\u6211\u4eec\u662f\u4f5c\u4e3a\u670d\u52a1\u7aef\u89d2\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u83b7\u53d6\u670d\u52a1\u7aef\uff0c\u6539\u4e3afalse\uff0c\u9ed8\u8ba4\u4e3atrue\\n    fetch-registry: false\\n    # \u6682\u65f6\u4e0d\u9700\u8981\u5c06\u81ea\u5df1\u4e5f\u6ce8\u518c\u5230Eureka\\n    register-with-eureka: false\\n    # \u5c06eureka\u670d\u52a1\u7aef\u6307\u5411\u81ea\u5df1\\n    service-url:\\n          defaultZone: http://localhost:8888/eureka\\n```\\n\\n\u8bbf\u95ee [\u672c\u5730Eureka\u670d\u52a1](http://localhost:8888)\\n![image.png](img/2023-03-12-spring-cloud-eureka/1660664719098-e19ae168-a6e4-42f9-9178-e340a761d4a1.png)\\n\u5c06\u5fae\u670d\u52a1\u90fd\u6ce8\u518c\u8fdb\u6765\\n\\n```xml\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n</dependency>\\n```\\n\\n```yaml\\neureka:\\n  client:\\n    # \u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u9700\u8981\u6307\u5411Eureka\u670d\u52a1\u7aef\u5730\u5740\uff0c\u8fd9\u6837\u624d\u80fd\u8fdb\u884c\u6ce8\u518c \u9ed8\u8ba4\u7aef\u53e38761\\n    service-url:\\n          defaultZone: http://localhost:8888/eureka\\n```\\n\\n\u518d\u6b21\u8bbf\u95ee [\u672c\u5730Eureka\u670d\u52a1](http://localhost:8888)\\n![image.png](img/2023-03-12-spring-cloud-eureka/1660665314235-d6a939b9-24b5-4ce4-9a96-58aff57554ed.png)\\n\\n### \u96c6\u7fa4\\n\\n\u521b\u5efa\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\\n`eureka.instance.hostname`\u4f7f\u7528localhost\u65e0\u6548\u679c \u9700\u4fee\u6539hosts\u6587\u4ef6\u8ba9\u8be5hostname\u6307\u5411127.0.0.1\\n\\n```yaml\\nserver:\\n  port: 8801\\nspring:\\n  application:\\n    name: \\"EurekaServer\\"\\neureka:\\n  instance:\\n    hostname: eurekaServer01\\n    # \u5f00\u542f\u4e4b\u524d\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u5ba2\u6237\u7aef\u8bbe\u7f6e\uff08\u867d\u7136\u662f\u670d\u52a1\u7aef\\n  client:\\n    # \u7531\u4e8e\u6211\u4eec\u662f\u4f5c\u4e3a\u670d\u52a1\u7aef\u89d2\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u83b7\u53d6\u670d\u52a1\u7aef\uff0c\u6539\u4e3afalse\uff0c\u9ed8\u8ba4\u4e3atrue\\n    fetch-registry: false\\n    # \u6682\u65f6\u4e0d\u9700\u8981\u5c06\u81ea\u5df1\u4e5f\u6ce8\u518c\u5230Eureka\\n    # register-with-eureka: false\\n    # \u5c06eureka\u670d\u52a1\u7aef\u6307\u5411\u81ea\u5df1\\n    service-url:\\n      defaultZone: http://eurekaServer02:8802/eureka\\n```\\n\\n```yaml\\nserver:\\n  port: 8802\\nspring:\\n  application:\\n    name: \\"EurekaServer\\"\\neureka:\\n  instance:\\n    hostname: eurekaServer02\\n    # \u5f00\u542f\u4e4b\u524d\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u5ba2\u6237\u7aef\u8bbe\u7f6e\uff08\u867d\u7136\u662f\u670d\u52a1\u7aef\\n  client:\\n    # \u7531\u4e8e\u6211\u4eec\u662f\u4f5c\u4e3a\u670d\u52a1\u7aef\u89d2\u8272\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u83b7\u53d6\u670d\u52a1\u7aef\uff0c\u6539\u4e3afalse\uff0c\u9ed8\u8ba4\u4e3atrue\\n    fetch-registry: false\\n    # \u6682\u65f6\u4e0d\u9700\u8981\u5c06\u81ea\u5df1\u4e5f\u6ce8\u518c\u5230Eureka\\n    # register-with-eureka: false\\n    # \u5c06eureka\u670d\u52a1\u7aef\u6307\u5411\u81ea\u5df1\\n    service-url:\\n      defaultZone: http://eurekaServer01:8801/eureka\\n```\\n\\n\u5728\u5176\u4ed6\u5fae\u670d\u52a1\u4e2d\u4fee\u6539\u914d\u7f6e`eureka.client.service-url.defaultZone`\\n\\n```yaml\\neureka:\\n  client:\\n    # \u8ddf\u4e0a\u9762\u4e00\u6837\uff0c\u9700\u8981\u6307\u5411Eureka\u670d\u52a1\u7aef\u5730\u5740\uff0c\u8fd9\u6837\u624d\u80fd\u8fdb\u884c\u6ce8\u518c \u9ed8\u8ba4\u7aef\u53e38761\\n    service-url:\\n      defaultZone: http://localhost:8801/eureka,http://localhost:8802/eureka\\n```\\n\\n\u6548\u679c\\neurekaServer01:[\u672c\u5730Eureka\u670d\u52a11](http://localhost:8801/)\\n![image.png](img/2023-03-12-spring-cloud-eureka/1660669053863-1da01b07-345f-4298-83d8-b87ed881b1b9.png)\\neurekaServer02: [\u672c\u5730Eureka\u670d\u52a12](http://localhost:8802/)\\n![image.png](img/2023-03-12-spring-cloud-eureka/1660669038808-c89c7a74-537b-4c1d-9313-ca30f7bbf20b.png)"},{"id":"spring-cloud-feign","metadata":{"permalink":"/arcetop/blog/spring-cloud-feign","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-feign.md","source":"@site/blog/2023-03-12-spring-cloud-feign.md","title":"Feign \u8fdc\u7a0b\u8c03\u7528","description":"\u6d4b\u8bd5","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"SpringCloud","permalink":"/arcetop/blog/tags/spring-cloud"},{"label":"Java","permalink":"/arcetop/blog/tags/java"}],"readingTime":0.935,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-feign","title":"Feign \u8fdc\u7a0b\u8c03\u7528","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["SpringCloud","Java"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"Eureka \u6ce8\u518c\u4e2d\u5fc3","permalink":"/arcetop/blog/spring-cloud-eureka"},"nextItem":{"title":"Gateway \u670d\u52a1\u7f51\u5173","permalink":"/arcetop/blog/spring-cloud-gateway"}},"content":"[OpenFeign\u5b98\u65b9\u6587\u6863](https://docs.spring.io/spring-cloud-openfeign/docs/current/reference/html/)\\nFeign\u548cRestTemplate\u4e00\u6837\uff0c\u4e5f\u662fHTTP\u5ba2\u6237\u7aef\u8bf7\u6c42\u5de5\u5177\uff0c\u4f46\u662f\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u66f4\u52a0\u4fbf\u6377\u3002\\n\u5728\u9700\u8981\u4f7f\u7528Feign\u7684\u670d\u52a1\u4e2d\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-openfeign</artifactId>\\n</dependency>\\n```\\n\x3c!-- truncate --\x3e\\n\\n\u5728\u542f\u52a8\u7c7b\u6dfb\u52a0\u6ce8\u89e3 `@EnableFeignClients`\\n\u521b\u5efa\u9700\u8981\u7684Client\\n\\n``` java\\n@FeignClient(\\"UserService\\")   //\u58f0\u660e\u4e3a UserService \u670d\u52a1\u7684HTTP\u8bf7\u6c42\u5ba2\u6237\u7aef\\npublic interface UserClient {\\n    //\u8def\u5f84\u4fdd\u8bc1\u548c\u5fae\u670d\u52a1\u63d0\u4f9b\u7684\u4e00\u81f4\u5373\u53ef\\n    @GetMapping(\\"/users/{uid}\\")\\n    User getUserById(@PathVariable(\\"uid\\") int uid);\\n}\\n```\\n\\n``` java\\n@FeignClient(\\"BookService\\")\\npublic interface BookClient {\\n    @GetMapping(\\"/books/{bid}\\")\\n    Book getBookById(@PathVariable int bid);\\n}\\n```\\n\\n\u4fee\u6539\u4e4b\u524d\u4f7f\u7528Rest Template\u7684\u670d\u52a1\\n\\n```java\\n@Service\\npublic class BorrowServiceImpl implements BorrowService {\\n    @Resource\\n    private BorrowMapper borrowMapper;\\n    @Resource\\n    UserClient userClient;\\n    @Resource\\n    BookClient bookClient;\\n    @Override\\n    public UserBorrowDetail getUserBorrowDetailByUid(int uid) {\\n        List<Borrow> borrowsByUid = borrowMapper.getBorrowsByUid(uid);\\n        User user = userClient.getUserById(uid);\\n        List<Book> bookList = borrowsByUid\\n            .stream()\\n            .map(borrow -> bookClient.getBookById(borrow.getBid()))\\n            .collect(Collectors.toList());\\n        return new UserBorrowDetail(user,bookList);\\n    }\\n}\\n```"},{"id":"spring-cloud-gateway","metadata":{"permalink":"/arcetop/blog/spring-cloud-gateway","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-gateway.md","source":"@site/blog/2023-03-12-spring-cloud-gateway.md","title":"Gateway \u670d\u52a1\u7f51\u5173","description":"\u6d4b\u8bd5","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"Unity","permalink":"/arcetop/blog/tags/unity"},{"label":"CSharp","permalink":"/arcetop/blog/tags/c-sharp"}],"readingTime":4.215,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-gateway","title":"Gateway \u670d\u52a1\u7f51\u5173","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["Unity","CSharp"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"Feign \u8fdc\u7a0b\u8c03\u7528","permalink":"/arcetop/blog/spring-cloud-feign"},"nextItem":{"title":"Hystrix \u670d\u52a1\u7194\u65ad","permalink":"/arcetop/blog/spring-cloud-hystrix"}},"content":"[Gateway\u5b98\u65b9\u6587\u6863](https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/)\\n\\n### \u90e8\u7f72\u7f51\u5173\\n\\n\u521b\u5efa\u4e00\u4e2a\u7f51\u5173\u5fae\u670d\u52a1\uff0c\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependencies>\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-gateway</artifactId>\\n  </dependency>\\n  <dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\\n  </dependency>\\n</dependencies>\\n```\\n\x3c!-- truncate --\x3e\\n\\n\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6\\n\\n```yaml\\nserver:\\n  port: 8500\\neureka:\\n  client:\\n   service-url:\\n    defaultZone: http://localhost:8801/eureka, http://localhost:8802/eureka\\nspring:\\n  application:\\n   name: gateway\\n  cloud:\\n   gateway:\\n    # \u914d\u7f6e\u8def\u7531\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u4e2a\u5217\u8868\uff0c\u6bcf\u4e00\u9879\u90fd\u5305\u542b\u4e86\u5f88\u591a\u4fe1\u606f\\n    routes:\\n    - id: borrow-service   # \u8def\u7531\u540d\u79f0\\n      uri: lb://BorrowService  # \u8def\u7531\u7684\u5730\u5740\uff0clb\u8868\u793a\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5230\u5fae\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528http\u6b63\u5e38\u8f6c\u53d1\\n      predicates: # \u8def\u7531\u89c4\u5219\uff0c\u65ad\u8a00\u4ec0\u4e48\u8bf7\u6c42\u4f1a\u88ab\u8def\u7531\\n      - Path=/borrows/**  # \u53ea\u8981\u662f\u8bbf\u95ee\u7684\u8fd9\u4e2a\u8def\u5f84\uff0c\u4e00\u5f8b\u90fd\u88ab\u8def\u7531\u5230\u4e0a\u9762\u6307\u5b9a\u7684\u670d\u52a1\\n```\\n\\n\u542f\u52a8\u7c7b\\n\\n``` java\\n@SpringBootApplication\\npublic class GatewayApplication {\\n    public static void main(String[] args) {\\n        SpringApplication.run(GatewayApplication.class,args);\\n    }\\n}\\n```\\n\\n\u8bbf\u95ee\u4ee5\u4e0b\u63a5\u53e3`http://localhost:8500/borrows/1`\\n\u5c06\u8def\u7531\u5230 `http://BorrowService/borrows/1`\\n\\n### \u8def\u7531\u8fc7\u6ee4\u5668\\n\\n[Spring Cloud Gateway \u8def\u7531\u8fc7\u6ee4\u5668\u6587\u6863](https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gatewayfilter-factories)\\n\u8def\u7531\u7b5b\u9009\u5668\u5141\u8bb8\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fee\u6539\u4f20\u5165 HTTP \u8bf7\u6c42\u6216\u4f20\u51fa HTTP \u54cd\u5e94\u3002\\n\u5c1d\u8bd5\u7ed9\u8bf7\u6c42\u6dfb\u52a0\u4e00\u4e2aHeader\\n\\n``` yaml\\nserver:\\n  port: 8500\\neureka:\\n  client:\\n   service-url:\\n    defaultZone: http://localhost:8801/eureka, http://localhost:8802/eureka\\nspring:\\n  application:\\n   name: gateway\\n  cloud:\\n   gateway:\\n    # \u914d\u7f6e\u8def\u7531\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u4e2a\u5217\u8868\uff0c\u6bcf\u4e00\u9879\u90fd\u5305\u542b\u4e86\u5f88\u591a\u4fe1\u606f\\n    routes:\\n    - id: borrow-service   # \u8def\u7531\u540d\u79f0\\n      uri: lb://BorrowService  # \u8def\u7531\u7684\u5730\u5740\uff0clb\u8868\u793a\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5230\u5fae\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528http\u6b63\u5e38\u8f6c\u53d1\\n      predicates: # \u8def\u7531\u89c4\u5219\uff0c\u65ad\u8a00\u4ec0\u4e48\u8bf7\u6c42\u4f1a\u88ab\u8def\u7531\\n      - Path=/borrows/**  # \u53ea\u8981\u662f\u8bbf\u95ee\u7684\u8fd9\u4e2a\u8def\u5f84\uff0c\u4e00\u5f8b\u90fd\u88ab\u8def\u7531\u5230\u4e0a\u9762\u6307\u5b9a\u7684\u670d\u52a1\\n    - id: book-service\\n      uri: lb://BookService\\n      predicates:\\n      - Path=/books/**\\n      filters: # \u6dfb\u52a0\u8fc7\u6ee4\u5668\\n      - AddRequestHeader=Test, HelloWorld!\\n      # AddRequestHeader \u5c31\u662f\u6dfb\u52a0\u8bf7\u6c42\u5934\u4fe1\u606f\uff0c\u5176\u4ed6\u5de5\u5382\u8bf7\u67e5\u9605\u5b98\u7f51\\n```\\n\\n\u5728\u8def\u7531\u5bf9\u5e94\u5fae\u670d\u52a1\u7684controller\u5c42\u4e2d\u83b7\u53d6header\\n\\n```java\\n@GetMapping(\\"/{bid}\\")\\nBook findBookById(@PathVariable(\\"bid\\") int bid,\\n                  HttpServletRequest request){\\n    System.out.println(request.getHeader(\\"Test\\"));\\n    return bookService.getBookById(bid);\\n}\\n```\\n\\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5168\u5c40\u8fc7\u6ee4\u5668`\u5224\u65ad\u662f\u5426\u5305\u542btest\u53c2\u6570\uff0c\u4e14\u53c2\u6570\u503c\u5305\u542b 1`\\n\\n```java\\n@Component   //\u9700\u8981\u6ce8\u518c\u4e3aBean\\npublic class TestFilter implements GlobalFilter {\\n    @Override\\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\\n        //\u5148\u83b7\u53d6ServerHttpRequest\u5bf9\u8c61\uff0c\u6ce8\u610f\u4e0d\u662fHttpServletRequest\\n        ServerHttpRequest request = exchange.getRequest();\\n        //\u6253\u5370\u4e00\u4e0b\u6240\u6709\u7684\u8bf7\u6c42\u53c2\u6570\\n        System.out.println(request.getQueryParams());\\n        //\u5224\u65ad\u662f\u5426\u5305\u542btest\u53c2\u6570\uff0c\u4e14\u53c2\u6570\u503c\u5305\u542b 1\\n        List<String> value = request.getQueryParams().get(\\"test\\");\\n        if(value != null && value.contains(\\"1\\")) {\\n            //\u5c06ServerWebExchange\u5411\u8fc7\u6ee4\u94fe\u7684\u4e0b\u4e00\u7ea7\u4f20\u9012\uff08\u8ddfJavaWeb\u4e2d\u4ecb\u7ecd\u7684\u8fc7\u6ee4\u5668\u5176\u5b9e\u662f\u5dee\u4e0d\u591a\u7684\uff09\\n            return chain.filter(exchange);\\n        }else {\\n            //\u76f4\u63a5\u5728\u8fd9\u91cc\u4e0d\u518d\u5411\u4e0b\u4f20\u9012\uff0c\u7136\u540e\u8fd4\u56de\u54cd\u5e94\\n            return exchange.getResponse().setComplete();\\n        }\\n    }\\n}\\n```\\n\\n![image.png](img/2023-03-12-spring-cloud-gateway/1660726228293-72e81796-8d3b-4bbe-a090-be6c3eca5e38.png)\\n![image.png](img/2023-03-12-spring-cloud-gateway/1660726207425-fe7e6619-4511-4816-849f-f822e4f2183a.png)\\n\u624b\u52a8\u6307\u5b9a\u8fc7\u6ee4\u5668\u4f18\u5148\u7ea7 `Ordered` \u63a5\u53e3 **getOrder\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8**\\n\\n```java\\n@Component   //\u9700\u8981\u6ce8\u518c\u4e3aBean\\npublic class TestFilter implements GlobalFilter , Ordered {\\n    @Override\\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\\n        //\u5148\u83b7\u53d6ServerHttpRequest\u5bf9\u8c61\uff0c\u6ce8\u610f\u4e0d\u662fHttpServletRequest\\n        ServerHttpRequest request = exchange.getRequest();\\n        //\u6253\u5370\u4e00\u4e0b\u6240\u6709\u7684\u8bf7\u6c42\u53c2\u6570\\n        System.out.println(request.getQueryParams());\\n        //\u5224\u65ad\u662f\u5426\u5305\u542btest\u53c2\u6570\uff0c\u4e14\u53c2\u6570\u503c\u4e3a 1\\n        List<String> value = request.getQueryParams().get(\\"test\\");\\n        if(value != null && value.contains(\\"1\\")) {\\n            //\u5c06ServerWebExchange\u5411\u8fc7\u6ee4\u94fe\u7684\u4e0b\u4e00\u7ea7\u4f20\u9012\uff08\u8ddfJavaWeb\u4e2d\u4ecb\u7ecd\u7684\u8fc7\u6ee4\u5668\u5176\u5b9e\u662f\u5dee\u4e0d\u591a\u7684\uff09\\n            return chain.filter(exchange);\\n        }else {\\n            //\u76f4\u63a5\u5728\u8fd9\u91cc\u4e0d\u518d\u5411\u4e0b\u4f20\u9012\uff0c\u7136\u540e\u8fd4\u56de\u54cd\u5e94\\n            return exchange.getResponse().setComplete();\\n        }\\n    }\\n    @Override\\n    public int getOrder() {\\n        return 0;\\n    }\\n}\\n```\\n\\n> \u5355\u4e2a\u8def\u7531\u7684\u8fc7\u6ee4\u5668Order\u503c\u6309\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4ece1\u5f00\u59cb\u9012\u589e\\n> \u5f53Order\u503c\u4e00\u6837\u65f6 \u5168\u5c40\u8def\u7531\u8fc7\u6ee4\u5668\u6267\u884c `\u4f18\u4e8e` \u5355\u72ec\u7684\u8def\u7531\u8fc7\u6ee4\u5668\u6267\u884c\u3002\\n\\n\u7cfb\u7edf\u5168\u5c40\u8fc7\u6ee4\u5668\u6267\u884c\u987a\u5e8f\uff08\u540d\u79f0\u3001order\uff09"},{"id":"spring-cloud-hystrix","metadata":{"permalink":"/arcetop/blog/spring-cloud-hystrix","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-hystrix.md","source":"@site/blog/2023-03-12-spring-cloud-hystrix.md","title":"Hystrix \u670d\u52a1\u7194\u65ad","description":"\u6d4b\u8bd5","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"SpringCloud","permalink":"/arcetop/blog/tags/spring-cloud"},{"label":"Java","permalink":"/arcetop/blog/tags/java"}],"readingTime":2.52,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-hystrix","title":"Hystrix \u670d\u52a1\u7194\u65ad","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["SpringCloud","Java"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"Gateway \u670d\u52a1\u7f51\u5173","permalink":"/arcetop/blog/spring-cloud-gateway"},"nextItem":{"title":"Seata \u5206\u5e03\u5f0f\u4e8b\u52a1","permalink":"/arcetop/blog/spring-cloud-seata"}},"content":"[Hystrix\u5b98\u65b9\u6587\u6863](https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/1.3.5.RELEASE/single/spring-cloud-netflix.html#_circuit_breaker_hystrix_clients)\\n\u5728\u9700\u8981\u8fdb\u884c\u670d\u52a1\u7194\u65ad\u7684\u670d\u52a1pom\u6587\u4ef6\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>\\n  <version>2.2.10.RELEASE</version>\\n</dependency>\\n```\\n\x3c!-- truncate --\x3e\\n\\n\u542f\u52a8\u7c7b\u6dfb\u52a0\u6ce8\u89e3 `@EnableHystrix`\\n\\n### \u670d\u52a1\u964d\u7ea7  _@HystrixCommand_\\n\\n```java\\n@RestController\\n@RequestMapping(\\"/borrows\\")\\npublic class BorrowController {\\n    @Resource\\n    private BorrowService borrowService;\\n\\n    @HystrixCommand(fallbackMethod = \\"onError\\")    //\u4f7f\u7528@HystrixCommand\u6765\u6307\u5b9a\u5907\u9009\u65b9\u6848\\n    @GetMapping(\\"/{uid}\\")\\n    public UserBorrowDetail findUserBorrowDetailByUid(@PathVariable int uid){\\n        return borrowService.getUserBorrowDetailByUid(uid);\\n    }\\n\\n    //\u5907\u9009\u65b9\u6848\uff0c\u8fd9\u91cc\u76f4\u63a5\u8fd4\u56de\u7a7a\u5217\u8868\u4e86\\n    //\u6ce8\u610f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u8981\u548c\u4e0a\u9762\u7684\u4e00\u81f4\\n    UserBorrowDetail onError(int uid){\\n        return new UserBorrowDetail(null, Collections.emptyList());\\n    }\\n}\\n```\\n\\n### \u670d\u52a1\u7194\u65ad Circuit Breaker\\n\\n\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u591a\u6b21\u8c03\u7528\u5931\u8d25\uff0c\u90a3\u4e48\u4ece\u670d\u52a1\u964d\u7ea7\u76f4\u63a5\u5347\u7ea7\u4e3a\u7194\u65ad\u3002\\n\\n### \u4f7f\u7528OpenFeign\u5b9e\u73b0\u964d\u7ea7  _@FeignClient_\\n\\n[Feign](https://www.yuque.com/arce/glxhka/krza54?view=doc_embed)\\n\u7ed9\u9700\u8981\u6dfb\u52a0\u670d\u52a1\u7684 Client \u6dfb\u52a0`fallback` \u5c5e\u6027\\n`@FeignClient(value = \\"UserService\\",fallback = UserFallbackClient.class)`\\n\u5b9e\u73b0Client\u7c7b\\n\\n```java\\n@Component   //\u6ce8\u610f\uff0c\u9700\u8981\u5c06\u5176\u6ce8\u518c\u4e3aBean\uff0cFeign\u624d\u80fd\u81ea\u52a8\u6ce8\u5165\\npublic class UserFallbackClient implements UserClient{\\n    @Override\\n    public User getUserById(int uid) {   //\u8fd9\u91cc\u6211\u4eec\u81ea\u884c\u5bf9\u5176\u8fdb\u884c\u5b9e\u73b0\uff0c\u5e76\u8fd4\u56de\u6211\u4eec\u7684\u66ff\u4ee3\u65b9\u6848\\n        User user = new User();\\n        user.setName(\\"\u6211\u662f\u66ff\u4ee3\u65b9\u6848\\");\\n        return user;\\n    }\\n}\\n```\\n\\n\u5728\u8be5\u670d\u52a1\u7684`application.xml`\u4e2d\u914d\u7f6efeign \uff0c\u53ef\u4ee5\u53d6\u6d88`BorrowController` \u7684`@HystrixCommand`\u6ce8\u89e3\\n\\n```yaml\\nfeign:\\n  circuitbreaker:\\n    enabled: true\\n```\\n\\n\u6b64\u65f6\u5982\u679c`UserService` \u6302\u6389\uff0c\u4f1a\u6267\u884c`UserFallbackClient`\u7684\u66ff\u4ee3\u65b9\u6848\\n\\n### \u76d1\u63a7\u9762\u677f Hystrix Dashboard\\n\\n\u65b0\u5efa\u4e00\u4e2a `Hystrix Dashboard` \u670d\u52a1\\n\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>\\n  <version>2.2.10.RELEASE</version>\\n</dependency>\\n```\\n\\n\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6 application.yml\\n\\n```yaml\\nserver:\\n  port: 8900\\nhystrix:\\n  dashboard:\\n    # \u5c06localhost\u6dfb\u52a0\u5230\u767d\u540d\u5355\uff0c\u9ed8\u8ba4\u662f\u4e0d\u5141\u8bb8\u7684\\n    proxy-stream-allow-list: \\"localhost\\"\\n```\\n\\n\u8bbf\u95ee\u670d\u52a1\uff1a[\u672c\u5730 Hystrix Dashboard \u670d\u52a1](http://localhost:8900/hystrix)\\n![image.png](img/2023-03-12-spring-cloud-hystrix/1660714701866-62361852-ddb2-4fcb-9fc2-f68e3b208a40.png)\\n\u4e3a\u9700\u8981\u76d1\u63a7\u7684\u5fae\u670d\u52a1\u6dfb\u52a0`actuator`\u4f9d\u8d56\\n\\n```yaml\\n<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-actuator</artifactId>\\n</dependency>\\n```\\n\\n> Actuator\u662fSpringBoot\u7a0b\u5e8f\u7684\u76d1\u63a7\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5065\u5eb7\u68c0\u67e5\uff0c\u8bb0\u5f55\u4fe1\u606f\u7b49\\n\\n\u5e76\u6dfb\u52a0\u66b4\u9732\u914d\u7f6e\\n\\n```yaml\\nmanagement:\\n  endpoints:\\n    web:\\n      exposure:\\n        include: \'*\'\\n```\\n\\n\u8bbf\u95ee\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u76d1\u63a7\u9762\u677f [\u672c\u5730BorrowService\u670d\u52a1\u76d1\u63a7\u9762\u677f](http://localhost:8900/hystrix/monitor?stream=http%3A%2F%2Flocalhost%3A8082%2Factuator%2Fhystrix.stream)\\n\\n![image.png](img/2023-03-12-spring-cloud-hystrix/1660715063803-1f05ba9b-6025-42c9-896e-8ae963d8b580.png)\\n\u672a\u5904\u7406\u8bf7\u6c42\u65f6\u90fd\u662f\u663e\u793a`Loading`\u72b6\u6001\\n![image.png](img/2023-03-12-spring-cloud-hystrix/1660715175423-9f6dd5e6-77d5-4b65-9c73-dbf1565d7b52.png)\\n\u5f53\u6211\u4eec\u7684\u67d0\u4e2a\u670d\u52a1\u6302\u6389\u65f6\uff0c\u591a\u6b21\u8bbf\u95ee\u4f1a\u9020\u6210\u5f00\u542f\u670d\u52a1\u7194\u65ad\\n![image.png](img/2023-03-12-spring-cloud-hystrix/1660715326437-d867d012-aa37-422e-b5fb-352f93fb67e6.png)\\n> \u541e\u5410\u91cf\u8d8a\u5927\uff0c\u7ea2\u8272\uff08\u7eff\u8272\uff09\u5706\u5708\u8d8a\u5927"},{"id":"spring-cloud-seata","metadata":{"permalink":"/arcetop/blog/spring-cloud-seata","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-seata.md","source":"@site/blog/2023-03-12-spring-cloud-seata.md","title":"Seata \u5206\u5e03\u5f0f\u4e8b\u52a1","description":"\u6d4b\u8bd5","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"Unity","permalink":"/arcetop/blog/tags/unity"},{"label":"CSharp","permalink":"/arcetop/blog/tags/c-sharp"}],"readingTime":0.25,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-seata","title":"Seata \u5206\u5e03\u5f0f\u4e8b\u52a1","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["Unity","CSharp"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"Hystrix \u670d\u52a1\u7194\u65ad","permalink":"/arcetop/blog/spring-cloud-hystrix"},"nextItem":{"title":"Sentinel \u670d\u52a1\u5b88\u536b","permalink":"/arcetop/blog/spring-cloud-sentinel"}},"content":"[Seata\u5b98\u65b9\u6587\u6863](https://seata.io/zh-cn/docs/overview/what-is-seata.html)\\n\\n\x3c!-- truncate --\x3e\\n\\n### \u5206\u5e03\u5f0f\u4e8b\u52a1\u4ecb\u7ecd\\n\\n### \u5206\u5e03\u5f0f\u73af\u5883\u642d\u5efa\\n\\n### \u5206\u5e03\u5f0f\u73af\u5883\u89e3\u51b3\u65b9\u6848\\n\\n### \u5b9e\u73b0\u673a\u5236\u6982\u8ff0\\n\\n### \u9ed8\u8ba4\u914d\u7f6e\u90e8\u7f72\\n\\n### \u914d\u7f6eNacos\u90e8\u7f72"},{"id":"spring-cloud-sentinel","metadata":{"permalink":"/arcetop/blog/spring-cloud-sentinel","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-03-12-spring-cloud-sentinel.md","source":"@site/blog/2023-03-12-spring-cloud-sentinel.md","title":"Sentinel \u670d\u52a1\u5b88\u536b","description":"\u6d41\u91cf\u63a7\u5236\u3001\u9650\u6d41\u548c\u5f02\u5e38\u5904\u7406\u3001\u70ed\u70b9\u53c2\u6570\u9650\u6d41\u3001\u670d\u52a1\u964d\u7ea7\u548c\u670d\u52a1\u7194\u65ad","date":"2023-03-12T00:00:00.000Z","tags":[{"label":"Unity","permalink":"/arcetop/blog/tags/unity"},{"label":"CSharp","permalink":"/arcetop/blog/tags/c-sharp"}],"readingTime":5.68,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"spring-cloud-sentinel","title":"Sentinel \u670d\u52a1\u5b88\u536b","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d41\u91cf\u63a7\u5236\u3001\u9650\u6d41\u548c\u5f02\u5e38\u5904\u7406\u3001\u70ed\u70b9\u53c2\u6570\u9650\u6d41\u3001\u670d\u52a1\u964d\u7ea7\u548c\u670d\u52a1\u7194\u65ad","tags":["Unity","CSharp"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"Seata \u5206\u5e03\u5f0f\u4e8b\u52a1","permalink":"/arcetop/blog/spring-cloud-seata"},"nextItem":{"title":"yarn npm \u4ee3\u7406 \u8bbe\u7f6e","permalink":"/arcetop/blog/npm-yarn-set-proxy"}},"content":"[\u5b98\u65b9\u6587\u6863](https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D)\\n[\u4e0b\u8f7d\u5730\u5740](https://github.com/alibaba/Sentinel/releases)\\n\u5728\u5fae\u670d\u52a1\u4e2d\u5f15\u5165\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n    <groupId>com.alibaba.cloud</groupId>\\n    <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>\\n</dependency>\\n```\\n\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\\n\\n```yaml\\nspring:\\n  cloud:\\n    sentinel:\\n      transport:\\n        # \u6dfb\u52a0\u76d1\u63a7\u9875\u9762\u5730\u5740\u5373\u53ef\\n        dashboard: localhost:8858\\n```\\n\\n[\u8bbf\u95ee\u63a7\u5236\u9762\u677f](http://localhost:8858/#/dashboard)\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660900767584-0d69e6f1-3041-4a1c-9431-27a292ad0438.png)\\n\\n\x3c!-- truncate --\x3e\\n\\n### \u6d41\u91cf\u63a7\u5236\\n\\n\u9650\u6d41\u7684\u65b9\u6848\\n\\n- \u5feb\u901f\u62d2\u7edd\\n- \u9884\u70ed\uff08\u7f13\u6162\u63d0\u9ad8\u9608\u503c\uff09\\n- \u6392\u961f\u7b49\u5f85\\n\\n\u5224\u65ad\u662f\u5426\u8d85\u8fc7\u6d41\u91cf\u9608\u503c\u7684\u7b97\u6cd5\\n\\n- \u6f0f\u6876\u7b97\u6cd5\\n- \u4ee4\u724c\u6876\u7b97\u6cd5\\n- \u56fa\u5b9a\u65f6\u95f4\u7a97\u53e3\u7b97\u6cd5\\n- \u6ed1\u52a8\u65f6\u95f4\u7a97\u53e3\u7b97\u6cd5\\n\\n\u5bf9\u56fe\u4e66\u501f\u9605\u63a5\u53e3\u8fdb\u884c\u6d41\u63a7\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660917238346-0d90f864-548a-44bf-9210-5b2cd7ff50d5.png)\\n\u6d41\u63a7\u6548\u679c\u5206\u522b\u5bf9\u5e94\u9650\u6d41\u7684\u4e09\u79cd\u65b9\u6848\\n\\n> QPS = req/sec = \u8bf7\u6c42\u6570/\u79d2\u3002. \u5b83\u4ee3\u8868\u7684\u662f\u670d\u52a1\u5668\u7684\u673a\u5668\u7684\u6027\u80fd\u6700\u5927\u541e\u5410\u80fd\u529b\u3002\\n> \u5e76\u53d1\u7ebf\u7a0b\u6570\u662f\u6309\u670d\u52a1\u5f53\u524d\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u7684\\n> \u6d41\u63a7\u6a21\u5f0f\uff1a\\n>\\n> - \u76f4\u63a5\uff1a\u53ea\u9488\u5bf9\u4e8e\u5f53\u524d\u63a5\u53e3\u3002\\n> - \u5173\u8054\uff1a\u5f53\u5173\u8054\u7684\u5176\u4ed6\u63a5\u53e3\u8d85\u8fc7\u5355\u673a\u9608\u503c\u65f6\uff0c\u4f1a\u5bfc\u81f4\u5f53\u524d\u63a5\u53e3\u88ab\u9650\u6d41\u3002\\n> - \u94fe\u8def\uff1a\u66f4\u7ec6\u7c92\u5ea6\u7684\u9650\u6d41\uff0c\u80fd\u7cbe\u786e\u5230\u5177\u4f53\u7684\u65b9\u6cd5\u3002\\n\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660917272387-f320d0ff-816f-49b9-9126-c616065d1f55.png)\\n\u94fe\u8def\u6d41\u63a7\u6a21\u5f0f\u53ef\u4ee5\u5728\u65b9\u6cd5\u4e0a\u52a0\u4e0a`@SentinelResource(value=\\"xxx\\")`\u6ce8\u89e3\uff0cvalue\u503c\u5c31\u662f\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8d44\u6e90\u540d\uff0c\u4f7f\u7528\u94fe\u8def\u6a21\u5f0f\u8981\u914d\u7f6e\u5173\u95edContext\u6536\u655b`spring.cloud.sentinel.web-context-unify=false`\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660918168697-9769c813-157f-4b1c-82ba-a51d5cbd70c7.png)\\n\u5165\u53e3\u8d44\u6e90\u53ef\u4ee5\u6307\u5b9a\u5bf9\u67d0\u4e00\u4e2a\u63a5\u53e3\u8fdb\u884c\u6d41\u63a7\\n\\n### \u9650\u6d41\u548c\u5f02\u5e38\u5904\u7406\\n\\n\u53ef\u4ee5\u4fee\u6539\u9650\u6d41\u72b6\u6001\u8fd4\u56de\u7684\u6570\u636e\uff0c\u9ed8\u8ba4\u662f`Blocked by sentinel \uff08flow limiting\uff09`\\n\u4fee\u6539`spring.cloud.sentinel.block-page=\\"\u8d44\u6e90\u540d\u79f0\\"`\uff0c\u5982\u4e0b\u65b9\u6cd5\u8d44\u6e90\u540d`/blocked`\\n\\n```java\\n@RequestMapping(\\"/blocked\\")\\nJSONObject blocked(){\\n    JSONObject object = new JSONObject();\\n    object.put(\\"code\\", 403);\\n    object.put(\\"success\\", false);\\n    object.put(\\"massage\\", \\"\u60a8\u7684\u8bf7\u6c42\u9891\u7387\u8fc7\u5feb\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5\uff01\\");\\n    return object;\\n}\\n```\\n\\n\u5bf9\u4e8e\u94fe\u8def\u6d41\u63a7\u6a21\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0`@SentinelResource`\u7684`blockHandler`\u53c2\u6570\uff0c\u4e3a\u5176\u6307\u5b9a\u4e00\u4e2a\u9650\u6d41\u5904\u7406\u65b9\u6cd5\\n\\n```java\\n@Override\\n@SentinelResource(value = \\"getBorrow\\", blockHandler = \\"blocked\\")   //\u6307\u5b9ablockHandler\uff0c\u4e5f\u5c31\u662f\u88ab\u9650\u6d41\u4e4b\u540e\u7684\u66ff\u4ee3\u89e3\u51b3\u65b9\u6848\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u629b\u51fa\u5f02\u5e38\u7684\u5f62\u5f0f\u4e86\\npublic UserBorrowDetail getUserBorrowDetailByUid(int uid) {\\n\\n    List<Borrow> borrowsByUid = borrowMapper.getBorrowsByUid(uid);\\n    User user = userClient.getUserById(uid);\\n    List<Book> bookList = borrowsByUid\\n        .stream()\\n        .map(borrow ->bookClient.getBookById(borrow.getBid()))\\n        .collect(Collectors.toList());\\n    return new UserBorrowDetail(user,bookList);\\n}\\n//\u66ff\u4ee3\u65b9\u6848\uff0c\u6ce8\u610f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u9700\u8981\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u53c2\u6570\u6700\u540e\u8fd8\u9700\u8981\u989d\u5916\u6dfb\u52a0\u4e00\u4e2aBlockException\\npublic UserBorrowDetail blocked(int uid, BlockException e) {\\n    return new UserBorrowDetail(null, Collections.emptyList());\\n}\\n```\\n\\n`blockHandler`\u53ea\u80fd\u5904\u7406\u9650\u6d41\u60c5\u51b5\u4e0b\u629b\u51fa\u7684\u5f02\u5e38\\n`@SentinelResource`\u6ce8\u89e3\u8fd8\u6709`fallback`\u548c`exceptionsToIgnore`\u53c2\u6570\\n> fallback\u6307\u5b9a\u51fa\u73b0\u5f02\u5e38\u65f6\u7684\u66ff\u4ee3\u65b9\u6848\\n> exceptionsToIgnore\u5ffd\u7565\u90a3\u4e9b\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u5f02\u5e38\u51fa\u73b0\u65f6\u4e0d\u4f7f\u7528\u66ff\u4ee3\u65b9\u6848\\n\\n```java\\n@RequestMapping(\\"/test\\")\\n@SentinelResource(value = \\"test\\",\\n                  fallback = \\"except\\",    //fallback\u6307\u5b9a\u51fa\u73b0\u5f02\u5e38\u65f6\u7684\u66ff\u4ee3\u65b9\u6848\\n                  exceptionsToIgnore = IOException.class)  //\u5ffd\u7565\u90a3\u4e9b\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e9b\u5f02\u5e38\u51fa\u73b0\u65f6\u4e0d\u4f7f\u7528\u66ff\u4ee3\u65b9\u6848\\nString test(){\\n    throw new RuntimeException(\\"HelloWorld\uff01\\");\\n}\\n\\n//\u66ff\u4ee3\u65b9\u6cd5\u5fc5\u987b\u548c\u539f\u65b9\u6cd5\u8fd4\u56de\u503c\u548c\u53c2\u6570\u4e00\u81f4\uff0c\u6700\u540e\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2aThrowable\u4f5c\u4e3a\u53c2\u6570\u63a5\u53d7\u5f02\u5e38\\nString except(Throwable t){\\n    return t.getMessage();\\n}\\n```\\n\\n\u5f53\u540c\u4e00\u8d44\u6e90\u540c\u65f6\u4f7f\u7528`fallback`\u548c`blockHandler`\u65f6\uff0c\u5728\u51fa\u73b0\u9650\u6d41\u65f6\u4f1a\u6267\u884c`blockHandler`\uff0c\u5f53\u672a\u51fa\u73b0\u9650\u6d41\u4f46\u65b9\u6cd5\u51fa\u73b0\u5176\u4ed6\u5f02\u5e38\u65f6\u6267\u884c`fallback`\u3002\\n\\n### \u70ed\u70b9\u53c2\u6570\u9650\u6d41\\n\\n\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u9650\u6d41\\n\\n```java\\n@RequestMapping(\\"/test\\")\\n@SentinelResource(\\"test\\")   //\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u6dfb\u52a0@SentinelResource\u624d\u53ef\u4ee5\uff0c\u7528\u6237\u8d44\u6e90\u540d\u79f0\u5c31\u4f7f\u7528\u8fd9\u91cc\u5b9a\u4e49\u7684\u8d44\u6e90\u540d\u79f0\\nString findUserBorrows2(@RequestParam(value = \\"a\\", required = false) int a,\\n                        @RequestParam(value = \\"b\\", required = false) int b,\\n                        @RequestParam(value = \\"c\\",required = false) int c) {\\n    return \\"\u8bf7\u6c42\u6210\u529f\uff01a = \\"+a+\\", b = \\"+b+\\", c = \\"+c;\\n}\\n```\\n\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660920297970-79d88dd9-0795-4b77-8a7f-bbf5b391b673.png)\\n\u8fd9\u4e2a\u89c4\u5219\u8868\u793a\u5bf9\u8d44\u6e90\u540d\u4e3atest\u8fdb\u884c\u70ed\u70b9\u53c2\u6570\u9650\u6d41\uff0c\u53c2\u6570\u7d22\u5f15\u4e3a0\uff0c\u5355\u673a\u9608\u503c\u4e3a0\u5c31\u662f\u6bcf\u79d2\u5141\u8bb8\u8bf7\u6c42\u6570\u4e3a0\uff0c\u53c2\u6570\u989d\u5916\u9879\u65f6\u53ef\u9009\u914d\u7f6e\u9879\uff0c\u5982\u679c\u53c2\u6570\u7d22\u5f15\u4e3a0\u7684\u53c2\u6570\u503c\u4e3a0\uff0c\u53ef\u4ee5\u6bcf\u79d2\u8fdb\u884c1\u6b21\u8bf7\u6c42\\n\\n### \u670d\u52a1\u964d\u7ea7\u548c\u670d\u52a1\u7194\u65ad\\n\\n\u4e09\u79cd\u7194\u65ad\u89c4\u5219\\n\\n- \u6162\u8c03\u7528\u6bd4\u4f8b\\n- \u5f02\u5e38\u6bd4\u4f8b\\n- \u5f02\u5e38\u6570\\n\\n#### \u6162\u8c03\u7528\u6bd4\u4f8b\\n\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660921894970-c3270b37-6705-4b9a-86a8-fbad17fa9951.png)\\n\u8bbf\u95ee\u8d44\u6e90\u540d\u4e3a`/test`\u7684\u63a5\u53e3\uff0c\u5982\u679c\u4e00\u6b21\u8bf7\u6c42\u7684\u5904\u7406\u65f6\u95f4\u8d85\u8fc7\u4e86\u6307\u5b9a\u7684500\u6beb\u79d2\uff0c\u5c06\u5f00\u542f\u7194\u65ad\uff0c\u65f6\u957f\u4e3a5\u79d2\uff0c\u6bd4\u4f8b\u9608\u503c\u8868\u793a\u57281\uff08\u7edf\u8ba1\u65f6\u957f\uff09\u79d2\u5185\u6700\u5c0f\u8bf7\u6c42\u6570\u4e2d\u8bf7\u6c42\u7684\u5904\u7406\u65f6\u95f4\u8d85\u8fc7\u4e86500\u6beb\u79d2\uff08\u6700\u5927RT\uff09\u7684\u6bd4\u4f8b\\n\\n#### \u5f02\u5e38\u6bd4\u4f8b\\n\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660922268397-788ec673-dc48-4d6e-9f55-ec1bb9211e9a.png)\\n\u8bbf\u95ee\u8d44\u6e90\u540d\u4e3a`/test`\u7684\u63a5\u53e3\uff0c\u5728\u7edf\u8ba1\u65f6\u957f\u5185\u6700\u5c0f\u8bf7\u6c42\u6570\u6709\u8d85\u8fc750%\u7684\u8bf7\u6c42\u51fa\u73b0\u5f02\u5e38\uff0c\u5c06\u8fdb\u884c\u7194\u65ad\uff0c\u65f6\u957f\u4e3a5\u79d2\\n\\n#### \u5f02\u5e38\u6570\\n\\n![image.png](img/2023-03-12-spring-cloud-sentinel/1660922425885-7bb90d21-1c29-45a4-a37e-4e613ccca3df.png)\\n\u8bbf\u95ee\u8d44\u6e90\u540d\u4e3a`/test`\u7684\u63a5\u53e3\uff0c\u5728`\u7edf\u8ba1\u65f6\u957f`\u5185`\u6700\u5c0f\u8bf7\u6c42\u6570`\u6709\u8d85\u8fc7`\u5f02\u5e38\u6570`\u7684\u8bf7\u6c42\u51fa\u73b0\u5f02\u5e38\uff0c\u5c06\u8fdb\u884c\u7194\u65ad\uff0c\u65f6\u957f\u4e3a5\u79d2"},{"id":"npm-yarn-set-proxy","metadata":{"permalink":"/arcetop/blog/npm-yarn-set-proxy","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-01-13-npm-yarn-set-proxy.md","source":"@site/blog/2023-01-13-npm-yarn-set-proxy.md","title":"yarn npm \u4ee3\u7406 \u8bbe\u7f6e","description":"\u5305\u7ba1\u7406\u5668 yarn npm \u8bbe\u7f6e\u4ee3\u7406","date":"2023-01-13T00:00:00.000Z","tags":[{"label":"npm","permalink":"/arcetop/blog/tags/npm"},{"label":"yarn","permalink":"/arcetop/blog/tags/yarn"}],"readingTime":0.53,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"npm-yarn-set-proxy","title":"yarn npm \u4ee3\u7406 \u8bbe\u7f6e","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u5305\u7ba1\u7406\u5668 yarn npm \u8bbe\u7f6e\u4ee3\u7406","tags":["npm","yarn"],"oid":"oid"},"unlisted":false,"prevItem":{"title":"Sentinel \u670d\u52a1\u5b88\u536b","permalink":"/arcetop/blog/spring-cloud-sentinel"},"nextItem":{"title":"Nacos \u6ce8\u518c\u4e2d\u5fc3\u4e0e\u670d\u52a1\u76d1\u6d4b","permalink":"/arcetop/blog/springcloud-nacos-note"}},"content":"### npm \u548c yarn \u8f6c\u6362\u6dd8\u5b9d\u6e90\u548c\u5b98\u65b9\u6e90\\n\\n```shell\\nnpm config set registry http://registry.npm.taobao.org/\\nnpm config set registry https://registry.npmjs.org/\\n\\nyarn config set registry http://registry.npm.taobao.org/\\nyarn config set registry https://registry.npmjs.org/\\n```\\n\x3c!-- truncate --\x3e\\n\\n### npm \u8bbe\u7f6e\u4ee3\u7406\\n\\n```shell\\nnpm config set proxy http://127.0.0.1:8001\\nnpm config set https-proxy http://127.0.0.1:8001\\n```\\n\\n### npm \u5220\u9664\u4ee3\u7406\\n\\n```shell\\nnpm config delete proxy\\nnpm config delete https-proxy\\n```\\n\\n### yarn \u8bbe\u7f6e\u4ee3\u7406\\n\\n```shell\\nyarn config set proxy http://127.0.0.1:8001\\nyarn config set https-proxy http://127.0.0.1:8001\\n```\\n\\n### yarn \u5220\u9664\u4ee3\u7406\\n\\n```shell\\nyarn config delete proxy\\nyarn config delete https-proxy\\n```"},{"id":"springcloud-nacos-note","metadata":{"permalink":"/arcetop/blog/springcloud-nacos-note","editUrl":"https://github.com/charles0122/arce.top/edit/main/arce.top/blog/2023-01-02-springcloud-nacos-note.md","source":"@site/blog/2023-01-02-springcloud-nacos-note.md","title":"Nacos \u6ce8\u518c\u4e2d\u5fc3\u4e0e\u670d\u52a1\u76d1\u6d4b","description":"\u6d4b\u8bd5","date":"2023-01-02T00:00:00.000Z","tags":[{"label":"SpringCloud","permalink":"/arcetop/blog/tags/spring-cloud"},{"label":"Nacos","permalink":"/arcetop/blog/tags/nacos"},{"label":"Java","permalink":"/arcetop/blog/tags/java"}],"readingTime":3.575,"hasTruncateMarker":true,"authors":[{"name":"Arce","title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","url":"https://github.com/charles0122","imageURL":"https://avatars.githubusercontent.com/u/70085736?v=4"}],"frontMatter":{"slug":"springcloud-nacos-note","title":"Nacos \u6ce8\u518c\u4e2d\u5fc3\u4e0e\u670d\u52a1\u76d1\u6d4b","author":"Arce","author_title":"\u72ec\u7acb\u6e38\u620f\u5f00\u53d1\u8005","author_url":"https://github.com/charles0122","author_image_url":"https://avatars.githubusercontent.com/u/70085736?v=4","description":"\u6d4b\u8bd5","tags":["SpringCloud","Nacos","Java"],"activityId":"\u76f8\u5173\u52a8\u6001 ID","bvid":"\u76f8\u5173\u89c6\u9891 ID\uff08\u4e0e activityId 2\u9009\u4e00\uff09","oid":"oid"},"unlisted":false,"prevItem":{"title":"yarn npm \u4ee3\u7406 \u8bbe\u7f6e","permalink":"/arcetop/blog/npm-yarn-set-proxy"}},"content":"[Nacos\u5b98\u65b9\u6587\u6863](https://spring-cloud-alibaba-group.github.io/github-pages/2021/zh-cn/index.html)\\n\\n[\u4e0b\u8f7d\u5730\u5740](https://github.com/alibaba/nacos/releases)\\n\\n### \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\\n\\n\u5728\u7236\u5de5\u7a0b\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n  <groupId>org.mybatis.spring.boot</groupId>\\n  <artifactId>mybatis-spring-boot-starter</artifactId>\\n  <version>2.2.0</version>\\n</dependency>\\n\\n\x3c!-- \u8fd9\u91cc\u5f15\u5165\u6700\u65b0\u7684SpringCloud\u4f9d\u8d56 --\x3e\\n<dependency>\\n  <groupId>org.springframework.cloud</groupId>\\n  <artifactId>spring-cloud-dependencies</artifactId>\\n  <version>2021.0.1</version>\\n  <type>pom</type>\\n  <scope>import</scope>\\n</dependency>\\n\\n\x3c!-- \u8fd9\u91cc\u5f15\u5165\u6700\u65b0\u7684SpringCloudAlibaba\u4f9d\u8d56\uff0c2021.0.1.0\u7248\u672c\u652f\u6301SpringBoot2.6.X --\x3e\\n<dependency>\\n  <groupId>com.alibaba.cloud</groupId>\\n  <artifactId>spring-cloud-alibaba-dependencies</artifactId>\\n  <version>2021.0.1.0</version>\\n  <type>pom</type>\\n  <scope>import</scope>\\n</dependency>\\n```\\n\x3c!-- truncate --\x3e\\n\u5728\u9700\u8981\u88ab\u53d1\u73b0\u7684\u5fae\u670d\u52a1\u4e2d\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n<dependency>\\n    <groupId>com.alibaba.cloud</groupId>\\n    <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\\n</dependency>\\n```\\n\\n\u4fee\u6539\u5fae\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\\n\\n```xml\\nserver:\\n # \u4e4b\u540e\u6240\u6709\u7684\u56fe\u4e66\u670d\u52a1\u8282\u70b9\u5c3181XX\u7aef\u53e3\\n  port: 8101\\nspring:\\n  datasource:\\n    driver-class-name: com.mysql.cj.jdbc.Driver\\n    url: jdbc:mysql://cloudstudy.mysql.cn-chengdu.rds.aliyuncs.com:3306/cloudstudy\\n    username: test\\n    password: 123456\\n  # \u5e94\u7528\u540d\u79f0 bookservice\\n  application:\\n    name: bookservice\\n  cloud:\\n    nacos:\\n      discovery:\\n        # \u914d\u7f6eNacos\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740\\n        server-addr: localhost:8848\\n```\\n\\nNacos\u540e\u53f0\u670d\u52a1\u5217\u8868\uff08\u767b\u5f55\u7684\u8d26\u53f7\u5bc6\u7801\u9ed8\u8ba4\u90fd\u662fnacos\uff09\\n\\n![img](.\\\\img\\\\2023-01-02-springcloud-nacos-note\\\\1660836274443-8e90b9c1-3775-459f-82f1-2f04d41bd110.png)\\n\\n\u4f7f\u7528Feign\u5b9e\u73b0\u670d\u52a1\u53d1\u73b0\u8fdc\u7a0b\u8c03\u7528\u4ee5\u53ca\u8d1f\u8f7d\u5747\u8861\\n\\n\u6b64\u5904\u4e3a\u8bed\u96c0\u5185\u5bb9\u5361\u7247\uff0c\u70b9\u51fb\u94fe\u63a5\u67e5\u770b\uff1a[\u67e5\u770b\u8be6\u60c5](https://www.yuque.com/arce/glxhka/krza54)\\n\\n![img](.\\\\img\\\\2023-01-02-springcloud-nacos-note\\\\1660836937317-450a2072-1817-4173-8fed-e7f50d7c0913.png)\\n\\nNacos \u670d\u52a1\u5206\u4e3a\u4e34\u65f6\u5b9e\u4f8b\u548c\u975e\u4e34\u65f6\u5b9e\u4f8b\\n\\n\u4e34\u65f6\u5b9e\u4f8b\uff1a\u548cEureka\u4e00\u6837\uff0c\u91c7\u7528\u5fc3\u8df3\u673a\u5236\u5411Nacos\u53d1\u9001\u8bf7\u6c42\u4fdd\u6301\u5728\u7ebf\u72b6\u6001\uff0c\u4e00\u65e6\u5fc3\u8df3\u505c\u6b62\uff0c\u4ee3\u8868\u5b9e\u4f8b\u4e0b\u7ebf\uff0c\u4e0d\u4fdd\u7559\u5b9e\u4f8b\u4fe1\u606f\u3002\\n\\n\u975e\u4e34\u65f6\u5b9e\u4f8b\uff1a\u7531Nacos\u4e3b\u52a8\u8fdb\u884c\u8054\u7cfb\uff0c\u5982\u679c\u8fde\u63a5\u5931\u8d25\uff0c\u90a3\u4e48\u4e0d\u4f1a\u79fb\u9664\u5b9e\u4f8b\u4fe1\u606f\uff0c\u800c\u662f\u5c06\u5065\u5eb7\u72b6\u6001\u8bbe\u5b9a\u4e3afalse\uff0c\u76f8\u5f53\u4e8e\u4f1a\u5bf9\u67d0\u4e2a\u5b9e\u4f8b\u72b6\u6001\u6301\u7eed\u5730\u8fdb\u884c\u76d1\u63a7\u3002\\n\\n\u8bbe\u7f6e\u4e3a\u975e\u4e34\u65f6\u7684`spring.cloud.nacos.discovery.ephemeral=false`\\n\\n![img](.\\\\img\\\\2023-01-02-springcloud-nacos-note\\\\1660837471691-8ab40667-84a4-429e-93c5-3228425448de.png)\\n\\n### \u96c6\u7fa4\u5206\u533a\\n\\n\u53ef\u4ee5\u5c06\u4e00\u90e8\u5206\u5b9e\u4f8b\u5212\u5206\u4e3a\u851f\uff08\u7fa4\u7ec4\uff09\\n\\n\u6dfb\u52a0\u914d\u7f6e`spring.cloud.nacos.discovery.cluster-name=Group1`\\n\\n\u5c1d\u8bd5\u5c06\u7528\u6237\u670d\u52a1\u7684\u4e24\u4e2a\u5b9e\u4f8b\u5212\u5206\u4e3a\u4e24\u4e2aGroup\\n\\n![img](.\\\\img\\\\2023-01-02-springcloud-nacos-note\\\\1660838017770-204ce597-2fe7-4da7-a98e-7e02ab643d5c.png)\\n\\n\u63a5\u7740\u6211\u4eec\u5728\u501f\u9605\u670d\u52a1\u4e2d\u5f00\u542fnacos\u7684\u8d1f\u8f7d\u5747\u8861 `spring.cloud.loadbalancer.nacos.enabled=true`\\n\\n\u5f00\u542f\u540e\uff0c\u501f\u9605\u670d\u52a1\uff08\u5728Group1\u4e2d\uff09\u4e2d\u5982\u679c\u4f7f\u7528\u5230\u7528\u6237\u670d\u52a1\uff0c\u5c06\u4f18\u5148\u8c03\u7528\u540c\u851f\u7684\u5b9e\u4f8b\uff0c\u82e5\u8be5\u851f\u6ca1\u6709\u7528\u6237\u670d\u52a1\u5b9e\u4f8b\u6216\u8005\u5b9e\u4f8b\u6302\u4e86\uff0c\u5c31\u4f1a\u8c03\u7528\u5176\u4ed6\u851f\u7684\u7528\u6237\u670d\u52a1\\n\\n\u5982\u679c\u540c\u851f\u4e2d\u6709\u591a\u4e2a\u7528\u6237\u670d\u52a1\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u5b9e\u4f8b\u7684\u6743\u91cd`spring.cloud.nacos.discovery.weight=1` \u6743\u91cd\u9ed8\u8ba4\u4e3a1 \uff0c\u6743\u91cd\u8d8a\u5927\u8d8a\u4f18\u5148\u8c03\u7528\\n\\n### \u914d\u7f6e\u4e2d\u5fc3\\n\\n\u5728\u914d\u7f6e\u7ba1\u7406\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\u670d\u52a1\u7684dev\u914d\u7f6e\\n\\n![img](.\\\\img\\\\2023-01-02-springcloud-nacos-note\\\\1660839099719-29b3e700-b1cc-46b8-b208-89ba46eae150.png)\\n\\n\u5728\u7528\u6237\u670d\u52a1\u7684pom\u6587\u4ef6\u6dfb\u52a0\u4f9d\u8d56\\n\\n```xml\\n <dependency>\\n   <groupId>org.springframework.cloud</groupId>\\n   <artifactId>spring-cloud-starter-bootstrap</artifactId>\\n</dependency>\\n<dependency>\\n  <groupId>com.alibaba.cloud</groupId>\\n  <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\\n</dependency>\\n```\\n\\n\u6dfb\u52a0\u65b0\u7684\u914d\u7f6e\u6587\u4ef6`bootstrap.yml`\\n\\n```xml\\nspring:\\n  application:\\n    name: \\"UserService\\"\\n  profiles:\\n    # \u73af\u5883\u4e5f\u662f\u548c\u914d\u7f6e\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\\n    active: dev\\n  cloud:\\n    nacos:\\n      config:\\n        # \u914d\u7f6e\u6587\u4ef6\u540e\u7f00\u540d\\n        file-extension: yaml\\n        # \u914d\u7f6e\u4e2d\u5fc3\u670d\u52a1\u5668\u5730\u5740\uff0c\u4e5f\u5c31\u662fNacos\u5730\u5740\\n        server-addr: localhost:8848\\n```\\n\\n### \u547d\u540d\u7a7a\u95f4\\n\\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u914d\u7f6e\u6587\u4ef6\u6216\u662f\u670d\u52a1\u5b9e\u4f8b\u5212\u5206\u5230\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u533a\u5206\u5f00\u53d1\u3001\u751f\u4ea7\u73af\u5883\\n\\n![img](.\\\\img\\\\2023-01-02-springcloud-nacos-note\\\\1660842149538-c1807d7e-d306-4689-9c38-be3875729d93.png)\\n\\n\u7ed9\u5fae\u670d\u52a1\u6dfb\u52a0\u914d\u7f6e`spring.cloud.nacos.discovery.namespace=\\"dev-namespace\\"`\u53ef\u5c06\u670d\u52a1\u4ece\u9ed8\u8ba4\u7684public\u5212\u5206\u5230dev\u547d\u540d\u7a7a\u95f4\\n\\n\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u7684\u670d\u52a1\u4e0d\u80fd\u76f8\u4e92\u8c03\u7528\\n\\n### \u96c6\u7fa4\u642d\u5efa\\n\\n[\u5b98\u65b9\u6587\u6863](https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html)"}]}')}}]);